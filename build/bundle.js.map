{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/seedrandom/lib/alea.js","../../node_modules/seedrandom/lib/xor128.js","../../node_modules/seedrandom/lib/xorwow.js","../../node_modules/seedrandom/lib/xorshift7.js","../../node_modules/seedrandom/lib/xor4096.js","../../node_modules/seedrandom/lib/tychei.js","../../node_modules/seedrandom/seedrandom.js","../../node_modules/seedrandom/index.js","../../src/enums.ts","../../src/words_5.ts","../../src/utils.ts","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores.ts","../../src/components/GameIcon.svelte","../../src/components/Header.svelte","../../src/components/board/Tile.svelte","../../src/components/board/Row.svelte","../../src/components/widgets/Definition.svelte","../../src/components/widgets/ContextMenu.svelte","../../src/components/board/Board.svelte","../../src/components/keyboard/Key.svelte","../../src/components/keyboard/Keyboard.svelte","../../src/components/Modal.svelte","../../src/components/settings/Switch.svelte","../../src/components/settings/DropDown.svelte","../../src/components/settings/Setting.svelte","../../src/components/settings/Settings.svelte","../../src/components/widgets/Seperator.svelte","../../src/components/widgets/Share.svelte","../../src/components/widgets/Tutorial.svelte","../../src/components/widgets/Timer.svelte","../../src/components/widgets/Toaster.svelte","../../src/components/widgets/Tips.svelte","../../src/components/widgets/ShareGame.svelte","../../src/components/widgets/stats/Stat.svelte","../../src/components/widgets/stats/Statistics.svelte","../../src/components/widgets/stats/Distribution.svelte","../../src/components/Game.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","export var GameMode;\n(function (GameMode) {\n    GameMode[GameMode[\"daily\"] = 0] = \"daily\";\n    GameMode[GameMode[\"hourly\"] = 1] = \"hourly\";\n    GameMode[GameMode[\"infinite\"] = 2] = \"infinite\";\n    GameMode[GameMode[\"final\"] = 3] = \"final\";\n    // \"minutely\",\n})(GameMode || (GameMode = {}));\n;\nexport var ms;\n(function (ms) {\n    ms[ms[\"SECOND\"] = 1000] = \"SECOND\";\n    ms[ms[\"MINUTE\"] = 60000] = \"MINUTE\";\n    ms[ms[\"HOUR\"] = 3600000] = \"HOUR\";\n    ms[ms[\"DAY\"] = 86400000] = \"DAY\";\n})(ms || (ms = {}));\n;\n","const words = {\n    \"words\": [\n        \"areas\",\n        \"array\",\n        \"asset\",\n        \"audit\",\n        \"award\",\n        \"azure\",\n        \"basis\",\n        \"bases\",\n        \"blank\",\n        \"cache\",\n        \"chart\",\n        \"child\",\n        \"cloud\",\n        \"count\",\n        \"covid\",\n        \"datum\",\n        \"delta\",\n        \"derive\",\n        \"digit\",\n        \"donut\",\n        \"dozen\",\n        \"drill\",\n        \"edges\",\n        \"empty\",\n        \"equal\",\n        \"erase\",\n        \"error\",\n        \"exist\",\n        \"fetch\",\n        \"field\",\n        \"floor\",\n        \"focal\",\n        \"focus\",\n        \"found\",\n        \"fuzzy\",\n        \"gamma\",\n        \"grant\",\n        \"graph\",\n        \"group\",\n        \"index\",\n        \"infer\",\n        \"inner\",\n        \"input\",\n        \"label\",\n        \"layer\",\n        \"least\",\n        \"lines\",\n        \"locus\",\n        \"logic\",\n        \"macro\",\n        \"major\",\n        \"marks\",\n        \"media\",\n        \"merge\",\n        \"micro\",\n        \"minor\",\n        \"model\",\n        \"mongo\",\n        \"munge\",\n        \"nodes\",\n        \"noise\",\n        \"noisy\",\n        \"nosql\",\n        \"order\",\n        \"outer\",\n        \"owner\",\n        \"parse\",\n        \"pilot\",\n        \"pivot\",\n        \"plane\",\n        \"plots\",\n        \"point\",\n        \"polar\",\n        \"power\",\n        \"purge\",\n        \"prime\",\n        \"prove\",\n        \"proxy\",\n        \"query\",\n        \"queue\",\n        \"range\",\n        \"ratio\",\n        \"recur\",\n        \"right\",\n        \"round\",\n        \"rules\",\n        \"scale\",\n        \"score\",\n        \"scout\",\n        \"share\",\n        \"sigma\",\n        \"skill\",\n        \"slice\",\n        \"slope\",\n        \"solve\",\n        \"speak\",\n        \"split\",\n        \"stack\",\n        \"stale\",\n        \"store\",\n        \"story\",\n        \"table\",\n        \"theme\",\n        \"trend\",\n        \"trial\",\n        \"truth\",\n        \"tweak\",\n        \"union\",\n        \"upper\",\n        \"usage\",\n        \"valid\",\n        \"value\",\n        \"wedge\",\n        \"write\",\n        \"wrote\"\n    ],\n    \"valid\": [\n        \"aahed\",\n        \"aalii\",\n        \"aargh\",\n        \"aarti\",\n        \"abaca\",\n        \"abaci\",\n        \"abacs\",\n        \"abaft\",\n        \"abaka\",\n        \"abamp\",\n        \"aband\",\n        \"abash\",\n        \"abask\",\n        \"abaya\",\n        \"abbas\",\n        \"abbed\",\n        \"abbes\",\n        \"abcee\",\n        \"abeam\",\n        \"abear\",\n        \"abele\",\n        \"abers\",\n        \"abets\",\n        \"abies\",\n        \"abler\",\n        \"ables\",\n        \"ablet\",\n        \"ablow\",\n        \"abmho\",\n        \"abohm\",\n        \"aboil\",\n        \"aboma\",\n        \"aboon\",\n        \"abord\",\n        \"abore\",\n        \"abram\",\n        \"abray\",\n        \"abrim\",\n        \"abrin\",\n        \"abris\",\n        \"absey\",\n        \"absit\",\n        \"abuna\",\n        \"abune\",\n        \"abuts\",\n        \"abuzz\",\n        \"abyes\",\n        \"abysm\",\n        \"acais\",\n        \"acari\",\n        \"accas\",\n        \"accoy\",\n        \"acerb\",\n        \"acers\",\n        \"aceta\",\n        \"achar\",\n        \"ached\",\n        \"aches\",\n        \"achoo\",\n        \"acids\",\n        \"acidy\",\n        \"acing\",\n        \"acini\",\n        \"ackee\",\n        \"acker\",\n        \"acmes\",\n        \"acmic\",\n        \"acned\",\n        \"acnes\",\n        \"acock\",\n        \"acold\",\n        \"acred\",\n        \"acres\",\n        \"acros\",\n        \"acted\",\n        \"actin\",\n        \"acton\",\n        \"acyls\",\n        \"adaws\",\n        \"adays\",\n        \"adbot\",\n        \"addax\",\n        \"added\",\n        \"adder\",\n        \"addio\",\n        \"addle\",\n        \"adeem\",\n        \"adhan\",\n        \"adieu\",\n        \"adios\",\n        \"adits\",\n        \"adman\",\n        \"admen\",\n        \"admix\",\n        \"adobo\",\n        \"adown\",\n        \"adoze\",\n        \"adrad\",\n        \"adred\",\n        \"adsum\",\n        \"aduki\",\n        \"adunc\",\n        \"adust\",\n        \"advew\",\n        \"adyta\",\n        \"adzed\",\n        \"adzes\",\n        \"aecia\",\n        \"aedes\",\n        \"aegis\",\n        \"aeons\",\n        \"aerie\",\n        \"aeros\",\n        \"aesir\",\n        \"afald\",\n        \"afara\",\n        \"afars\",\n        \"afear\",\n        \"aflaj\",\n        \"afore\",\n        \"afrit\",\n        \"afros\",\n        \"agama\",\n        \"agami\",\n        \"agars\",\n        \"agast\",\n        \"agave\",\n        \"agaze\",\n        \"agene\",\n        \"agers\",\n        \"agger\",\n        \"aggie\",\n        \"aggri\",\n        \"aggro\",\n        \"aggry\",\n        \"aghas\",\n        \"agila\",\n        \"agios\",\n        \"agism\",\n        \"agist\",\n        \"agita\",\n        \"aglee\",\n        \"aglet\",\n        \"agley\",\n        \"agloo\",\n        \"aglus\",\n        \"agmas\",\n        \"agoge\",\n        \"agone\",\n        \"agons\",\n        \"agood\",\n        \"agria\",\n        \"agrin\",\n        \"agros\",\n        \"agued\",\n        \"agues\",\n        \"aguna\",\n        \"aguti\",\n        \"aheap\",\n        \"ahent\",\n        \"ahigh\",\n        \"ahind\",\n        \"ahing\",\n        \"ahint\",\n        \"ahold\",\n        \"ahull\",\n        \"ahuru\",\n        \"aidas\",\n        \"aided\",\n        \"aides\",\n        \"aidoi\",\n        \"aidos\",\n        \"aiery\",\n        \"aigas\",\n        \"aight\",\n        \"ailed\",\n        \"aimed\",\n        \"aimer\",\n        \"ainee\",\n        \"ainga\",\n        \"aioli\",\n        \"aired\",\n        \"airer\",\n        \"airns\",\n        \"airth\",\n        \"airts\",\n        \"aitch\",\n        \"aitus\",\n        \"aiver\",\n        \"aiyee\",\n        \"aizle\",\n        \"ajies\",\n        \"ajiva\",\n        \"ajuga\",\n        \"ajwan\",\n        \"akees\",\n        \"akela\",\n        \"akene\",\n        \"aking\",\n        \"akita\",\n        \"akkas\",\n        \"alaap\",\n        \"alack\",\n        \"alamo\",\n        \"aland\",\n        \"alane\",\n        \"alang\",\n        \"alans\",\n        \"alant\",\n        \"alapa\",\n        \"alaps\",\n        \"alary\",\n        \"alate\",\n        \"alays\",\n        \"albas\",\n        \"albee\",\n        \"alcid\",\n        \"alcos\",\n        \"aldea\",\n        \"alder\",\n        \"aldol\",\n        \"aleck\",\n        \"alecs\",\n        \"alefs\",\n        \"aleft\",\n        \"aleph\",\n        \"alews\",\n        \"aleye\",\n        \"alfas\",\n        \"algal\",\n        \"algas\",\n        \"algid\",\n        \"algin\",\n        \"algor\",\n        \"algum\",\n        \"alias\",\n        \"alifs\",\n        \"aline\",\n        \"alist\",\n        \"aliya\",\n        \"alkie\",\n        \"alkos\",\n        \"alkyd\",\n        \"alkyl\",\n        \"allee\",\n        \"allel\",\n        \"allis\",\n        \"allod\",\n        \"allyl\",\n        \"almah\",\n        \"almas\",\n        \"almeh\",\n        \"almes\",\n        \"almud\",\n        \"almug\",\n        \"alods\",\n        \"aloed\",\n        \"aloes\",\n        \"aloha\",\n        \"aloin\",\n        \"aloos\",\n        \"alowe\",\n        \"altho\",\n        \"altos\",\n        \"alula\",\n        \"alums\",\n        \"alure\",\n        \"alvar\",\n        \"alway\",\n        \"amahs\",\n        \"amain\",\n        \"amate\",\n        \"amaut\",\n        \"amban\",\n        \"ambit\",\n        \"ambos\",\n        \"ambry\",\n        \"ameba\",\n        \"ameer\",\n        \"amene\",\n        \"amens\",\n        \"ament\",\n        \"amias\",\n        \"amice\",\n        \"amici\",\n        \"amide\",\n        \"amido\",\n        \"amids\",\n        \"amies\",\n        \"amiga\",\n        \"amigo\",\n        \"amine\",\n        \"amino\",\n        \"amins\",\n        \"amirs\",\n        \"amlas\",\n        \"amman\",\n        \"ammon\",\n        \"ammos\",\n        \"amnia\",\n        \"amnic\",\n        \"amnio\",\n        \"amoks\",\n        \"amole\",\n        \"amort\",\n        \"amour\",\n        \"amove\",\n        \"amowt\",\n        \"amped\",\n        \"ampul\",\n        \"amrit\",\n        \"amuck\",\n        \"amyls\",\n        \"anana\",\n        \"anata\",\n        \"ancho\",\n        \"ancle\",\n        \"ancon\",\n        \"andro\",\n        \"anear\",\n        \"anele\",\n        \"anent\",\n        \"angas\",\n        \"anglo\",\n        \"anigh\",\n        \"anile\",\n        \"anils\",\n        \"anima\",\n        \"animi\",\n        \"anion\",\n        \"anise\",\n        \"anker\",\n        \"ankhs\",\n        \"ankus\",\n        \"anlas\",\n        \"annal\",\n        \"annas\",\n        \"annat\",\n        \"anoas\",\n        \"anole\",\n        \"anomy\",\n        \"ansae\",\n        \"antae\",\n        \"antar\",\n        \"antas\",\n        \"anted\",\n        \"antes\",\n        \"antis\",\n        \"antra\",\n        \"antre\",\n        \"antsy\",\n        \"anura\",\n        \"anyon\",\n        \"apace\",\n        \"apage\",\n        \"apaid\",\n        \"apayd\",\n        \"apays\",\n        \"apeak\",\n        \"apeek\",\n        \"apers\",\n        \"apert\",\n        \"apery\",\n        \"apgar\",\n        \"aphis\",\n        \"apian\",\n        \"apiol\",\n        \"apish\",\n        \"apism\",\n        \"apode\",\n        \"apods\",\n        \"apoop\",\n        \"aport\",\n        \"appal\",\n        \"appay\",\n        \"appel\",\n        \"appro\",\n        \"appui\",\n        \"appuy\",\n        \"apres\",\n        \"apses\",\n        \"apsis\",\n        \"apsos\",\n        \"apted\",\n        \"apter\",\n        \"aquae\",\n        \"aquas\",\n        \"araba\",\n        \"araks\",\n        \"arame\",\n        \"arars\",\n        \"arbas\",\n        \"arced\",\n        \"archi\",\n        \"arcos\",\n        \"arcus\",\n        \"ardeb\",\n        \"ardri\",\n        \"aread\",\n        \"areae\",\n        \"areal\",\n        \"arear\",\n        \"areas\",\n        \"areca\",\n        \"aredd\",\n        \"arede\",\n        \"arefy\",\n        \"areic\",\n        \"arene\",\n        \"arepa\",\n        \"arere\",\n        \"arete\",\n        \"arets\",\n        \"arett\",\n        \"argal\",\n        \"argan\",\n        \"argil\",\n        \"argle\",\n        \"argol\",\n        \"argon\",\n        \"argot\",\n        \"argus\",\n        \"arhat\",\n        \"arias\",\n        \"ariel\",\n        \"ariki\",\n        \"arils\",\n        \"ariot\",\n        \"arish\",\n        \"arked\",\n        \"arled\",\n        \"arles\",\n        \"armed\",\n        \"armer\",\n        \"armet\",\n        \"armil\",\n        \"arnas\",\n        \"arnut\",\n        \"aroba\",\n        \"aroha\",\n        \"aroid\",\n        \"arpas\",\n        \"arpen\",\n        \"arrah\",\n        \"arras\",\n        \"arret\",\n        \"arris\",\n        \"arroz\",\n        \"arsed\",\n        \"arses\",\n        \"arsey\",\n        \"arsis\",\n        \"artal\",\n        \"artel\",\n        \"artic\",\n        \"artis\",\n        \"aruhe\",\n        \"arums\",\n        \"arval\",\n        \"arvee\",\n        \"arvos\",\n        \"aryls\",\n        \"asana\",\n        \"ascon\",\n        \"ascus\",\n        \"asdic\",\n        \"ashed\",\n        \"ashes\",\n        \"ashet\",\n        \"asked\",\n        \"asker\",\n        \"askoi\",\n        \"askos\",\n        \"aspen\",\n        \"asper\",\n        \"aspic\",\n        \"aspie\",\n        \"aspis\",\n        \"aspro\",\n        \"assai\",\n        \"assam\",\n        \"asses\",\n        \"assez\",\n        \"assot\",\n        \"aster\",\n        \"astir\",\n        \"astun\",\n        \"asura\",\n        \"asway\",\n        \"aswim\",\n        \"asyla\",\n        \"ataps\",\n        \"ataxy\",\n        \"atigi\",\n        \"atilt\",\n        \"atimy\",\n        \"atlas\",\n        \"atman\",\n        \"atmas\",\n        \"atmos\",\n        \"atocs\",\n        \"atoke\",\n        \"atoks\",\n        \"atoms\",\n        \"atomy\",\n        \"atony\",\n        \"atopy\",\n        \"atria\",\n        \"atrip\",\n        \"attap\",\n        \"attar\",\n        \"atuas\",\n        \"audad\",\n        \"auger\",\n        \"aught\",\n        \"aulas\",\n        \"aulic\",\n        \"auloi\",\n        \"aulos\",\n        \"aumil\",\n        \"aunes\",\n        \"aunts\",\n        \"aurae\",\n        \"aural\",\n        \"aurar\",\n        \"auras\",\n        \"aurei\",\n        \"aures\",\n        \"auric\",\n        \"auris\",\n        \"aurum\",\n        \"autos\",\n        \"auxin\",\n        \"avale\",\n        \"avant\",\n        \"avast\",\n        \"avels\",\n        \"avens\",\n        \"avers\",\n        \"avgas\",\n        \"avine\",\n        \"avion\",\n        \"avise\",\n        \"aviso\",\n        \"avize\",\n        \"avows\",\n        \"avyze\",\n        \"awarn\",\n        \"awato\",\n        \"awave\",\n        \"aways\",\n        \"awdls\",\n        \"aweel\",\n        \"aweto\",\n        \"awing\",\n        \"awmry\",\n        \"awned\",\n        \"awner\",\n        \"awols\",\n        \"awork\",\n        \"axels\",\n        \"axile\",\n        \"axils\",\n        \"axing\",\n        \"axite\",\n        \"axled\",\n        \"axles\",\n        \"axman\",\n        \"axmen\",\n        \"axoid\",\n        \"axone\",\n        \"axons\",\n        \"ayahs\",\n        \"ayaya\",\n        \"ayelp\",\n        \"aygre\",\n        \"ayins\",\n        \"ayont\",\n        \"ayres\",\n        \"ayrie\",\n        \"azans\",\n        \"azide\",\n        \"azido\",\n        \"azine\",\n        \"azlon\",\n        \"azoic\",\n        \"azole\",\n        \"azons\",\n        \"azote\",\n        \"azoth\",\n        \"azuki\",\n        \"azurn\",\n        \"azury\",\n        \"azygy\",\n        \"azyme\",\n        \"azyms\",\n        \"baaed\",\n        \"baals\",\n        \"babas\",\n        \"babel\",\n        \"babes\",\n        \"babka\",\n        \"baboo\",\n        \"babul\",\n        \"babus\",\n        \"bacca\",\n        \"bacco\",\n        \"baccy\",\n        \"bacha\",\n        \"bachs\",\n        \"backs\",\n        \"baddy\",\n        \"baels\",\n        \"baffs\",\n        \"baffy\",\n        \"bafts\",\n        \"baghs\",\n        \"bagie\",\n        \"bahts\",\n        \"bahus\",\n        \"bahut\",\n        \"bails\",\n        \"bairn\",\n        \"baisa\",\n        \"baith\",\n        \"baits\",\n        \"baiza\",\n        \"baize\",\n        \"bajan\",\n        \"bajra\",\n        \"bajri\",\n        \"bajus\",\n        \"baked\",\n        \"baken\",\n        \"bakes\",\n        \"bakra\",\n        \"balas\",\n        \"balds\",\n        \"baldy\",\n        \"baled\",\n        \"bales\",\n        \"balks\",\n        \"balky\",\n        \"balls\",\n        \"bally\",\n        \"balms\",\n        \"baloo\",\n        \"balsa\",\n        \"balti\",\n        \"balun\",\n        \"balus\",\n        \"bambi\",\n        \"banak\",\n        \"banco\",\n        \"bancs\",\n        \"banda\",\n        \"bandh\",\n        \"bands\",\n        \"bandy\",\n        \"baned\",\n        \"banes\",\n        \"bangs\",\n        \"bania\",\n        \"banks\",\n        \"banns\",\n        \"bants\",\n        \"bantu\",\n        \"banty\",\n        \"banya\",\n        \"bapus\",\n        \"barbe\",\n        \"barbs\",\n        \"barby\",\n        \"barca\",\n        \"barde\",\n        \"bardo\",\n        \"bards\",\n        \"bardy\",\n        \"bared\",\n        \"barer\",\n        \"bares\",\n        \"barfi\",\n        \"barfs\",\n        \"baric\",\n        \"barks\",\n        \"barky\",\n        \"barms\",\n        \"barmy\",\n        \"barns\",\n        \"barny\",\n        \"barps\",\n        \"barra\",\n        \"barre\",\n        \"barro\",\n        \"barry\",\n        \"barye\",\n        \"basan\",\n        \"based\",\n        \"basen\",\n        \"baser\",\n        \"bases\",\n        \"basho\",\n        \"basij\",\n        \"basks\",\n        \"bason\",\n        \"basse\",\n        \"bassi\",\n        \"basso\",\n        \"bassy\",\n        \"basta\",\n        \"basti\",\n        \"basto\",\n        \"basts\",\n        \"bated\",\n        \"bates\",\n        \"baths\",\n        \"batik\",\n        \"batta\",\n        \"batts\",\n        \"battu\",\n        \"bauds\",\n        \"bauks\",\n        \"baulk\",\n        \"baurs\",\n        \"bavin\",\n        \"bawds\",\n        \"bawks\",\n        \"bawls\",\n        \"bawns\",\n        \"bawrs\",\n        \"bawty\",\n        \"bayed\",\n        \"bayer\",\n        \"bayes\",\n        \"bayle\",\n        \"bayts\",\n        \"bazar\",\n        \"bazoo\",\n        \"beads\",\n        \"beaks\",\n        \"beaky\",\n        \"beals\",\n        \"beams\",\n        \"beamy\",\n        \"beano\",\n        \"beans\",\n        \"beany\",\n        \"beare\",\n        \"bears\",\n        \"beath\",\n        \"beats\",\n        \"beaty\",\n        \"beaus\",\n        \"beaut\",\n        \"beaux\",\n        \"bebop\",\n        \"becap\",\n        \"becke\",\n        \"becks\",\n        \"bedad\",\n        \"bedel\",\n        \"bedes\",\n        \"bedew\",\n        \"bedim\",\n        \"bedye\",\n        \"beedi\",\n        \"beefs\",\n        \"beeps\",\n        \"beers\",\n        \"beery\",\n        \"beets\",\n        \"befog\",\n        \"begad\",\n        \"begar\",\n        \"begem\",\n        \"begot\",\n        \"begum\",\n        \"beige\",\n        \"beigy\",\n        \"beins\",\n        \"bekah\",\n        \"belah\",\n        \"belar\",\n        \"belay\",\n        \"belee\",\n        \"belga\",\n        \"bells\",\n        \"belon\",\n        \"belts\",\n        \"bemad\",\n        \"bemas\",\n        \"bemix\",\n        \"bemud\",\n        \"bends\",\n        \"bendy\",\n        \"benes\",\n        \"benet\",\n        \"benga\",\n        \"benis\",\n        \"benne\",\n        \"benni\",\n        \"benny\",\n        \"bento\",\n        \"bents\",\n        \"benty\",\n        \"bepat\",\n        \"beray\",\n        \"beres\",\n        \"bergs\",\n        \"berko\",\n        \"berks\",\n        \"berme\",\n        \"berms\",\n        \"berob\",\n        \"beryl\",\n        \"besat\",\n        \"besaw\",\n        \"besee\",\n        \"beses\",\n        \"besit\",\n        \"besom\",\n        \"besot\",\n        \"besti\",\n        \"bests\",\n        \"betas\",\n        \"beted\",\n        \"betes\",\n        \"beths\",\n        \"betid\",\n        \"beton\",\n        \"betta\",\n        \"betty\",\n        \"bever\",\n        \"bevor\",\n        \"bevue\",\n        \"bevvy\",\n        \"bewet\",\n        \"bewig\",\n        \"bezes\",\n        \"bezil\",\n        \"bezzy\",\n        \"bhais\",\n        \"bhaji\",\n        \"bhang\",\n        \"bhats\",\n        \"bhels\",\n        \"bhoot\",\n        \"bhuna\",\n        \"bhuts\",\n        \"biach\",\n        \"biali\",\n        \"bialy\",\n        \"bibbs\",\n        \"bibes\",\n        \"biccy\",\n        \"bices\",\n        \"bided\",\n        \"bider\",\n        \"bides\",\n        \"bidet\",\n        \"bidis\",\n        \"bidon\",\n        \"bield\",\n        \"biers\",\n        \"biffo\",\n        \"biffs\",\n        \"biffy\",\n        \"bifid\",\n        \"bigae\",\n        \"biggs\",\n        \"biggy\",\n        \"bigha\",\n        \"bight\",\n        \"bigly\",\n        \"bigos\",\n        \"bijou\",\n        \"biked\",\n        \"biker\",\n        \"bikes\",\n        \"bikie\",\n        \"bilbo\",\n        \"bilby\",\n        \"biled\",\n        \"biles\",\n        \"bilgy\",\n        \"bilks\",\n        \"bills\",\n        \"bimah\",\n        \"bimas\",\n        \"bimbo\",\n        \"binal\",\n        \"bindi\",\n        \"binds\",\n        \"biner\",\n        \"bines\",\n        \"bings\",\n        \"bingy\",\n        \"binit\",\n        \"binks\",\n        \"bints\",\n        \"biogs\",\n        \"biont\",\n        \"biota\",\n        \"biped\",\n        \"bipod\",\n        \"birds\",\n        \"birks\",\n        \"birle\",\n        \"birls\",\n        \"biros\",\n        \"birrs\",\n        \"birse\",\n        \"birsy\",\n        \"bises\",\n        \"bisks\",\n        \"bisom\",\n        \"bitch\",\n        \"biter\",\n        \"bites\",\n        \"bitos\",\n        \"bitou\",\n        \"bitsy\",\n        \"bitte\",\n        \"bitts\",\n        \"bivia\",\n        \"bivvy\",\n        \"bizes\",\n        \"bizzo\",\n        \"bizzy\",\n        \"blabs\",\n        \"blads\",\n        \"blady\",\n        \"blaer\",\n        \"blaes\",\n        \"blaff\",\n        \"blags\",\n        \"blahs\",\n        \"blain\",\n        \"blams\",\n        \"blart\",\n        \"blase\",\n        \"blash\",\n        \"blate\",\n        \"blats\",\n        \"blatt\",\n        \"blaud\",\n        \"blawn\",\n        \"blaws\",\n        \"blays\",\n        \"blear\",\n        \"blebs\",\n        \"blech\",\n        \"blees\",\n        \"blent\",\n        \"blert\",\n        \"blest\",\n        \"blets\",\n        \"bleys\",\n        \"blimy\",\n        \"bling\",\n        \"blini\",\n        \"blins\",\n        \"bliny\",\n        \"blips\",\n        \"blist\",\n        \"blite\",\n        \"blits\",\n        \"blive\",\n        \"blobs\",\n        \"blocs\",\n        \"blogs\",\n        \"blook\",\n        \"bloop\",\n        \"blore\",\n        \"blots\",\n        \"blows\",\n        \"blowy\",\n        \"blubs\",\n        \"blude\",\n        \"bluds\",\n        \"bludy\",\n        \"blued\",\n        \"blues\",\n        \"bluet\",\n        \"bluey\",\n        \"bluid\",\n        \"blume\",\n        \"blunk\",\n        \"blurs\",\n        \"blype\",\n        \"boabs\",\n        \"boaks\",\n        \"boars\",\n        \"boart\",\n        \"boats\",\n        \"bobac\",\n        \"bobak\",\n        \"bobas\",\n        \"bobol\",\n        \"bobos\",\n        \"bocca\",\n        \"bocce\",\n        \"bocci\",\n        \"boche\",\n        \"bocks\",\n        \"boded\",\n        \"bodes\",\n        \"bodge\",\n        \"bodhi\",\n        \"bodle\",\n        \"boeps\",\n        \"boets\",\n        \"boeuf\",\n        \"boffo\",\n        \"boffs\",\n        \"bogan\",\n        \"bogey\",\n        \"boggy\",\n        \"bogie\",\n        \"bogle\",\n        \"bogue\",\n        \"bogus\",\n        \"bohea\",\n        \"bohos\",\n        \"boils\",\n        \"boing\",\n        \"boink\",\n        \"boite\",\n        \"boked\",\n        \"bokeh\",\n        \"bokes\",\n        \"bokos\",\n        \"bolar\",\n        \"bolas\",\n        \"bolds\",\n        \"boles\",\n        \"bolix\",\n        \"bolls\",\n        \"bolos\",\n        \"bolts\",\n        \"bolus\",\n        \"bomas\",\n        \"bombe\",\n        \"bombo\",\n        \"bombs\",\n        \"bonce\",\n        \"bonds\",\n        \"boned\",\n        \"boner\",\n        \"bones\",\n        \"bongs\",\n        \"bonie\",\n        \"bonks\",\n        \"bonne\",\n        \"bonny\",\n        \"bonza\",\n        \"bonze\",\n        \"booai\",\n        \"booay\",\n        \"boobs\",\n        \"boody\",\n        \"booed\",\n        \"boofy\",\n        \"boogy\",\n        \"boohs\",\n        \"books\",\n        \"booky\",\n        \"bools\",\n        \"booms\",\n        \"boomy\",\n        \"boong\",\n        \"boons\",\n        \"boord\",\n        \"boors\",\n        \"boose\",\n        \"boots\",\n        \"boppy\",\n        \"borak\",\n        \"boral\",\n        \"boras\",\n        \"borde\",\n        \"bords\",\n        \"bored\",\n        \"boree\",\n        \"borel\",\n        \"borer\",\n        \"bores\",\n        \"borgo\",\n        \"boric\",\n        \"borks\",\n        \"borms\",\n        \"borna\",\n        \"boron\",\n        \"borts\",\n        \"borty\",\n        \"bortz\",\n        \"bosie\",\n        \"bosks\",\n        \"bosky\",\n        \"boson\",\n        \"bosun\",\n        \"botas\",\n        \"botel\",\n        \"botes\",\n        \"bothy\",\n        \"botte\",\n        \"botts\",\n        \"botty\",\n        \"bouge\",\n        \"bouks\",\n        \"boult\",\n        \"bouns\",\n        \"bourd\",\n        \"bourg\",\n        \"bourn\",\n        \"bouse\",\n        \"bousy\",\n        \"bouts\",\n        \"bovid\",\n        \"bowat\",\n        \"bowed\",\n        \"bower\",\n        \"bowes\",\n        \"bowet\",\n        \"bowie\",\n        \"bowls\",\n        \"bowne\",\n        \"bowrs\",\n        \"bowse\",\n        \"boxed\",\n        \"boxen\",\n        \"boxes\",\n        \"boxla\",\n        \"boxty\",\n        \"boyar\",\n        \"boyau\",\n        \"boyed\",\n        \"boyfs\",\n        \"boygs\",\n        \"boyla\",\n        \"boyos\",\n        \"boysy\",\n        \"bozos\",\n        \"braai\",\n        \"brach\",\n        \"brack\",\n        \"bract\",\n        \"brads\",\n        \"braes\",\n        \"brags\",\n        \"brail\",\n        \"braks\",\n        \"braky\",\n        \"brame\",\n        \"brane\",\n        \"brank\",\n        \"brans\",\n        \"brant\",\n        \"brast\",\n        \"brats\",\n        \"brava\",\n        \"bravi\",\n        \"braws\",\n        \"braxy\",\n        \"brays\",\n        \"braza\",\n        \"braze\",\n        \"bream\",\n        \"brede\",\n        \"breds\",\n        \"breem\",\n        \"breer\",\n        \"brees\",\n        \"breid\",\n        \"breis\",\n        \"breme\",\n        \"brens\",\n        \"brent\",\n        \"brere\",\n        \"brers\",\n        \"breve\",\n        \"brews\",\n        \"breys\",\n        \"brier\",\n        \"bries\",\n        \"brigs\",\n        \"briki\",\n        \"briks\",\n        \"brill\",\n        \"brims\",\n        \"brins\",\n        \"brios\",\n        \"brise\",\n        \"briss\",\n        \"brith\",\n        \"brits\",\n        \"britt\",\n        \"brize\",\n        \"broch\",\n        \"brock\",\n        \"brods\",\n        \"brogh\",\n        \"brogs\",\n        \"brome\",\n        \"bromo\",\n        \"bronc\",\n        \"brond\",\n        \"brool\",\n        \"broos\",\n        \"brose\",\n        \"brosy\",\n        \"brows\",\n        \"brugh\",\n        \"bruin\",\n        \"bruit\",\n        \"brule\",\n        \"brume\",\n        \"brung\",\n        \"brusk\",\n        \"brust\",\n        \"bruts\",\n        \"buats\",\n        \"buaze\",\n        \"bubal\",\n        \"bubas\",\n        \"bubba\",\n        \"bubbe\",\n        \"bubby\",\n        \"bubus\",\n        \"buchu\",\n        \"bucko\",\n        \"bucks\",\n        \"bucku\",\n        \"budas\",\n        \"budis\",\n        \"budos\",\n        \"buffa\",\n        \"buffe\",\n        \"buffi\",\n        \"buffo\",\n        \"buffs\",\n        \"buffy\",\n        \"bufos\",\n        \"bufty\",\n        \"buhls\",\n        \"buhrs\",\n        \"buiks\",\n        \"buist\",\n        \"bukes\",\n        \"bulbs\",\n        \"bulgy\",\n        \"bulks\",\n        \"bulla\",\n        \"bulls\",\n        \"bulse\",\n        \"bumbo\",\n        \"bumfs\",\n        \"bumph\",\n        \"bumps\",\n        \"bumpy\",\n        \"bunas\",\n        \"bunce\",\n        \"bunco\",\n        \"bunde\",\n        \"bundh\",\n        \"bunds\",\n        \"bundt\",\n        \"bundu\",\n        \"bundy\",\n        \"bungs\",\n        \"bungy\",\n        \"bunia\",\n        \"bunje\",\n        \"bunjy\",\n        \"bunko\",\n        \"bunks\",\n        \"bunns\",\n        \"bunts\",\n        \"bunty\",\n        \"bunya\",\n        \"buoys\",\n        \"buppy\",\n        \"buran\",\n        \"buras\",\n        \"burbs\",\n        \"burds\",\n        \"buret\",\n        \"burfi\",\n        \"burgh\",\n        \"burgs\",\n        \"burin\",\n        \"burka\",\n        \"burke\",\n        \"burks\",\n        \"burls\",\n        \"burns\",\n        \"buroo\",\n        \"burps\",\n        \"burqa\",\n        \"burro\",\n        \"burrs\",\n        \"burry\",\n        \"bursa\",\n        \"burse\",\n        \"busby\",\n        \"buses\",\n        \"busks\",\n        \"busky\",\n        \"bussu\",\n        \"busti\",\n        \"busts\",\n        \"busty\",\n        \"buteo\",\n        \"butes\",\n        \"butle\",\n        \"butoh\",\n        \"butts\",\n        \"butty\",\n        \"butut\",\n        \"butyl\",\n        \"buzzy\",\n        \"bwana\",\n        \"bwazi\",\n        \"byded\",\n        \"bydes\",\n        \"byked\",\n        \"bykes\",\n        \"byres\",\n        \"byrls\",\n        \"byssi\",\n        \"bytes\",\n        \"byway\",\n        \"caaed\",\n        \"cabas\",\n        \"caber\",\n        \"cabob\",\n        \"caboc\",\n        \"cabre\",\n        \"cacas\",\n        \"cacks\",\n        \"cacky\",\n        \"cadee\",\n        \"cades\",\n        \"cadge\",\n        \"cadgy\",\n        \"cadie\",\n        \"cadis\",\n        \"cadre\",\n        \"caeca\",\n        \"caese\",\n        \"cafes\",\n        \"caffs\",\n        \"caged\",\n        \"cager\",\n        \"cages\",\n        \"cagot\",\n        \"cahow\",\n        \"caids\",\n        \"cains\",\n        \"caird\",\n        \"cajon\",\n        \"cajun\",\n        \"caked\",\n        \"cakes\",\n        \"cakey\",\n        \"calfs\",\n        \"calid\",\n        \"calif\",\n        \"calix\",\n        \"calks\",\n        \"calla\",\n        \"calls\",\n        \"calms\",\n        \"calmy\",\n        \"calos\",\n        \"calpa\",\n        \"calps\",\n        \"calve\",\n        \"calyx\",\n        \"caman\",\n        \"camas\",\n        \"cames\",\n        \"camis\",\n        \"camos\",\n        \"campi\",\n        \"campo\",\n        \"camps\",\n        \"campy\",\n        \"camus\",\n        \"caned\",\n        \"caneh\",\n        \"caner\",\n        \"canes\",\n        \"cangs\",\n        \"canid\",\n        \"canna\",\n        \"canns\",\n        \"canso\",\n        \"canst\",\n        \"canto\",\n        \"cants\",\n        \"canty\",\n        \"capas\",\n        \"caped\",\n        \"capes\",\n        \"capex\",\n        \"caphs\",\n        \"capiz\",\n        \"caple\",\n        \"capon\",\n        \"capos\",\n        \"capot\",\n        \"capri\",\n        \"capul\",\n        \"carap\",\n        \"carbo\",\n        \"carbs\",\n        \"carby\",\n        \"cardi\",\n        \"cards\",\n        \"cardy\",\n        \"cared\",\n        \"carer\",\n        \"cares\",\n        \"caret\",\n        \"carex\",\n        \"carks\",\n        \"carle\",\n        \"carls\",\n        \"carns\",\n        \"carny\",\n        \"carob\",\n        \"carom\",\n        \"caron\",\n        \"carpi\",\n        \"carps\",\n        \"carrs\",\n        \"carse\",\n        \"carta\",\n        \"carte\",\n        \"carts\",\n        \"carvy\",\n        \"casas\",\n        \"casco\",\n        \"cased\",\n        \"cases\",\n        \"casks\",\n        \"casky\",\n        \"casts\",\n        \"casus\",\n        \"cates\",\n        \"cauda\",\n        \"cauks\",\n        \"cauld\",\n        \"cauls\",\n        \"caums\",\n        \"caups\",\n        \"cauri\",\n        \"causa\",\n        \"cavas\",\n        \"caved\",\n        \"cavel\",\n        \"caver\",\n        \"caves\",\n        \"cavie\",\n        \"cawed\",\n        \"cawks\",\n        \"caxon\",\n        \"ceaze\",\n        \"cebid\",\n        \"cecal\",\n        \"cecum\",\n        \"ceded\",\n        \"ceder\",\n        \"cedes\",\n        \"cedis\",\n        \"ceiba\",\n        \"ceili\",\n        \"ceils\",\n        \"celeb\",\n        \"cella\",\n        \"celli\",\n        \"cells\",\n        \"celom\",\n        \"celts\",\n        \"cense\",\n        \"cento\",\n        \"cents\",\n        \"centu\",\n        \"ceorl\",\n        \"cepes\",\n        \"cerci\",\n        \"cered\",\n        \"ceres\",\n        \"cerge\",\n        \"ceria\",\n        \"ceric\",\n        \"cerne\",\n        \"ceroc\",\n        \"ceros\",\n        \"certs\",\n        \"certy\",\n        \"cesse\",\n        \"cesta\",\n        \"cesti\",\n        \"cetes\",\n        \"cetyl\",\n        \"cezve\",\n        \"chace\",\n        \"chack\",\n        \"chaco\",\n        \"chado\",\n        \"chads\",\n        \"chaft\",\n        \"chais\",\n        \"chals\",\n        \"chams\",\n        \"chana\",\n        \"chang\",\n        \"chank\",\n        \"chape\",\n        \"chaps\",\n        \"chapt\",\n        \"chara\",\n        \"chare\",\n        \"chark\",\n        \"charr\",\n        \"chars\",\n        \"chary\",\n        \"chats\",\n        \"chave\",\n        \"chavs\",\n        \"chawk\",\n        \"chaws\",\n        \"chaya\",\n        \"chays\",\n        \"cheep\",\n        \"chefs\",\n        \"cheka\",\n        \"chela\",\n        \"chelp\",\n        \"chemo\",\n        \"chems\",\n        \"chere\",\n        \"chert\",\n        \"cheth\",\n        \"chevy\",\n        \"chews\",\n        \"chewy\",\n        \"chiao\",\n        \"chias\",\n        \"chibs\",\n        \"chica\",\n        \"chich\",\n        \"chico\",\n        \"chics\",\n        \"chiel\",\n        \"chiks\",\n        \"chile\",\n        \"chimb\",\n        \"chimo\",\n        \"chimp\",\n        \"chine\",\n        \"ching\",\n        \"chink\",\n        \"chino\",\n        \"chins\",\n        \"chips\",\n        \"chirk\",\n        \"chirl\",\n        \"chirm\",\n        \"chiro\",\n        \"chirr\",\n        \"chirt\",\n        \"chiru\",\n        \"chits\",\n        \"chive\",\n        \"chivs\",\n        \"chivy\",\n        \"chizz\",\n        \"choco\",\n        \"chocs\",\n        \"chode\",\n        \"chogs\",\n        \"choil\",\n        \"choko\",\n        \"choky\",\n        \"chola\",\n        \"choli\",\n        \"cholo\",\n        \"chomp\",\n        \"chons\",\n        \"choof\",\n        \"chook\",\n        \"choom\",\n        \"choon\",\n        \"chops\",\n        \"chota\",\n        \"chott\",\n        \"chout\",\n        \"choux\",\n        \"chowk\",\n        \"chows\",\n        \"chubs\",\n        \"chufa\",\n        \"chuff\",\n        \"chugs\",\n        \"chums\",\n        \"churl\",\n        \"churr\",\n        \"chuse\",\n        \"chuts\",\n        \"chyle\",\n        \"chyme\",\n        \"chynd\",\n        \"cibol\",\n        \"cided\",\n        \"cides\",\n        \"ciels\",\n        \"ciggy\",\n        \"cilia\",\n        \"cills\",\n        \"cimar\",\n        \"cimex\",\n        \"cinct\",\n        \"cines\",\n        \"cinqs\",\n        \"cions\",\n        \"cippi\",\n        \"circs\",\n        \"cires\",\n        \"cirls\",\n        \"cirri\",\n        \"cisco\",\n        \"cissy\",\n        \"cists\",\n        \"cital\",\n        \"cited\",\n        \"citer\",\n        \"cites\",\n        \"cives\",\n        \"civet\",\n        \"civie\",\n        \"civvy\",\n        \"clach\",\n        \"clade\",\n        \"clads\",\n        \"claes\",\n        \"clags\",\n        \"clame\",\n        \"clams\",\n        \"clans\",\n        \"claps\",\n        \"clapt\",\n        \"claro\",\n        \"clart\",\n        \"clary\",\n        \"clast\",\n        \"clats\",\n        \"claut\",\n        \"clave\",\n        \"clavi\",\n        \"claws\",\n        \"clays\",\n        \"cleck\",\n        \"cleek\",\n        \"cleep\",\n        \"clefs\",\n        \"clegs\",\n        \"cleik\",\n        \"clems\",\n        \"clepe\",\n        \"clept\",\n        \"cleve\",\n        \"clews\",\n        \"clied\",\n        \"clies\",\n        \"clift\",\n        \"clime\",\n        \"cline\",\n        \"clint\",\n        \"clipe\",\n        \"clips\",\n        \"clipt\",\n        \"clits\",\n        \"cloam\",\n        \"clods\",\n        \"cloff\",\n        \"clogs\",\n        \"cloke\",\n        \"clomb\",\n        \"clomp\",\n        \"clonk\",\n        \"clons\",\n        \"cloop\",\n        \"cloot\",\n        \"clops\",\n        \"clote\",\n        \"clots\",\n        \"clour\",\n        \"clous\",\n        \"clows\",\n        \"cloye\",\n        \"cloys\",\n        \"cloze\",\n        \"clubs\",\n        \"clues\",\n        \"cluey\",\n        \"clunk\",\n        \"clype\",\n        \"cnida\",\n        \"coact\",\n        \"coady\",\n        \"coala\",\n        \"coals\",\n        \"coaly\",\n        \"coapt\",\n        \"coarb\",\n        \"coate\",\n        \"coati\",\n        \"coats\",\n        \"cobbs\",\n        \"cobby\",\n        \"cobia\",\n        \"coble\",\n        \"cobza\",\n        \"cocas\",\n        \"cocci\",\n        \"cocco\",\n        \"cocks\",\n        \"cocky\",\n        \"cocos\",\n        \"codas\",\n        \"codec\",\n        \"coded\",\n        \"coden\",\n        \"coder\",\n        \"codes\",\n        \"codex\",\n        \"codon\",\n        \"coeds\",\n        \"coffs\",\n        \"cogie\",\n        \"cogon\",\n        \"cogue\",\n        \"cohab\",\n        \"cohen\",\n        \"cohoe\",\n        \"cohog\",\n        \"cohos\",\n        \"coifs\",\n        \"coign\",\n        \"coils\",\n        \"coins\",\n        \"coirs\",\n        \"coits\",\n        \"coked\",\n        \"cokes\",\n        \"colas\",\n        \"colby\",\n        \"colds\",\n        \"coled\",\n        \"coles\",\n        \"coley\",\n        \"colic\",\n        \"colin\",\n        \"colls\",\n        \"colly\",\n        \"colog\",\n        \"colts\",\n        \"colza\",\n        \"comae\",\n        \"comal\",\n        \"comas\",\n        \"combe\",\n        \"combi\",\n        \"combo\",\n        \"combs\",\n        \"comby\",\n        \"comer\",\n        \"comes\",\n        \"comix\",\n        \"commo\",\n        \"comms\",\n        \"commy\",\n        \"compo\",\n        \"comps\",\n        \"compt\",\n        \"comte\",\n        \"comus\",\n        \"coned\",\n        \"cones\",\n        \"coney\",\n        \"confs\",\n        \"conga\",\n        \"conge\",\n        \"congo\",\n        \"conia\",\n        \"conin\",\n        \"conks\",\n        \"conky\",\n        \"conne\",\n        \"conns\",\n        \"conte\",\n        \"conto\",\n        \"conus\",\n        \"convo\",\n        \"cooch\",\n        \"cooed\",\n        \"cooee\",\n        \"cooer\",\n        \"cooey\",\n        \"coofs\",\n        \"cooks\",\n        \"cooky\",\n        \"cools\",\n        \"cooly\",\n        \"coomb\",\n        \"cooms\",\n        \"coomy\",\n        \"coons\",\n        \"coops\",\n        \"coopt\",\n        \"coost\",\n        \"coots\",\n        \"cooze\",\n        \"copal\",\n        \"copay\",\n        \"coped\",\n        \"copen\",\n        \"coper\",\n        \"copes\",\n        \"coppy\",\n        \"copra\",\n        \"copsy\",\n        \"coqui\",\n        \"coram\",\n        \"corbe\",\n        \"corby\",\n        \"cords\",\n        \"cored\",\n        \"cores\",\n        \"corey\",\n        \"corgi\",\n        \"coria\",\n        \"corks\",\n        \"corky\",\n        \"corms\",\n        \"corni\",\n        \"corno\",\n        \"corns\",\n        \"cornu\",\n        \"corps\",\n        \"corse\",\n        \"corso\",\n        \"cosec\",\n        \"cosed\",\n        \"coses\",\n        \"coset\",\n        \"cosey\",\n        \"cosie\",\n        \"costa\",\n        \"coste\",\n        \"costs\",\n        \"cotan\",\n        \"coted\",\n        \"cotes\",\n        \"coths\",\n        \"cotta\",\n        \"cotts\",\n        \"coude\",\n        \"coups\",\n        \"courb\",\n        \"courd\",\n        \"coure\",\n        \"cours\",\n        \"couta\",\n        \"couth\",\n        \"coved\",\n        \"coves\",\n        \"covin\",\n        \"cowal\",\n        \"cowan\",\n        \"cowed\",\n        \"cowks\",\n        \"cowls\",\n        \"cowps\",\n        \"cowry\",\n        \"coxae\",\n        \"coxal\",\n        \"coxed\",\n        \"coxes\",\n        \"coxib\",\n        \"coyau\",\n        \"coyed\",\n        \"coyer\",\n        \"coypu\",\n        \"cozed\",\n        \"cozen\",\n        \"cozes\",\n        \"cozey\",\n        \"cozie\",\n        \"craal\",\n        \"crabs\",\n        \"crags\",\n        \"craic\",\n        \"craig\",\n        \"crake\",\n        \"crame\",\n        \"crams\",\n        \"crans\",\n        \"crape\",\n        \"craps\",\n        \"crapy\",\n        \"crare\",\n        \"crash\",\n        \"craws\",\n        \"crays\",\n        \"creds\",\n        \"creel\",\n        \"crees\",\n        \"crems\",\n        \"crena\",\n        \"creps\",\n        \"crepy\",\n        \"crewe\",\n        \"crews\",\n        \"crias\",\n        \"cribs\",\n        \"cries\",\n        \"crims\",\n        \"crine\",\n        \"crios\",\n        \"cripe\",\n        \"crips\",\n        \"crise\",\n        \"crith\",\n        \"crits\",\n        \"croci\",\n        \"crocs\",\n        \"croft\",\n        \"crogs\",\n        \"cromb\",\n        \"crome\",\n        \"cronk\",\n        \"crons\",\n        \"crool\",\n        \"croon\",\n        \"crops\",\n        \"crore\",\n        \"crost\",\n        \"crout\",\n        \"crows\",\n        \"croze\",\n        \"cruck\",\n        \"crudo\",\n        \"cruds\",\n        \"crudy\",\n        \"crues\",\n        \"cruet\",\n        \"cruft\",\n        \"crunk\",\n        \"cruor\",\n        \"crura\",\n        \"cruse\",\n        \"crusy\",\n        \"cruve\",\n        \"crwth\",\n        \"cryer\",\n        \"ctene\",\n        \"cubby\",\n        \"cubeb\",\n        \"cubed\",\n        \"cuber\",\n        \"cubes\",\n        \"cubit\",\n        \"cuddy\",\n        \"cuffo\",\n        \"cuffs\",\n        \"cuifs\",\n        \"cuing\",\n        \"cuish\",\n        \"cuits\",\n        \"cukes\",\n        \"culch\",\n        \"culet\",\n        \"culex\",\n        \"culls\",\n        \"cully\",\n        \"culms\",\n        \"culpa\",\n        \"culti\",\n        \"cults\",\n        \"culty\",\n        \"cumec\",\n        \"cundy\",\n        \"cunei\",\n        \"cunit\",\n        \"cunts\",\n        \"cupel\",\n        \"cupid\",\n        \"cuppa\",\n        \"cuppy\",\n        \"curat\",\n        \"curbs\",\n        \"curch\",\n        \"curds\",\n        \"curdy\",\n        \"cured\",\n        \"curer\",\n        \"cures\",\n        \"curet\",\n        \"curfs\",\n        \"curia\",\n        \"curie\",\n        \"curli\",\n        \"curls\",\n        \"curns\",\n        \"curny\",\n        \"currs\",\n        \"cursi\",\n        \"curst\",\n        \"cusec\",\n        \"cushy\",\n        \"cusks\",\n        \"cusps\",\n        \"cuspy\",\n        \"cusso\",\n        \"cusum\",\n        \"cutch\",\n        \"cuter\",\n        \"cutes\",\n        \"cutey\",\n        \"cutin\",\n        \"cutis\",\n        \"cutto\",\n        \"cutty\",\n        \"cutup\",\n        \"cuvee\",\n        \"cuzes\",\n        \"cwtch\",\n        \"cyano\",\n        \"cyans\",\n        \"cycad\",\n        \"cycas\",\n        \"cyclo\",\n        \"cyder\",\n        \"cylix\",\n        \"cymae\",\n        \"cymar\",\n        \"cymas\",\n        \"cymes\",\n        \"cymol\",\n        \"cysts\",\n        \"cytes\",\n        \"cyton\",\n        \"czars\",\n        \"daals\",\n        \"dabba\",\n        \"daces\",\n        \"dacha\",\n        \"dacks\",\n        \"dadah\",\n        \"dadas\",\n        \"dados\",\n        \"daffs\",\n        \"daffy\",\n        \"dagga\",\n        \"daggy\",\n        \"dagos\",\n        \"dahls\",\n        \"daiko\",\n        \"daine\",\n        \"daint\",\n        \"daker\",\n        \"daled\",\n        \"dales\",\n        \"dalis\",\n        \"dalle\",\n        \"dalts\",\n        \"daman\",\n        \"damar\",\n        \"dames\",\n        \"damme\",\n        \"damns\",\n        \"damps\",\n        \"dampy\",\n        \"dancy\",\n        \"dangs\",\n        \"danio\",\n        \"danks\",\n        \"danny\",\n        \"dants\",\n        \"daraf\",\n        \"darbs\",\n        \"darcy\",\n        \"dared\",\n        \"darer\",\n        \"dares\",\n        \"darga\",\n        \"dargs\",\n        \"daric\",\n        \"daris\",\n        \"darks\",\n        \"darky\",\n        \"darns\",\n        \"darre\",\n        \"darts\",\n        \"darzi\",\n        \"dashi\",\n        \"dashy\",\n        \"datal\",\n        \"dated\",\n        \"dater\",\n        \"dates\",\n        \"datos\",\n        \"datto\",\n        \"daube\",\n        \"daubs\",\n        \"dauby\",\n        \"dauds\",\n        \"dault\",\n        \"daurs\",\n        \"dauts\",\n        \"daven\",\n        \"davit\",\n        \"dawah\",\n        \"dawds\",\n        \"dawed\",\n        \"dawen\",\n        \"dawks\",\n        \"dawns\",\n        \"dawts\",\n        \"dayan\",\n        \"daych\",\n        \"daynt\",\n        \"dazed\",\n        \"dazer\",\n        \"dazes\",\n        \"deads\",\n        \"deair\",\n        \"deals\",\n        \"deans\",\n        \"deare\",\n        \"dearn\",\n        \"dears\",\n        \"deary\",\n        \"deash\",\n        \"deave\",\n        \"deaws\",\n        \"deawy\",\n        \"debag\",\n        \"debby\",\n        \"debel\",\n        \"debes\",\n        \"debts\",\n        \"debud\",\n        \"debur\",\n        \"debus\",\n        \"debye\",\n        \"decad\",\n        \"decaf\",\n        \"decan\",\n        \"decko\",\n        \"decks\",\n        \"decos\",\n        \"dedal\",\n        \"deeds\",\n        \"deedy\",\n        \"deely\",\n        \"deems\",\n        \"deens\",\n        \"deeps\",\n        \"deere\",\n        \"deers\",\n        \"deets\",\n        \"deeve\",\n        \"deevs\",\n        \"defat\",\n        \"deffo\",\n        \"defis\",\n        \"defog\",\n        \"degas\",\n        \"degum\",\n        \"degus\",\n        \"deice\",\n        \"deids\",\n        \"deify\",\n        \"deils\",\n        \"deism\",\n        \"deist\",\n        \"deked\",\n        \"dekes\",\n        \"dekko\",\n        \"deled\",\n        \"deles\",\n        \"delfs\",\n        \"delft\",\n        \"delis\",\n        \"dells\",\n        \"delly\",\n        \"delos\",\n        \"delph\",\n        \"delts\",\n        \"deman\",\n        \"demes\",\n        \"demic\",\n        \"demit\",\n        \"demob\",\n        \"demoi\",\n        \"demos\",\n        \"dempt\",\n        \"denar\",\n        \"denay\",\n        \"dench\",\n        \"denes\",\n        \"denet\",\n        \"denis\",\n        \"dents\",\n        \"deoxy\",\n        \"derat\",\n        \"deray\",\n        \"dered\",\n        \"deres\",\n        \"derig\",\n        \"derma\",\n        \"derms\",\n        \"derns\",\n        \"derny\",\n        \"deros\",\n        \"derro\",\n        \"derry\",\n        \"derth\",\n        \"dervs\",\n        \"desex\",\n        \"deshi\",\n        \"desis\",\n        \"desks\",\n        \"desse\",\n        \"devas\",\n        \"devel\",\n        \"devis\",\n        \"devon\",\n        \"devos\",\n        \"devot\",\n        \"dewan\",\n        \"dewar\",\n        \"dewax\",\n        \"dewed\",\n        \"dexes\",\n        \"dexie\",\n        \"dhaba\",\n        \"dhaks\",\n        \"dhals\",\n        \"dhikr\",\n        \"dhobi\",\n        \"dhole\",\n        \"dholl\",\n        \"dhols\",\n        \"dhoti\",\n        \"dhows\",\n        \"dhuti\",\n        \"diact\",\n        \"dials\",\n        \"diane\",\n        \"diazo\",\n        \"dibbs\",\n        \"diced\",\n        \"dicer\",\n        \"dices\",\n        \"dicht\",\n        \"dicks\",\n        \"dicky\",\n        \"dicot\",\n        \"dicta\",\n        \"dicts\",\n        \"dicty\",\n        \"diddy\",\n        \"didie\",\n        \"didos\",\n        \"didst\",\n        \"diebs\",\n        \"diels\",\n        \"diene\",\n        \"diets\",\n        \"diffs\",\n        \"dight\",\n        \"dikas\",\n        \"diked\",\n        \"diker\",\n        \"dikes\",\n        \"dikey\",\n        \"dildo\",\n        \"dilli\",\n        \"dills\",\n        \"dimbo\",\n        \"dimer\",\n        \"dimes\",\n        \"dimps\",\n        \"dinar\",\n        \"dined\",\n        \"dines\",\n        \"dinge\",\n        \"dings\",\n        \"dinic\",\n        \"dinks\",\n        \"dinky\",\n        \"dinna\",\n        \"dinos\",\n        \"dints\",\n        \"diols\",\n        \"diota\",\n        \"dippy\",\n        \"dipso\",\n        \"diram\",\n        \"direr\",\n        \"dirke\",\n        \"dirks\",\n        \"dirls\",\n        \"dirts\",\n        \"disas\",\n        \"disci\",\n        \"discs\",\n        \"dishy\",\n        \"disks\",\n        \"disme\",\n        \"dital\",\n        \"ditas\",\n        \"dited\",\n        \"dites\",\n        \"ditsy\",\n        \"ditts\",\n        \"ditzy\",\n        \"divan\",\n        \"divas\",\n        \"dived\",\n        \"dives\",\n        \"divis\",\n        \"divna\",\n        \"divos\",\n        \"divot\",\n        \"divvy\",\n        \"diwan\",\n        \"dixie\",\n        \"dixit\",\n        \"diyas\",\n        \"dizen\",\n        \"djinn\",\n        \"djins\",\n        \"doabs\",\n        \"doats\",\n        \"dobby\",\n        \"dobes\",\n        \"dobie\",\n        \"dobla\",\n        \"dobra\",\n        \"dobro\",\n        \"docht\",\n        \"docks\",\n        \"docos\",\n        \"docus\",\n        \"doddy\",\n        \"dodos\",\n        \"doeks\",\n        \"doers\",\n        \"doest\",\n        \"doeth\",\n        \"doffs\",\n        \"dogan\",\n        \"doges\",\n        \"dogey\",\n        \"doggo\",\n        \"doggy\",\n        \"dogie\",\n        \"dohyo\",\n        \"doilt\",\n        \"doily\",\n        \"doits\",\n        \"dojos\",\n        \"dolce\",\n        \"dolci\",\n        \"doled\",\n        \"doles\",\n        \"dolia\",\n        \"dolls\",\n        \"dolma\",\n        \"dolor\",\n        \"dolos\",\n        \"dolts\",\n        \"domal\",\n        \"domed\",\n        \"domes\",\n        \"domic\",\n        \"donah\",\n        \"donas\",\n        \"donee\",\n        \"doner\",\n        \"donga\",\n        \"dongs\",\n        \"donko\",\n        \"donna\",\n        \"donne\",\n        \"donny\",\n        \"donsy\",\n        \"doobs\",\n        \"dooce\",\n        \"doody\",\n        \"dooks\",\n        \"doole\",\n        \"dools\",\n        \"dooly\",\n        \"dooms\",\n        \"doomy\",\n        \"doona\",\n        \"doorn\",\n        \"doors\",\n        \"doozy\",\n        \"dopas\",\n        \"doped\",\n        \"doper\",\n        \"dopes\",\n        \"dorad\",\n        \"dorba\",\n        \"dorbs\",\n        \"doree\",\n        \"dores\",\n        \"doric\",\n        \"doris\",\n        \"dorks\",\n        \"dorky\",\n        \"dorms\",\n        \"dormy\",\n        \"dorps\",\n        \"dorrs\",\n        \"dorsa\",\n        \"dorse\",\n        \"dorts\",\n        \"dorty\",\n        \"dosai\",\n        \"dosas\",\n        \"dosed\",\n        \"doseh\",\n        \"doser\",\n        \"doses\",\n        \"dosha\",\n        \"dotal\",\n        \"doted\",\n        \"doter\",\n        \"dotes\",\n        \"dotty\",\n        \"douar\",\n        \"douce\",\n        \"doucs\",\n        \"douks\",\n        \"doula\",\n        \"douma\",\n        \"doums\",\n        \"doups\",\n        \"doura\",\n        \"douse\",\n        \"douts\",\n        \"doved\",\n        \"doven\",\n        \"dover\",\n        \"doves\",\n        \"dovie\",\n        \"dowar\",\n        \"dowds\",\n        \"dowed\",\n        \"dower\",\n        \"dowie\",\n        \"dowle\",\n        \"dowls\",\n        \"dowly\",\n        \"downa\",\n        \"downs\",\n        \"dowps\",\n        \"dowse\",\n        \"dowts\",\n        \"doxed\",\n        \"doxes\",\n        \"doxie\",\n        \"doyen\",\n        \"doyly\",\n        \"dozed\",\n        \"dozer\",\n        \"dozes\",\n        \"drabs\",\n        \"drack\",\n        \"draco\",\n        \"draff\",\n        \"drags\",\n        \"drail\",\n        \"drams\",\n        \"drant\",\n        \"draps\",\n        \"drats\",\n        \"drave\",\n        \"draws\",\n        \"drays\",\n        \"drear\",\n        \"dreck\",\n        \"dreed\",\n        \"dreer\",\n        \"drees\",\n        \"dregs\",\n        \"dreks\",\n        \"drent\",\n        \"drere\",\n        \"drest\",\n        \"dreys\",\n        \"dribs\",\n        \"drice\",\n        \"dries\",\n        \"drily\",\n        \"drips\",\n        \"dript\",\n        \"droid\",\n        \"droil\",\n        \"droke\",\n        \"drole\",\n        \"drome\",\n        \"drony\",\n        \"droob\",\n        \"droog\",\n        \"drook\",\n        \"drops\",\n        \"dropt\",\n        \"drouk\",\n        \"drows\",\n        \"drubs\",\n        \"drugs\",\n        \"drums\",\n        \"drupe\",\n        \"druse\",\n        \"drusy\",\n        \"druxy\",\n        \"dryad\",\n        \"dryas\",\n        \"dsobo\",\n        \"dsomo\",\n        \"duads\",\n        \"duals\",\n        \"duans\",\n        \"duars\",\n        \"dubbo\",\n        \"ducal\",\n        \"ducat\",\n        \"duces\",\n        \"ducks\",\n        \"ducky\",\n        \"ducts\",\n        \"duddy\",\n        \"duded\",\n        \"dudes\",\n        \"duels\",\n        \"duets\",\n        \"duett\",\n        \"duffs\",\n        \"dufus\",\n        \"duing\",\n        \"duits\",\n        \"dukas\",\n        \"duked\",\n        \"dukes\",\n        \"dukka\",\n        \"dulce\",\n        \"dules\",\n        \"dulia\",\n        \"dulls\",\n        \"dulse\",\n        \"dumas\",\n        \"dumbo\",\n        \"dumbs\",\n        \"dumka\",\n        \"dumky\",\n        \"dumps\",\n        \"dunam\",\n        \"dunch\",\n        \"dunes\",\n        \"dungs\",\n        \"dungy\",\n        \"dunks\",\n        \"dunno\",\n        \"dunny\",\n        \"dunsh\",\n        \"dunts\",\n        \"duomi\",\n        \"duomo\",\n        \"duped\",\n        \"duper\",\n        \"dupes\",\n        \"duple\",\n        \"duply\",\n        \"duppy\",\n        \"dural\",\n        \"duras\",\n        \"dured\",\n        \"dures\",\n        \"durgy\",\n        \"durns\",\n        \"duroc\",\n        \"duros\",\n        \"duroy\",\n        \"durra\",\n        \"durrs\",\n        \"durry\",\n        \"durst\",\n        \"durum\",\n        \"durzi\",\n        \"dusks\",\n        \"dusts\",\n        \"duxes\",\n        \"dwaal\",\n        \"dwale\",\n        \"dwalm\",\n        \"dwams\",\n        \"dwang\",\n        \"dwaum\",\n        \"dweeb\",\n        \"dwile\",\n        \"dwine\",\n        \"dyads\",\n        \"dyers\",\n        \"dyked\",\n        \"dykes\",\n        \"dykey\",\n        \"dykon\",\n        \"dynel\",\n        \"dynes\",\n        \"dzhos\",\n        \"eagre\",\n        \"ealed\",\n        \"eales\",\n        \"eaned\",\n        \"eards\",\n        \"eared\",\n        \"earls\",\n        \"earns\",\n        \"earnt\",\n        \"earst\",\n        \"eased\",\n        \"easer\",\n        \"eases\",\n        \"easle\",\n        \"easts\",\n        \"eathe\",\n        \"eaved\",\n        \"eaves\",\n        \"ebbed\",\n        \"ebbet\",\n        \"ebons\",\n        \"ebook\",\n        \"ecads\",\n        \"eched\",\n        \"eches\",\n        \"echos\",\n        \"ecrus\",\n        \"edema\",\n        \"edged\",\n        \"edger\",\n        \"edges\",\n        \"edile\",\n        \"edits\",\n        \"educe\",\n        \"educt\",\n        \"eejit\",\n        \"eensy\",\n        \"eeven\",\n        \"eevns\",\n        \"effed\",\n        \"egads\",\n        \"egers\",\n        \"egest\",\n        \"eggar\",\n        \"egged\",\n        \"egger\",\n        \"egmas\",\n        \"ehing\",\n        \"eider\",\n        \"eidos\",\n        \"eigne\",\n        \"eiked\",\n        \"eikon\",\n        \"eilds\",\n        \"eisel\",\n        \"ejido\",\n        \"ekkas\",\n        \"elain\",\n        \"eland\",\n        \"elans\",\n        \"elchi\",\n        \"eldin\",\n        \"elemi\",\n        \"elfed\",\n        \"eliad\",\n        \"elint\",\n        \"elmen\",\n        \"eloge\",\n        \"elogy\",\n        \"eloin\",\n        \"elops\",\n        \"elpee\",\n        \"elsin\",\n        \"elute\",\n        \"elvan\",\n        \"elven\",\n        \"elver\",\n        \"elves\",\n        \"emacs\",\n        \"embar\",\n        \"embay\",\n        \"embog\",\n        \"embow\",\n        \"embox\",\n        \"embus\",\n        \"emeer\",\n        \"emend\",\n        \"emerg\",\n        \"emery\",\n        \"emeus\",\n        \"emics\",\n        \"emirs\",\n        \"emits\",\n        \"emmas\",\n        \"emmer\",\n        \"emmet\",\n        \"emmew\",\n        \"emmys\",\n        \"emoji\",\n        \"emong\",\n        \"emote\",\n        \"emove\",\n        \"empts\",\n        \"emule\",\n        \"emure\",\n        \"emyde\",\n        \"emyds\",\n        \"enarm\",\n        \"enate\",\n        \"ended\",\n        \"ender\",\n        \"endew\",\n        \"endue\",\n        \"enews\",\n        \"enfix\",\n        \"eniac\",\n        \"enlit\",\n        \"enmew\",\n        \"ennog\",\n        \"enoki\",\n        \"enols\",\n        \"enorm\",\n        \"enows\",\n        \"enrol\",\n        \"ensew\",\n        \"ensky\",\n        \"entia\",\n        \"enure\",\n        \"enurn\",\n        \"envoi\",\n        \"enzym\",\n        \"eorls\",\n        \"eosin\",\n        \"epact\",\n        \"epees\",\n        \"ephah\",\n        \"ephas\",\n        \"ephod\",\n        \"ephor\",\n        \"epics\",\n        \"epode\",\n        \"epopt\",\n        \"epris\",\n        \"eques\",\n        \"equid\",\n        \"erbia\",\n        \"erevs\",\n        \"ergon\",\n        \"ergos\",\n        \"ergot\",\n        \"erhus\",\n        \"erica\",\n        \"erick\",\n        \"erics\",\n        \"ering\",\n        \"erned\",\n        \"ernes\",\n        \"erose\",\n        \"erred\",\n        \"erses\",\n        \"eruct\",\n        \"erugo\",\n        \"eruvs\",\n        \"erven\",\n        \"ervil\",\n        \"escar\",\n        \"escot\",\n        \"esile\",\n        \"eskar\",\n        \"esker\",\n        \"esnes\",\n        \"esses\",\n        \"estoc\",\n        \"estop\",\n        \"estro\",\n        \"etage\",\n        \"etape\",\n        \"etats\",\n        \"etens\",\n        \"ethal\",\n        \"ethne\",\n        \"ethyl\",\n        \"etics\",\n        \"etnas\",\n        \"ettin\",\n        \"ettle\",\n        \"etuis\",\n        \"etwee\",\n        \"etyma\",\n        \"eughs\",\n        \"euked\",\n        \"eupad\",\n        \"euros\",\n        \"eusol\",\n        \"evens\",\n        \"evert\",\n        \"evets\",\n        \"evhoe\",\n        \"evils\",\n        \"evite\",\n        \"evohe\",\n        \"ewers\",\n        \"ewest\",\n        \"ewhow\",\n        \"ewked\",\n        \"exams\",\n        \"exeat\",\n        \"execs\",\n        \"exeem\",\n        \"exeme\",\n        \"exfil\",\n        \"exies\",\n        \"exine\",\n        \"exing\",\n        \"exits\",\n        \"exode\",\n        \"exome\",\n        \"exons\",\n        \"expat\",\n        \"expos\",\n        \"exude\",\n        \"exuls\",\n        \"exurb\",\n        \"eyass\",\n        \"eyers\",\n        \"eyots\",\n        \"eyras\",\n        \"eyres\",\n        \"eyrie\",\n        \"eyrir\",\n        \"ezine\",\n        \"fabby\",\n        \"faced\",\n        \"facer\",\n        \"faces\",\n        \"facia\",\n        \"facta\",\n        \"facts\",\n        \"faddy\",\n        \"faded\",\n        \"fader\",\n        \"fades\",\n        \"fadge\",\n        \"fados\",\n        \"faena\",\n        \"faery\",\n        \"faffs\",\n        \"faffy\",\n        \"faggy\",\n        \"fagin\",\n        \"fagot\",\n        \"faiks\",\n        \"fails\",\n        \"faine\",\n        \"fains\",\n        \"fairs\",\n        \"faked\",\n        \"faker\",\n        \"fakes\",\n        \"fakey\",\n        \"fakie\",\n        \"fakir\",\n        \"falaj\",\n        \"falls\",\n        \"famed\",\n        \"fames\",\n        \"fanal\",\n        \"fands\",\n        \"fanes\",\n        \"fanga\",\n        \"fango\",\n        \"fangs\",\n        \"fanks\",\n        \"fanon\",\n        \"fanos\",\n        \"fanum\",\n        \"faqir\",\n        \"farad\",\n        \"farci\",\n        \"farcy\",\n        \"fards\",\n        \"fared\",\n        \"farer\",\n        \"fares\",\n        \"farle\",\n        \"farls\",\n        \"farms\",\n        \"faros\",\n        \"farro\",\n        \"farse\",\n        \"farts\",\n        \"fasci\",\n        \"fasti\",\n        \"fasts\",\n        \"fated\",\n        \"fates\",\n        \"fatly\",\n        \"fatso\",\n        \"fatwa\",\n        \"faugh\",\n        \"fauld\",\n        \"fauns\",\n        \"faurd\",\n        \"fauts\",\n        \"fauve\",\n        \"favas\",\n        \"favel\",\n        \"faver\",\n        \"faves\",\n        \"favus\",\n        \"fawns\",\n        \"fawny\",\n        \"faxed\",\n        \"faxes\",\n        \"fayed\",\n        \"fayer\",\n        \"fayne\",\n        \"fayre\",\n        \"fazed\",\n        \"fazes\",\n        \"feals\",\n        \"feare\",\n        \"fears\",\n        \"feart\",\n        \"fease\",\n        \"feats\",\n        \"feaze\",\n        \"feces\",\n        \"fecht\",\n        \"fecit\",\n        \"fecks\",\n        \"fedex\",\n        \"feebs\",\n        \"feeds\",\n        \"feels\",\n        \"feens\",\n        \"feers\",\n        \"feese\",\n        \"feeze\",\n        \"fehme\",\n        \"feint\",\n        \"feist\",\n        \"felch\",\n        \"felid\",\n        \"fells\",\n        \"felly\",\n        \"felts\",\n        \"felty\",\n        \"femal\",\n        \"femes\",\n        \"femmy\",\n        \"fends\",\n        \"fendy\",\n        \"fenis\",\n        \"fenks\",\n        \"fenny\",\n        \"fents\",\n        \"feods\",\n        \"feoff\",\n        \"ferer\",\n        \"feres\",\n        \"feria\",\n        \"ferly\",\n        \"fermi\",\n        \"ferms\",\n        \"ferns\",\n        \"ferny\",\n        \"fesse\",\n        \"festa\",\n        \"fests\",\n        \"festy\",\n        \"fetas\",\n        \"feted\",\n        \"fetes\",\n        \"fetor\",\n        \"fetta\",\n        \"fetts\",\n        \"fetwa\",\n        \"feuar\",\n        \"feuds\",\n        \"feued\",\n        \"feyed\",\n        \"feyer\",\n        \"feyly\",\n        \"fezes\",\n        \"fezzy\",\n        \"fiars\",\n        \"fiats\",\n        \"fibro\",\n        \"fices\",\n        \"fiche\",\n        \"fichu\",\n        \"ficin\",\n        \"ficos\",\n        \"fides\",\n        \"fidge\",\n        \"fidos\",\n        \"fiefs\",\n        \"fient\",\n        \"fiere\",\n        \"fiers\",\n        \"fiest\",\n        \"fifed\",\n        \"fifer\",\n        \"fifes\",\n        \"fifis\",\n        \"figgy\",\n        \"figos\",\n        \"fiked\",\n        \"fikes\",\n        \"filar\",\n        \"filch\",\n        \"filed\",\n        \"files\",\n        \"filii\",\n        \"filks\",\n        \"fille\",\n        \"fillo\",\n        \"fills\",\n        \"filmi\",\n        \"films\",\n        \"filos\",\n        \"filum\",\n        \"finca\",\n        \"finds\",\n        \"fined\",\n        \"fines\",\n        \"finis\",\n        \"finks\",\n        \"finny\",\n        \"finos\",\n        \"fiord\",\n        \"fiqhs\",\n        \"fique\",\n        \"fired\",\n        \"firer\",\n        \"fires\",\n        \"firie\",\n        \"firks\",\n        \"firms\",\n        \"firns\",\n        \"firry\",\n        \"firth\",\n        \"fiscs\",\n        \"fisks\",\n        \"fists\",\n        \"fisty\",\n        \"fitch\",\n        \"fitly\",\n        \"fitna\",\n        \"fitte\",\n        \"fitts\",\n        \"fiver\",\n        \"fives\",\n        \"fixed\",\n        \"fixes\",\n        \"fixit\",\n        \"fjeld\",\n        \"flabs\",\n        \"flaff\",\n        \"flags\",\n        \"flaks\",\n        \"flamm\",\n        \"flams\",\n        \"flamy\",\n        \"flane\",\n        \"flans\",\n        \"flaps\",\n        \"flary\",\n        \"flats\",\n        \"flava\",\n        \"flawn\",\n        \"flaws\",\n        \"flawy\",\n        \"flaxy\",\n        \"flays\",\n        \"fleam\",\n        \"fleas\",\n        \"fleek\",\n        \"fleer\",\n        \"flees\",\n        \"flegs\",\n        \"fleme\",\n        \"fleur\",\n        \"flews\",\n        \"flexi\",\n        \"flexo\",\n        \"fleys\",\n        \"flics\",\n        \"flied\",\n        \"flies\",\n        \"flimp\",\n        \"flims\",\n        \"flips\",\n        \"flirs\",\n        \"flisk\",\n        \"flite\",\n        \"flits\",\n        \"flitt\",\n        \"flobs\",\n        \"flocs\",\n        \"floes\",\n        \"flogs\",\n        \"flong\",\n        \"flops\",\n        \"flors\",\n        \"flory\",\n        \"flosh\",\n        \"flota\",\n        \"flote\",\n        \"flows\",\n        \"flubs\",\n        \"flued\",\n        \"flues\",\n        \"fluey\",\n        \"fluky\",\n        \"flump\",\n        \"fluor\",\n        \"flurr\",\n        \"fluty\",\n        \"fluyt\",\n        \"flyby\",\n        \"flype\",\n        \"flyte\",\n        \"foals\",\n        \"foams\",\n        \"foehn\",\n        \"fogey\",\n        \"fogie\",\n        \"fogle\",\n        \"fogou\",\n        \"fohns\",\n        \"foids\",\n        \"foils\",\n        \"foins\",\n        \"folds\",\n        \"foley\",\n        \"folia\",\n        \"folic\",\n        \"folie\",\n        \"folks\",\n        \"folky\",\n        \"fomes\",\n        \"fonda\",\n        \"fonds\",\n        \"fondu\",\n        \"fones\",\n        \"fonly\",\n        \"fonts\",\n        \"foods\",\n        \"foody\",\n        \"fools\",\n        \"foots\",\n        \"footy\",\n        \"foram\",\n        \"forbs\",\n        \"forby\",\n        \"fordo\",\n        \"fords\",\n        \"forel\",\n        \"fores\",\n        \"forex\",\n        \"forks\",\n        \"forky\",\n        \"forme\",\n        \"forms\",\n        \"forts\",\n        \"forza\",\n        \"forze\",\n        \"fossa\",\n        \"fosse\",\n        \"fouat\",\n        \"fouds\",\n        \"fouer\",\n        \"fouet\",\n        \"foule\",\n        \"fouls\",\n        \"fount\",\n        \"fours\",\n        \"fouth\",\n        \"fovea\",\n        \"fowls\",\n        \"fowth\",\n        \"foxed\",\n        \"foxes\",\n        \"foxie\",\n        \"foyle\",\n        \"foyne\",\n        \"frabs\",\n        \"frack\",\n        \"fract\",\n        \"frags\",\n        \"fraim\",\n        \"franc\",\n        \"frape\",\n        \"fraps\",\n        \"frass\",\n        \"frate\",\n        \"frati\",\n        \"frats\",\n        \"fraus\",\n        \"frays\",\n        \"frees\",\n        \"freet\",\n        \"freit\",\n        \"fremd\",\n        \"frena\",\n        \"freon\",\n        \"frere\",\n        \"frets\",\n        \"fribs\",\n        \"frier\",\n        \"fries\",\n        \"frigs\",\n        \"frise\",\n        \"frist\",\n        \"frith\",\n        \"frits\",\n        \"fritt\",\n        \"frize\",\n        \"frizz\",\n        \"froes\",\n        \"frogs\",\n        \"frons\",\n        \"frore\",\n        \"frorn\",\n        \"frory\",\n        \"frosh\",\n        \"frows\",\n        \"frowy\",\n        \"frugs\",\n        \"frump\",\n        \"frush\",\n        \"frust\",\n        \"fryer\",\n        \"fubar\",\n        \"fubby\",\n        \"fubsy\",\n        \"fucks\",\n        \"fucus\",\n        \"fuddy\",\n        \"fudgy\",\n        \"fuels\",\n        \"fuero\",\n        \"fuffs\",\n        \"fuffy\",\n        \"fugal\",\n        \"fuggy\",\n        \"fugie\",\n        \"fugio\",\n        \"fugle\",\n        \"fugly\",\n        \"fugus\",\n        \"fujis\",\n        \"fulls\",\n        \"fumed\",\n        \"fumer\",\n        \"fumes\",\n        \"fumet\",\n        \"fundi\",\n        \"funds\",\n        \"fundy\",\n        \"fungo\",\n        \"fungs\",\n        \"funks\",\n        \"fural\",\n        \"furan\",\n        \"furca\",\n        \"furls\",\n        \"furol\",\n        \"furrs\",\n        \"furth\",\n        \"furze\",\n        \"furzy\",\n        \"fused\",\n        \"fusee\",\n        \"fusel\",\n        \"fuses\",\n        \"fusil\",\n        \"fusks\",\n        \"fusts\",\n        \"fusty\",\n        \"futon\",\n        \"fuzed\",\n        \"fuzee\",\n        \"fuzes\",\n        \"fuzil\",\n        \"fyces\",\n        \"fyked\",\n        \"fykes\",\n        \"fyles\",\n        \"fyrds\",\n        \"fytte\",\n        \"gabba\",\n        \"gabby\",\n        \"gable\",\n        \"gaddi\",\n        \"gades\",\n        \"gadge\",\n        \"gadid\",\n        \"gadis\",\n        \"gadje\",\n        \"gadjo\",\n        \"gadso\",\n        \"gaffs\",\n        \"gaged\",\n        \"gager\",\n        \"gages\",\n        \"gaids\",\n        \"gains\",\n        \"gairs\",\n        \"gaita\",\n        \"gaits\",\n        \"gaitt\",\n        \"gajos\",\n        \"galah\",\n        \"galas\",\n        \"galax\",\n        \"galea\",\n        \"galed\",\n        \"gales\",\n        \"galls\",\n        \"gally\",\n        \"galop\",\n        \"galut\",\n        \"galvo\",\n        \"gamas\",\n        \"gamay\",\n        \"gamba\",\n        \"gambe\",\n        \"gambo\",\n        \"gambs\",\n        \"gamed\",\n        \"games\",\n        \"gamey\",\n        \"gamic\",\n        \"gamin\",\n        \"gamme\",\n        \"gammy\",\n        \"gamps\",\n        \"ganch\",\n        \"gandy\",\n        \"ganef\",\n        \"ganev\",\n        \"gangs\",\n        \"ganja\",\n        \"ganof\",\n        \"gants\",\n        \"gaols\",\n        \"gaped\",\n        \"gaper\",\n        \"gapes\",\n        \"gapos\",\n        \"gappy\",\n        \"garbe\",\n        \"garbo\",\n        \"garbs\",\n        \"garda\",\n        \"gares\",\n        \"garis\",\n        \"garms\",\n        \"garni\",\n        \"garre\",\n        \"garth\",\n        \"garum\",\n        \"gases\",\n        \"gasps\",\n        \"gaspy\",\n        \"gasts\",\n        \"gatch\",\n        \"gated\",\n        \"gater\",\n        \"gates\",\n        \"gaths\",\n        \"gator\",\n        \"gauch\",\n        \"gaucy\",\n        \"gauds\",\n        \"gauje\",\n        \"gault\",\n        \"gaums\",\n        \"gaumy\",\n        \"gaups\",\n        \"gaurs\",\n        \"gauss\",\n        \"gauzy\",\n        \"gavot\",\n        \"gawcy\",\n        \"gawds\",\n        \"gawks\",\n        \"gawps\",\n        \"gawsy\",\n        \"gayal\",\n        \"gazal\",\n        \"gazar\",\n        \"gazed\",\n        \"gazes\",\n        \"gazon\",\n        \"gazoo\",\n        \"geals\",\n        \"geans\",\n        \"geare\",\n        \"gears\",\n        \"geats\",\n        \"gebur\",\n        \"gecks\",\n        \"geeks\",\n        \"geeps\",\n        \"geest\",\n        \"geist\",\n        \"geits\",\n        \"gelds\",\n        \"gelee\",\n        \"gelid\",\n        \"gelly\",\n        \"gelts\",\n        \"gemel\",\n        \"gemma\",\n        \"gemmy\",\n        \"gemot\",\n        \"genal\",\n        \"genas\",\n        \"genes\",\n        \"genet\",\n        \"genic\",\n        \"genii\",\n        \"genip\",\n        \"genny\",\n        \"genoa\",\n        \"genom\",\n        \"genro\",\n        \"gents\",\n        \"genty\",\n        \"genua\",\n        \"genus\",\n        \"geode\",\n        \"geoid\",\n        \"gerah\",\n        \"gerbe\",\n        \"geres\",\n        \"gerle\",\n        \"germs\",\n        \"germy\",\n        \"gerne\",\n        \"gesse\",\n        \"gesso\",\n        \"geste\",\n        \"gests\",\n        \"getas\",\n        \"getup\",\n        \"geums\",\n        \"geyan\",\n        \"geyer\",\n        \"ghast\",\n        \"ghats\",\n        \"ghaut\",\n        \"ghazi\",\n        \"ghees\",\n        \"ghest\",\n        \"ghyll\",\n        \"gibed\",\n        \"gibel\",\n        \"giber\",\n        \"gibes\",\n        \"gibli\",\n        \"gibus\",\n        \"gifts\",\n        \"gigas\",\n        \"gighe\",\n        \"gigot\",\n        \"gigue\",\n        \"gilas\",\n        \"gilds\",\n        \"gilet\",\n        \"gills\",\n        \"gilly\",\n        \"gilpy\",\n        \"gilts\",\n        \"gimel\",\n        \"gimme\",\n        \"gimps\",\n        \"gimpy\",\n        \"ginch\",\n        \"ginge\",\n        \"gings\",\n        \"ginks\",\n        \"ginny\",\n        \"ginzo\",\n        \"gipon\",\n        \"gippo\",\n        \"gippy\",\n        \"girds\",\n        \"girls\",\n        \"girns\",\n        \"giron\",\n        \"giros\",\n        \"girrs\",\n        \"girsh\",\n        \"girts\",\n        \"gismo\",\n        \"gisms\",\n        \"gists\",\n        \"gitch\",\n        \"gites\",\n        \"giust\",\n        \"gived\",\n        \"gives\",\n        \"gizmo\",\n        \"glace\",\n        \"glads\",\n        \"glady\",\n        \"glaik\",\n        \"glair\",\n        \"glams\",\n        \"glans\",\n        \"glary\",\n        \"glaum\",\n        \"glaur\",\n        \"glazy\",\n        \"gleba\",\n        \"glebe\",\n        \"gleby\",\n        \"glede\",\n        \"gleds\",\n        \"gleed\",\n        \"gleek\",\n        \"glees\",\n        \"gleet\",\n        \"gleis\",\n        \"glens\",\n        \"glent\",\n        \"gleys\",\n        \"glial\",\n        \"glias\",\n        \"glibs\",\n        \"gliff\",\n        \"glift\",\n        \"glike\",\n        \"glime\",\n        \"glims\",\n        \"glisk\",\n        \"glits\",\n        \"glitz\",\n        \"gloam\",\n        \"globi\",\n        \"globs\",\n        \"globy\",\n        \"glode\",\n        \"glogg\",\n        \"gloms\",\n        \"gloop\",\n        \"glops\",\n        \"glost\",\n        \"glout\",\n        \"glows\",\n        \"gloze\",\n        \"glued\",\n        \"gluer\",\n        \"glues\",\n        \"gluey\",\n        \"glugs\",\n        \"glume\",\n        \"glums\",\n        \"gluon\",\n        \"glute\",\n        \"gluts\",\n        \"gnarl\",\n        \"gnarr\",\n        \"gnars\",\n        \"gnats\",\n        \"gnawn\",\n        \"gnaws\",\n        \"gnows\",\n        \"goads\",\n        \"goafs\",\n        \"goals\",\n        \"goary\",\n        \"goats\",\n        \"goaty\",\n        \"goban\",\n        \"gobar\",\n        \"gobbi\",\n        \"gobbo\",\n        \"gobby\",\n        \"gobis\",\n        \"gobos\",\n        \"godet\",\n        \"godso\",\n        \"goels\",\n        \"goers\",\n        \"goest\",\n        \"goeth\",\n        \"goety\",\n        \"gofer\",\n        \"goffs\",\n        \"gogga\",\n        \"gogos\",\n        \"goier\",\n        \"gojis\",\n        \"golds\",\n        \"goldy\",\n        \"goles\",\n        \"golfs\",\n        \"golpe\",\n        \"golps\",\n        \"gombo\",\n        \"gomer\",\n        \"gompa\",\n        \"gonch\",\n        \"gonef\",\n        \"gongs\",\n        \"gonia\",\n        \"gonif\",\n        \"gonks\",\n        \"gonna\",\n        \"gonof\",\n        \"gonys\",\n        \"gonzo\",\n        \"gooby\",\n        \"goods\",\n        \"goofs\",\n        \"googs\",\n        \"gooks\",\n        \"gooky\",\n        \"goold\",\n        \"gools\",\n        \"gooly\",\n        \"goons\",\n        \"goony\",\n        \"goops\",\n        \"goopy\",\n        \"goors\",\n        \"goory\",\n        \"goosy\",\n        \"gopak\",\n        \"gopik\",\n        \"goral\",\n        \"goras\",\n        \"gored\",\n        \"gores\",\n        \"goris\",\n        \"gorms\",\n        \"gormy\",\n        \"gorps\",\n        \"gorse\",\n        \"gorsy\",\n        \"gosht\",\n        \"gosse\",\n        \"gotch\",\n        \"goths\",\n        \"gothy\",\n        \"gotta\",\n        \"gouch\",\n        \"gouks\",\n        \"goura\",\n        \"gouts\",\n        \"gouty\",\n        \"gowan\",\n        \"gowds\",\n        \"gowfs\",\n        \"gowks\",\n        \"gowls\",\n        \"gowns\",\n        \"goxes\",\n        \"goyim\",\n        \"goyle\",\n        \"graal\",\n        \"grabs\",\n        \"grads\",\n        \"graff\",\n        \"graip\",\n        \"grama\",\n        \"grame\",\n        \"gramp\",\n        \"grams\",\n        \"grana\",\n        \"grans\",\n        \"grapy\",\n        \"gravs\",\n        \"grays\",\n        \"grebe\",\n        \"grebo\",\n        \"grece\",\n        \"greek\",\n        \"grees\",\n        \"grege\",\n        \"grego\",\n        \"grein\",\n        \"grens\",\n        \"grese\",\n        \"greve\",\n        \"grews\",\n        \"greys\",\n        \"grice\",\n        \"gride\",\n        \"grids\",\n        \"griff\",\n        \"grift\",\n        \"grigs\",\n        \"grike\",\n        \"grins\",\n        \"griot\",\n        \"grips\",\n        \"gript\",\n        \"gripy\",\n        \"grise\",\n        \"grist\",\n        \"grisy\",\n        \"grith\",\n        \"grits\",\n        \"grize\",\n        \"groat\",\n        \"grody\",\n        \"grogs\",\n        \"groks\",\n        \"groma\",\n        \"grone\",\n        \"groof\",\n        \"grosz\",\n        \"grots\",\n        \"grouf\",\n        \"grovy\",\n        \"grows\",\n        \"grrls\",\n        \"grrrl\",\n        \"grubs\",\n        \"grued\",\n        \"grues\",\n        \"grufe\",\n        \"grume\",\n        \"grump\",\n        \"grund\",\n        \"gryce\",\n        \"gryde\",\n        \"gryke\",\n        \"grype\",\n        \"grypt\",\n        \"guaco\",\n        \"guana\",\n        \"guano\",\n        \"guans\",\n        \"guars\",\n        \"gucks\",\n        \"gucky\",\n        \"gudes\",\n        \"guffs\",\n        \"gugas\",\n        \"guids\",\n        \"guimp\",\n        \"guiro\",\n        \"gulag\",\n        \"gular\",\n        \"gulas\",\n        \"gules\",\n        \"gulet\",\n        \"gulfs\",\n        \"gulfy\",\n        \"gulls\",\n        \"gulph\",\n        \"gulps\",\n        \"gulpy\",\n        \"gumma\",\n        \"gummi\",\n        \"gumps\",\n        \"gundy\",\n        \"gunge\",\n        \"gungy\",\n        \"gunks\",\n        \"gunky\",\n        \"gunny\",\n        \"guqin\",\n        \"gurdy\",\n        \"gurge\",\n        \"gurls\",\n        \"gurly\",\n        \"gurns\",\n        \"gurry\",\n        \"gursh\",\n        \"gurus\",\n        \"gushy\",\n        \"gusla\",\n        \"gusle\",\n        \"gusli\",\n        \"gussy\",\n        \"gusts\",\n        \"gutsy\",\n        \"gutta\",\n        \"gutty\",\n        \"guyed\",\n        \"guyle\",\n        \"guyot\",\n        \"guyse\",\n        \"gwine\",\n        \"gyals\",\n        \"gyans\",\n        \"gybed\",\n        \"gybes\",\n        \"gyeld\",\n        \"gymps\",\n        \"gynae\",\n        \"gynie\",\n        \"gynny\",\n        \"gynos\",\n        \"gyoza\",\n        \"gypos\",\n        \"gyppo\",\n        \"gyppy\",\n        \"gyral\",\n        \"gyred\",\n        \"gyres\",\n        \"gyron\",\n        \"gyros\",\n        \"gyrus\",\n        \"gytes\",\n        \"gyved\",\n        \"gyves\",\n        \"haafs\",\n        \"haars\",\n        \"hable\",\n        \"habus\",\n        \"hacek\",\n        \"hacks\",\n        \"hadal\",\n        \"haded\",\n        \"hades\",\n        \"hadji\",\n        \"hadst\",\n        \"haems\",\n        \"haets\",\n        \"haffs\",\n        \"hafiz\",\n        \"hafts\",\n        \"haggs\",\n        \"hahas\",\n        \"haick\",\n        \"haika\",\n        \"haiks\",\n        \"haiku\",\n        \"hails\",\n        \"haily\",\n        \"hains\",\n        \"haint\",\n        \"hairs\",\n        \"haith\",\n        \"hajes\",\n        \"hajis\",\n        \"hajji\",\n        \"hakam\",\n        \"hakas\",\n        \"hakea\",\n        \"hakes\",\n        \"hakim\",\n        \"hakus\",\n        \"halal\",\n        \"haled\",\n        \"haler\",\n        \"hales\",\n        \"halfa\",\n        \"halfs\",\n        \"halid\",\n        \"hallo\",\n        \"halls\",\n        \"halma\",\n        \"halms\",\n        \"halon\",\n        \"halos\",\n        \"halse\",\n        \"halts\",\n        \"halva\",\n        \"halwa\",\n        \"hamal\",\n        \"hamba\",\n        \"hamed\",\n        \"hames\",\n        \"hammy\",\n        \"hamza\",\n        \"hanap\",\n        \"hance\",\n        \"hanch\",\n        \"hands\",\n        \"hangi\",\n        \"hangs\",\n        \"hanks\",\n        \"hanky\",\n        \"hansa\",\n        \"hanse\",\n        \"hants\",\n        \"haole\",\n        \"haoma\",\n        \"hapax\",\n        \"haply\",\n        \"happi\",\n        \"hapus\",\n        \"haram\",\n        \"hards\",\n        \"hared\",\n        \"hares\",\n        \"harim\",\n        \"harks\",\n        \"harls\",\n        \"harms\",\n        \"harns\",\n        \"haros\",\n        \"harps\",\n        \"harts\",\n        \"hashy\",\n        \"hasks\",\n        \"hasps\",\n        \"hasta\",\n        \"hated\",\n        \"hates\",\n        \"hatha\",\n        \"hauds\",\n        \"haufs\",\n        \"haugh\",\n        \"hauld\",\n        \"haulm\",\n        \"hauls\",\n        \"hault\",\n        \"hauns\",\n        \"hause\",\n        \"haver\",\n        \"haves\",\n        \"hawed\",\n        \"hawks\",\n        \"hawms\",\n        \"hawse\",\n        \"hayed\",\n        \"hayer\",\n        \"hayey\",\n        \"hayle\",\n        \"hazan\",\n        \"hazed\",\n        \"hazer\",\n        \"hazes\",\n        \"heads\",\n        \"heald\",\n        \"heals\",\n        \"heame\",\n        \"heaps\",\n        \"heapy\",\n        \"heare\",\n        \"hears\",\n        \"heast\",\n        \"heats\",\n        \"heben\",\n        \"hebes\",\n        \"hecht\",\n        \"hecks\",\n        \"heder\",\n        \"hedgy\",\n        \"heeds\",\n        \"heedy\",\n        \"heels\",\n        \"heeze\",\n        \"hefte\",\n        \"hefts\",\n        \"heids\",\n        \"heigh\",\n        \"heils\",\n        \"heirs\",\n        \"hejab\",\n        \"hejra\",\n        \"heled\",\n        \"heles\",\n        \"helio\",\n        \"hells\",\n        \"helms\",\n        \"helos\",\n        \"helot\",\n        \"helps\",\n        \"helve\",\n        \"hemal\",\n        \"hemes\",\n        \"hemic\",\n        \"hemin\",\n        \"hemps\",\n        \"hempy\",\n        \"hench\",\n        \"hends\",\n        \"henge\",\n        \"henna\",\n        \"henny\",\n        \"henry\",\n        \"hents\",\n        \"hepar\",\n        \"herbs\",\n        \"herby\",\n        \"herds\",\n        \"heres\",\n        \"herls\",\n        \"herma\",\n        \"herms\",\n        \"herns\",\n        \"heros\",\n        \"herry\",\n        \"herse\",\n        \"hertz\",\n        \"herye\",\n        \"hesps\",\n        \"hests\",\n        \"hetes\",\n        \"heths\",\n        \"heuch\",\n        \"heugh\",\n        \"hevea\",\n        \"hewed\",\n        \"hewer\",\n        \"hewgh\",\n        \"hexad\",\n        \"hexed\",\n        \"hexer\",\n        \"hexes\",\n        \"hexyl\",\n        \"heyed\",\n        \"hiant\",\n        \"hicks\",\n        \"hided\",\n        \"hider\",\n        \"hides\",\n        \"hiems\",\n        \"highs\",\n        \"hight\",\n        \"hijab\",\n        \"hijra\",\n        \"hiked\",\n        \"hiker\",\n        \"hikes\",\n        \"hikoi\",\n        \"hilar\",\n        \"hilch\",\n        \"hillo\",\n        \"hills\",\n        \"hilts\",\n        \"hilum\",\n        \"hilus\",\n        \"himbo\",\n        \"hinau\",\n        \"hinds\",\n        \"hings\",\n        \"hinky\",\n        \"hinny\",\n        \"hints\",\n        \"hiois\",\n        \"hiply\",\n        \"hired\",\n        \"hiree\",\n        \"hirer\",\n        \"hires\",\n        \"hissy\",\n        \"hists\",\n        \"hithe\",\n        \"hived\",\n        \"hiver\",\n        \"hives\",\n        \"hizen\",\n        \"hoaed\",\n        \"hoagy\",\n        \"hoars\",\n        \"hoary\",\n        \"hoast\",\n        \"hobos\",\n        \"hocks\",\n        \"hocus\",\n        \"hodad\",\n        \"hodja\",\n        \"hoers\",\n        \"hogan\",\n        \"hogen\",\n        \"hoggs\",\n        \"hoghs\",\n        \"hohed\",\n        \"hoick\",\n        \"hoied\",\n        \"hoiks\",\n        \"hoing\",\n        \"hoise\",\n        \"hokas\",\n        \"hoked\",\n        \"hokes\",\n        \"hokey\",\n        \"hokis\",\n        \"hokku\",\n        \"hokum\",\n        \"holds\",\n        \"holed\",\n        \"holes\",\n        \"holey\",\n        \"holks\",\n        \"holla\",\n        \"hollo\",\n        \"holme\",\n        \"holms\",\n        \"holon\",\n        \"holos\",\n        \"holts\",\n        \"homas\",\n        \"homed\",\n        \"homes\",\n        \"homey\",\n        \"homie\",\n        \"homme\",\n        \"homos\",\n        \"honan\",\n        \"honda\",\n        \"honds\",\n        \"honed\",\n        \"honer\",\n        \"hones\",\n        \"hongi\",\n        \"hongs\",\n        \"honks\",\n        \"honky\",\n        \"hooch\",\n        \"hoods\",\n        \"hoody\",\n        \"hooey\",\n        \"hoofs\",\n        \"hooka\",\n        \"hooks\",\n        \"hooky\",\n        \"hooly\",\n        \"hoons\",\n        \"hoops\",\n        \"hoord\",\n        \"hoors\",\n        \"hoosh\",\n        \"hoots\",\n        \"hooty\",\n        \"hoove\",\n        \"hopak\",\n        \"hoped\",\n        \"hoper\",\n        \"hopes\",\n        \"hoppy\",\n        \"horah\",\n        \"horal\",\n        \"horas\",\n        \"horis\",\n        \"horks\",\n        \"horme\",\n        \"horns\",\n        \"horst\",\n        \"horsy\",\n        \"hosed\",\n        \"hosel\",\n        \"hosen\",\n        \"hoser\",\n        \"hoses\",\n        \"hosey\",\n        \"hosta\",\n        \"hosts\",\n        \"hotch\",\n        \"hoten\",\n        \"hotty\",\n        \"houff\",\n        \"houfs\",\n        \"hough\",\n        \"houri\",\n        \"hours\",\n        \"houts\",\n        \"hovea\",\n        \"hoved\",\n        \"hoven\",\n        \"hoves\",\n        \"howbe\",\n        \"howes\",\n        \"howff\",\n        \"howfs\",\n        \"howks\",\n        \"howls\",\n        \"howre\",\n        \"howso\",\n        \"hoxed\",\n        \"hoxes\",\n        \"hoyas\",\n        \"hoyed\",\n        \"hoyle\",\n        \"hubby\",\n        \"hucks\",\n        \"hudna\",\n        \"hudud\",\n        \"huers\",\n        \"huffs\",\n        \"huffy\",\n        \"huger\",\n        \"huggy\",\n        \"huhus\",\n        \"huias\",\n        \"hulas\",\n        \"hules\",\n        \"hulks\",\n        \"hulky\",\n        \"hullo\",\n        \"hulls\",\n        \"hully\",\n        \"humas\",\n        \"humfs\",\n        \"humic\",\n        \"humps\",\n        \"humpy\",\n        \"hunks\",\n        \"hunts\",\n        \"hurds\",\n        \"hurls\",\n        \"hurly\",\n        \"hurra\",\n        \"hurst\",\n        \"hurts\",\n        \"hushy\",\n        \"husks\",\n        \"husos\",\n        \"hutia\",\n        \"huzza\",\n        \"huzzy\",\n        \"hwyls\",\n        \"hydra\",\n        \"hyens\",\n        \"hygge\",\n        \"hying\",\n        \"hykes\",\n        \"hylas\",\n        \"hyleg\",\n        \"hyles\",\n        \"hylic\",\n        \"hymns\",\n        \"hynde\",\n        \"hyoid\",\n        \"hyped\",\n        \"hypes\",\n        \"hypha\",\n        \"hyphy\",\n        \"hypos\",\n        \"hyrax\",\n        \"hyson\",\n        \"hythe\",\n        \"iambi\",\n        \"iambs\",\n        \"ibrik\",\n        \"icers\",\n        \"iched\",\n        \"iches\",\n        \"ichor\",\n        \"icier\",\n        \"icker\",\n        \"ickle\",\n        \"icons\",\n        \"ictal\",\n        \"ictic\",\n        \"ictus\",\n        \"idant\",\n        \"ideas\",\n        \"idees\",\n        \"ident\",\n        \"idled\",\n        \"idles\",\n        \"idola\",\n        \"idols\",\n        \"idyls\",\n        \"iftar\",\n        \"igapo\",\n        \"igged\",\n        \"iglus\",\n        \"ihram\",\n        \"ikans\",\n        \"ikats\",\n        \"ikons\",\n        \"ileac\",\n        \"ileal\",\n        \"ileum\",\n        \"ileus\",\n        \"iliad\",\n        \"ilial\",\n        \"ilium\",\n        \"iller\",\n        \"illth\",\n        \"imago\",\n        \"imams\",\n        \"imari\",\n        \"imaum\",\n        \"imbar\",\n        \"imbed\",\n        \"imide\",\n        \"imido\",\n        \"imids\",\n        \"imine\",\n        \"imino\",\n        \"immew\",\n        \"immit\",\n        \"immix\",\n        \"imped\",\n        \"impis\",\n        \"impot\",\n        \"impro\",\n        \"imshi\",\n        \"imshy\",\n        \"inapt\",\n        \"inarm\",\n        \"inbye\",\n        \"incel\",\n        \"incle\",\n        \"incog\",\n        \"incus\",\n        \"incut\",\n        \"indew\",\n        \"india\",\n        \"indie\",\n        \"indol\",\n        \"indow\",\n        \"indri\",\n        \"indue\",\n        \"inerm\",\n        \"infix\",\n        \"infos\",\n        \"infra\",\n        \"ingan\",\n        \"ingle\",\n        \"inion\",\n        \"inked\",\n        \"inker\",\n        \"inkle\",\n        \"inned\",\n        \"innit\",\n        \"inorb\",\n        \"inrun\",\n        \"inset\",\n        \"inspo\",\n        \"intel\",\n        \"intil\",\n        \"intis\",\n        \"intra\",\n        \"inula\",\n        \"inure\",\n        \"inurn\",\n        \"inust\",\n        \"invar\",\n        \"inwit\",\n        \"iodic\",\n        \"iodid\",\n        \"iodin\",\n        \"iotas\",\n        \"ippon\",\n        \"irade\",\n        \"irids\",\n        \"iring\",\n        \"irked\",\n        \"iroko\",\n        \"irone\",\n        \"irons\",\n        \"isbas\",\n        \"ishes\",\n        \"isled\",\n        \"isles\",\n        \"isnae\",\n        \"issei\",\n        \"istle\",\n        \"items\",\n        \"ither\",\n        \"ivied\",\n        \"ivies\",\n        \"ixias\",\n        \"ixnay\",\n        \"ixora\",\n        \"ixtle\",\n        \"izard\",\n        \"izars\",\n        \"izzat\",\n        \"jaaps\",\n        \"jabot\",\n        \"jacal\",\n        \"jacks\",\n        \"jacky\",\n        \"jaded\",\n        \"jades\",\n        \"jafas\",\n        \"jaffa\",\n        \"jagas\",\n        \"jager\",\n        \"jaggs\",\n        \"jaggy\",\n        \"jagir\",\n        \"jagra\",\n        \"jails\",\n        \"jaker\",\n        \"jakes\",\n        \"jakey\",\n        \"jalap\",\n        \"jalop\",\n        \"jambe\",\n        \"jambo\",\n        \"jambs\",\n        \"jambu\",\n        \"james\",\n        \"jammy\",\n        \"jamon\",\n        \"janes\",\n        \"janns\",\n        \"janny\",\n        \"janty\",\n        \"japan\",\n        \"japed\",\n        \"japer\",\n        \"japes\",\n        \"jarks\",\n        \"jarls\",\n        \"jarps\",\n        \"jarta\",\n        \"jarul\",\n        \"jasey\",\n        \"jaspe\",\n        \"jasps\",\n        \"jatos\",\n        \"jauks\",\n        \"jaups\",\n        \"javas\",\n        \"javel\",\n        \"jawan\",\n        \"jawed\",\n        \"jaxie\",\n        \"jeans\",\n        \"jeats\",\n        \"jebel\",\n        \"jedis\",\n        \"jeels\",\n        \"jeely\",\n        \"jeeps\",\n        \"jeers\",\n        \"jeeze\",\n        \"jefes\",\n        \"jeffs\",\n        \"jehad\",\n        \"jehus\",\n        \"jelab\",\n        \"jello\",\n        \"jells\",\n        \"jembe\",\n        \"jemmy\",\n        \"jenny\",\n        \"jeons\",\n        \"jerid\",\n        \"jerks\",\n        \"jerry\",\n        \"jesse\",\n        \"jests\",\n        \"jesus\",\n        \"jetes\",\n        \"jeton\",\n        \"jeune\",\n        \"jewed\",\n        \"jewie\",\n        \"jhala\",\n        \"jiaos\",\n        \"jibba\",\n        \"jibbs\",\n        \"jibed\",\n        \"jiber\",\n        \"jibes\",\n        \"jiffs\",\n        \"jiggy\",\n        \"jigot\",\n        \"jihad\",\n        \"jills\",\n        \"jilts\",\n        \"jimmy\",\n        \"jimpy\",\n        \"jingo\",\n        \"jinks\",\n        \"jinne\",\n        \"jinni\",\n        \"jinns\",\n        \"jirds\",\n        \"jirga\",\n        \"jirre\",\n        \"jisms\",\n        \"jived\",\n        \"jiver\",\n        \"jives\",\n        \"jivey\",\n        \"jnana\",\n        \"jobed\",\n        \"jobes\",\n        \"jocko\",\n        \"jocks\",\n        \"jocky\",\n        \"jocos\",\n        \"jodel\",\n        \"joeys\",\n        \"johns\",\n        \"joins\",\n        \"joked\",\n        \"jokes\",\n        \"jokey\",\n        \"jokol\",\n        \"joled\",\n        \"joles\",\n        \"jolls\",\n        \"jolts\",\n        \"jolty\",\n        \"jomon\",\n        \"jomos\",\n        \"jones\",\n        \"jongs\",\n        \"jonty\",\n        \"jooks\",\n        \"joram\",\n        \"jorum\",\n        \"jotas\",\n        \"jotty\",\n        \"jotun\",\n        \"joual\",\n        \"jougs\",\n        \"jouks\",\n        \"joule\",\n        \"jours\",\n        \"jowar\",\n        \"jowed\",\n        \"jowls\",\n        \"jowly\",\n        \"joyed\",\n        \"jubas\",\n        \"jubes\",\n        \"jucos\",\n        \"judas\",\n        \"judgy\",\n        \"judos\",\n        \"jugal\",\n        \"jugum\",\n        \"jujus\",\n        \"juked\",\n        \"jukes\",\n        \"jukus\",\n        \"julep\",\n        \"jumar\",\n        \"jumby\",\n        \"jumps\",\n        \"junco\",\n        \"junks\",\n        \"junky\",\n        \"jupes\",\n        \"jupon\",\n        \"jural\",\n        \"jurat\",\n        \"jurel\",\n        \"jures\",\n        \"justs\",\n        \"jutes\",\n        \"jutty\",\n        \"juves\",\n        \"juvie\",\n        \"kaama\",\n        \"kabab\",\n        \"kabar\",\n        \"kabob\",\n        \"kacha\",\n        \"kacks\",\n        \"kadai\",\n        \"kades\",\n        \"kadis\",\n        \"kafir\",\n        \"kagos\",\n        \"kagus\",\n        \"kahal\",\n        \"kaiak\",\n        \"kaids\",\n        \"kaies\",\n        \"kaifs\",\n        \"kaika\",\n        \"kaiks\",\n        \"kails\",\n        \"kaims\",\n        \"kaing\",\n        \"kains\",\n        \"kakas\",\n        \"kakis\",\n        \"kalam\",\n        \"kales\",\n        \"kalif\",\n        \"kalis\",\n        \"kalpa\",\n        \"kamas\",\n        \"kames\",\n        \"kamik\",\n        \"kamis\",\n        \"kamme\",\n        \"kanae\",\n        \"kanas\",\n        \"kandy\",\n        \"kaneh\",\n        \"kanes\",\n        \"kanga\",\n        \"kangs\",\n        \"kanji\",\n        \"kants\",\n        \"kanzu\",\n        \"kaons\",\n        \"kapas\",\n        \"kaphs\",\n        \"kapok\",\n        \"kapow\",\n        \"kapus\",\n        \"kaput\",\n        \"karas\",\n        \"karat\",\n        \"karks\",\n        \"karns\",\n        \"karoo\",\n        \"karos\",\n        \"karri\",\n        \"karst\",\n        \"karsy\",\n        \"karts\",\n        \"karzy\",\n        \"kasha\",\n        \"kasme\",\n        \"katal\",\n        \"katas\",\n        \"katis\",\n        \"katti\",\n        \"kaugh\",\n        \"kauri\",\n        \"kauru\",\n        \"kaury\",\n        \"kaval\",\n        \"kavas\",\n        \"kawas\",\n        \"kawau\",\n        \"kawed\",\n        \"kayle\",\n        \"kayos\",\n        \"kazis\",\n        \"kazoo\",\n        \"kbars\",\n        \"kebar\",\n        \"kebob\",\n        \"kecks\",\n        \"kedge\",\n        \"kedgy\",\n        \"keech\",\n        \"keefs\",\n        \"keeks\",\n        \"keels\",\n        \"keema\",\n        \"keeno\",\n        \"keens\",\n        \"keeps\",\n        \"keets\",\n        \"keeve\",\n        \"kefir\",\n        \"kehua\",\n        \"keirs\",\n        \"kelep\",\n        \"kelim\",\n        \"kells\",\n        \"kelly\",\n        \"kelps\",\n        \"kelpy\",\n        \"kelts\",\n        \"kelty\",\n        \"kembo\",\n        \"kembs\",\n        \"kemps\",\n        \"kempt\",\n        \"kempy\",\n        \"kenaf\",\n        \"kench\",\n        \"kendo\",\n        \"kenos\",\n        \"kente\",\n        \"kents\",\n        \"kepis\",\n        \"kerbs\",\n        \"kerel\",\n        \"kerfs\",\n        \"kerky\",\n        \"kerma\",\n        \"kerne\",\n        \"kerns\",\n        \"keros\",\n        \"kerry\",\n        \"kerve\",\n        \"kesar\",\n        \"kests\",\n        \"ketas\",\n        \"ketch\",\n        \"ketes\",\n        \"ketol\",\n        \"kevel\",\n        \"kevil\",\n        \"kexes\",\n        \"keyed\",\n        \"keyer\",\n        \"khadi\",\n        \"khafs\",\n        \"khans\",\n        \"khaph\",\n        \"khats\",\n        \"khaya\",\n        \"khazi\",\n        \"kheda\",\n        \"kheth\",\n        \"khets\",\n        \"khoja\",\n        \"khors\",\n        \"khoum\",\n        \"khuds\",\n        \"kiaat\",\n        \"kiack\",\n        \"kiang\",\n        \"kibbe\",\n        \"kibbi\",\n        \"kibei\",\n        \"kibes\",\n        \"kibla\",\n        \"kicks\",\n        \"kicky\",\n        \"kiddo\",\n        \"kiddy\",\n        \"kidel\",\n        \"kidge\",\n        \"kiefs\",\n        \"kiers\",\n        \"kieve\",\n        \"kievs\",\n        \"kight\",\n        \"kikes\",\n        \"kikoi\",\n        \"kiley\",\n        \"kilim\",\n        \"kills\",\n        \"kilns\",\n        \"kilos\",\n        \"kilps\",\n        \"kilts\",\n        \"kilty\",\n        \"kimbo\",\n        \"kinas\",\n        \"kinda\",\n        \"kinds\",\n        \"kindy\",\n        \"kines\",\n        \"kings\",\n        \"kinin\",\n        \"kinks\",\n        \"kinos\",\n        \"kiore\",\n        \"kipes\",\n        \"kippa\",\n        \"kipps\",\n        \"kirby\",\n        \"kirks\",\n        \"kirns\",\n        \"kirri\",\n        \"kisan\",\n        \"kissy\",\n        \"kists\",\n        \"kited\",\n        \"kiter\",\n        \"kites\",\n        \"kithe\",\n        \"kiths\",\n        \"kitul\",\n        \"kivas\",\n        \"kiwis\",\n        \"klang\",\n        \"klaps\",\n        \"klett\",\n        \"klick\",\n        \"klieg\",\n        \"kliks\",\n        \"klong\",\n        \"kloof\",\n        \"kluge\",\n        \"klutz\",\n        \"knags\",\n        \"knaps\",\n        \"knarl\",\n        \"knars\",\n        \"knaur\",\n        \"knawe\",\n        \"knees\",\n        \"knell\",\n        \"knish\",\n        \"knits\",\n        \"knive\",\n        \"knobs\",\n        \"knops\",\n        \"knosp\",\n        \"knots\",\n        \"knout\",\n        \"knowe\",\n        \"knows\",\n        \"knubs\",\n        \"knurl\",\n        \"knurr\",\n        \"knurs\",\n        \"knuts\",\n        \"koans\",\n        \"koaps\",\n        \"koban\",\n        \"kobos\",\n        \"koels\",\n        \"koffs\",\n        \"kofta\",\n        \"kogal\",\n        \"kohas\",\n        \"kohen\",\n        \"kohls\",\n        \"koine\",\n        \"kojis\",\n        \"kokam\",\n        \"kokas\",\n        \"koker\",\n        \"kokra\",\n        \"kokum\",\n        \"kolas\",\n        \"kolos\",\n        \"kombu\",\n        \"konbu\",\n        \"kondo\",\n        \"konks\",\n        \"kooks\",\n        \"kooky\",\n        \"koori\",\n        \"kopek\",\n        \"kophs\",\n        \"kopje\",\n        \"koppa\",\n        \"korai\",\n        \"koras\",\n        \"korat\",\n        \"kores\",\n        \"korma\",\n        \"koros\",\n        \"korun\",\n        \"korus\",\n        \"koses\",\n        \"kotch\",\n        \"kotos\",\n        \"kotow\",\n        \"koura\",\n        \"kraal\",\n        \"krabs\",\n        \"kraft\",\n        \"krais\",\n        \"krait\",\n        \"krang\",\n        \"krans\",\n        \"kranz\",\n        \"kraut\",\n        \"krays\",\n        \"kreep\",\n        \"kreng\",\n        \"krewe\",\n        \"krona\",\n        \"krone\",\n        \"kroon\",\n        \"krubi\",\n        \"krunk\",\n        \"ksars\",\n        \"kubie\",\n        \"kudos\",\n        \"kudus\",\n        \"kudzu\",\n        \"kufis\",\n        \"kugel\",\n        \"kuias\",\n        \"kukri\",\n        \"kukus\",\n        \"kulak\",\n        \"kulan\",\n        \"kulas\",\n        \"kulfi\",\n        \"kumis\",\n        \"kumys\",\n        \"kuris\",\n        \"kurre\",\n        \"kurta\",\n        \"kurus\",\n        \"kusso\",\n        \"kutas\",\n        \"kutch\",\n        \"kutis\",\n        \"kutus\",\n        \"kuzus\",\n        \"kvass\",\n        \"kvell\",\n        \"kwela\",\n        \"kyack\",\n        \"kyaks\",\n        \"kyang\",\n        \"kyars\",\n        \"kyats\",\n        \"kybos\",\n        \"kydst\",\n        \"kyles\",\n        \"kylie\",\n        \"kylin\",\n        \"kylix\",\n        \"kyloe\",\n        \"kynde\",\n        \"kynds\",\n        \"kypes\",\n        \"kyrie\",\n        \"kytes\",\n        \"kythe\",\n        \"laari\",\n        \"labda\",\n        \"labia\",\n        \"labis\",\n        \"labra\",\n        \"laced\",\n        \"lacer\",\n        \"laces\",\n        \"lacet\",\n        \"lacey\",\n        \"lacks\",\n        \"laddy\",\n        \"laded\",\n        \"lader\",\n        \"lades\",\n        \"laers\",\n        \"laevo\",\n        \"lagan\",\n        \"lahal\",\n        \"lahar\",\n        \"laich\",\n        \"laics\",\n        \"laids\",\n        \"laigh\",\n        \"laika\",\n        \"laiks\",\n        \"laird\",\n        \"lairs\",\n        \"lairy\",\n        \"laith\",\n        \"laity\",\n        \"laked\",\n        \"laker\",\n        \"lakes\",\n        \"lakhs\",\n        \"lakin\",\n        \"laksa\",\n        \"laldy\",\n        \"lalls\",\n        \"lamas\",\n        \"lambs\",\n        \"lamby\",\n        \"lamed\",\n        \"lamer\",\n        \"lames\",\n        \"lamia\",\n        \"lammy\",\n        \"lamps\",\n        \"lanai\",\n        \"lanas\",\n        \"lanch\",\n        \"lande\",\n        \"lands\",\n        \"lanes\",\n        \"lanks\",\n        \"lants\",\n        \"lapin\",\n        \"lapis\",\n        \"lapje\",\n        \"larch\",\n        \"lards\",\n        \"lardy\",\n        \"laree\",\n        \"lares\",\n        \"largo\",\n        \"laris\",\n        \"larks\",\n        \"larky\",\n        \"larns\",\n        \"larnt\",\n        \"larum\",\n        \"lased\",\n        \"laser\",\n        \"lases\",\n        \"lassi\",\n        \"lassu\",\n        \"lassy\",\n        \"lasts\",\n        \"latah\",\n        \"lated\",\n        \"laten\",\n        \"latex\",\n        \"lathi\",\n        \"laths\",\n        \"lathy\",\n        \"latke\",\n        \"latus\",\n        \"lauan\",\n        \"lauch\",\n        \"lauds\",\n        \"laufs\",\n        \"laund\",\n        \"laura\",\n        \"laval\",\n        \"lavas\",\n        \"laved\",\n        \"laver\",\n        \"laves\",\n        \"lavra\",\n        \"lavvy\",\n        \"lawed\",\n        \"lawer\",\n        \"lawin\",\n        \"lawks\",\n        \"lawns\",\n        \"lawny\",\n        \"laxed\",\n        \"laxer\",\n        \"laxes\",\n        \"laxly\",\n        \"layed\",\n        \"layin\",\n        \"layup\",\n        \"lazar\",\n        \"lazed\",\n        \"lazes\",\n        \"lazos\",\n        \"lazzi\",\n        \"lazzo\",\n        \"leads\",\n        \"leady\",\n        \"leafs\",\n        \"leaks\",\n        \"leams\",\n        \"leans\",\n        \"leany\",\n        \"leaps\",\n        \"leare\",\n        \"lears\",\n        \"leary\",\n        \"leats\",\n        \"leavy\",\n        \"leaze\",\n        \"leben\",\n        \"leccy\",\n        \"ledes\",\n        \"ledgy\",\n        \"ledum\",\n        \"leear\",\n        \"leeks\",\n        \"leeps\",\n        \"leers\",\n        \"leese\",\n        \"leets\",\n        \"leeze\",\n        \"lefte\",\n        \"lefts\",\n        \"leger\",\n        \"leges\",\n        \"legge\",\n        \"leggo\",\n        \"legit\",\n        \"lehrs\",\n        \"lehua\",\n        \"leirs\",\n        \"leish\",\n        \"leman\",\n        \"lemed\",\n        \"lemel\",\n        \"lemes\",\n        \"lemma\",\n        \"lemme\",\n        \"lends\",\n        \"lenes\",\n        \"lengs\",\n        \"lenis\",\n        \"lenos\",\n        \"lense\",\n        \"lenti\",\n        \"lento\",\n        \"leone\",\n        \"lepid\",\n        \"lepra\",\n        \"lepta\",\n        \"lered\",\n        \"leres\",\n        \"lerps\",\n        \"lesbo\",\n        \"leses\",\n        \"lests\",\n        \"letch\",\n        \"lethe\",\n        \"letup\",\n        \"leuch\",\n        \"leuco\",\n        \"leuds\",\n        \"leugh\",\n        \"levas\",\n        \"levee\",\n        \"leves\",\n        \"levin\",\n        \"levis\",\n        \"lewis\",\n        \"lexes\",\n        \"lexis\",\n        \"lezes\",\n        \"lezza\",\n        \"lezzy\",\n        \"liana\",\n        \"liane\",\n        \"liang\",\n        \"liard\",\n        \"liars\",\n        \"liart\",\n        \"liber\",\n        \"libra\",\n        \"libri\",\n        \"lichi\",\n        \"licht\",\n        \"licit\",\n        \"licks\",\n        \"lidar\",\n        \"lidos\",\n        \"liefs\",\n        \"liens\",\n        \"liers\",\n        \"lieus\",\n        \"lieve\",\n        \"lifer\",\n        \"lifes\",\n        \"lifts\",\n        \"ligan\",\n        \"liger\",\n        \"ligge\",\n        \"ligne\",\n        \"liked\",\n        \"liker\",\n        \"likes\",\n        \"likin\",\n        \"lills\",\n        \"lilos\",\n        \"lilts\",\n        \"liman\",\n        \"limas\",\n        \"limax\",\n        \"limba\",\n        \"limbi\",\n        \"limbs\",\n        \"limby\",\n        \"limed\",\n        \"limen\",\n        \"limes\",\n        \"limey\",\n        \"limma\",\n        \"limns\",\n        \"limos\",\n        \"limpa\",\n        \"limps\",\n        \"linac\",\n        \"linch\",\n        \"linds\",\n        \"lindy\",\n        \"lined\",\n        \"lines\",\n        \"liney\",\n        \"linga\",\n        \"lings\",\n        \"lingy\",\n        \"linin\",\n        \"links\",\n        \"linky\",\n        \"linns\",\n        \"linny\",\n        \"linos\",\n        \"lints\",\n        \"linty\",\n        \"linum\",\n        \"linux\",\n        \"lions\",\n        \"lipas\",\n        \"lipes\",\n        \"lipin\",\n        \"lipos\",\n        \"lippy\",\n        \"liras\",\n        \"lirks\",\n        \"lirot\",\n        \"lisks\",\n        \"lisle\",\n        \"lisps\",\n        \"lists\",\n        \"litai\",\n        \"litas\",\n        \"lited\",\n        \"liter\",\n        \"lites\",\n        \"litho\",\n        \"liths\",\n        \"litre\",\n        \"lived\",\n        \"liven\",\n        \"lives\",\n        \"livor\",\n        \"livre\",\n        \"llano\",\n        \"loach\",\n        \"loads\",\n        \"loafs\",\n        \"loams\",\n        \"loans\",\n        \"loast\",\n        \"loave\",\n        \"lobar\",\n        \"lobed\",\n        \"lobes\",\n        \"lobos\",\n        \"lobus\",\n        \"loche\",\n        \"lochs\",\n        \"locie\",\n        \"locis\",\n        \"locks\",\n        \"locos\",\n        \"locum\",\n        \"loden\",\n        \"lodes\",\n        \"loess\",\n        \"lofts\",\n        \"logan\",\n        \"loges\",\n        \"loggy\",\n        \"logia\",\n        \"logie\",\n        \"logoi\",\n        \"logon\",\n        \"logos\",\n        \"lohan\",\n        \"loids\",\n        \"loins\",\n        \"loipe\",\n        \"loirs\",\n        \"lokes\",\n        \"lolls\",\n        \"lolly\",\n        \"lolog\",\n        \"lomas\",\n        \"lomed\",\n        \"lomes\",\n        \"loner\",\n        \"longa\",\n        \"longe\",\n        \"longs\",\n        \"looby\",\n        \"looed\",\n        \"looey\",\n        \"loofa\",\n        \"loofs\",\n        \"looie\",\n        \"looks\",\n        \"looky\",\n        \"looms\",\n        \"loons\",\n        \"loony\",\n        \"loops\",\n        \"loord\",\n        \"loots\",\n        \"loped\",\n        \"loper\",\n        \"lopes\",\n        \"loppy\",\n        \"loral\",\n        \"loran\",\n        \"lords\",\n        \"lordy\",\n        \"lorel\",\n        \"lores\",\n        \"loric\",\n        \"loris\",\n        \"losed\",\n        \"losel\",\n        \"losen\",\n        \"loses\",\n        \"lossy\",\n        \"lotah\",\n        \"lotas\",\n        \"lotes\",\n        \"lotic\",\n        \"lotos\",\n        \"lotsa\",\n        \"lotta\",\n        \"lotte\",\n        \"lotto\",\n        \"lotus\",\n        \"loued\",\n        \"lough\",\n        \"louie\",\n        \"louis\",\n        \"louma\",\n        \"lound\",\n        \"louns\",\n        \"loupe\",\n        \"loups\",\n        \"loure\",\n        \"lours\",\n        \"loury\",\n        \"louts\",\n        \"lovat\",\n        \"loved\",\n        \"loves\",\n        \"lovey\",\n        \"lovie\",\n        \"lowan\",\n        \"lowed\",\n        \"lowes\",\n        \"lownd\",\n        \"lowne\",\n        \"lowns\",\n        \"lowps\",\n        \"lowry\",\n        \"lowse\",\n        \"lowts\",\n        \"loxed\",\n        \"loxes\",\n        \"lozen\",\n        \"luach\",\n        \"luaus\",\n        \"lubed\",\n        \"lubes\",\n        \"lubra\",\n        \"luces\",\n        \"lucks\",\n        \"lucre\",\n        \"ludes\",\n        \"ludic\",\n        \"ludos\",\n        \"luffa\",\n        \"luffs\",\n        \"luged\",\n        \"luger\",\n        \"luges\",\n        \"lulls\",\n        \"lulus\",\n        \"lumas\",\n        \"lumbi\",\n        \"lumme\",\n        \"lummy\",\n        \"lumps\",\n        \"lunas\",\n        \"lunes\",\n        \"lunet\",\n        \"lungi\",\n        \"lungs\",\n        \"lunks\",\n        \"lunts\",\n        \"lupin\",\n        \"lured\",\n        \"lurer\",\n        \"lures\",\n        \"lurex\",\n        \"lurgi\",\n        \"lurgy\",\n        \"lurks\",\n        \"lurry\",\n        \"lurve\",\n        \"luser\",\n        \"lushy\",\n        \"lusks\",\n        \"lusts\",\n        \"lusus\",\n        \"lutea\",\n        \"luted\",\n        \"luter\",\n        \"lutes\",\n        \"luvvy\",\n        \"luxed\",\n        \"luxer\",\n        \"luxes\",\n        \"lweis\",\n        \"lyams\",\n        \"lyard\",\n        \"lyart\",\n        \"lyase\",\n        \"lycea\",\n        \"lycee\",\n        \"lycra\",\n        \"lymes\",\n        \"lynes\",\n        \"lyres\",\n        \"lysed\",\n        \"lyses\",\n        \"lysin\",\n        \"lysis\",\n        \"lysol\",\n        \"lyssa\",\n        \"lyted\",\n        \"lytes\",\n        \"lythe\",\n        \"lytic\",\n        \"lytta\",\n        \"maaed\",\n        \"maare\",\n        \"maars\",\n        \"mabes\",\n        \"macas\",\n        \"maced\",\n        \"macer\",\n        \"maces\",\n        \"mache\",\n        \"machi\",\n        \"machs\",\n        \"macks\",\n        \"macle\",\n        \"macon\",\n        \"madge\",\n        \"madid\",\n        \"madre\",\n        \"maerl\",\n        \"mafic\",\n        \"mages\",\n        \"maggs\",\n        \"magot\",\n        \"magus\",\n        \"mahoe\",\n        \"mahua\",\n        \"mahwa\",\n        \"maids\",\n        \"maiko\",\n        \"maiks\",\n        \"maile\",\n        \"maill\",\n        \"mails\",\n        \"maims\",\n        \"mains\",\n        \"maire\",\n        \"mairs\",\n        \"maise\",\n        \"maist\",\n        \"makar\",\n        \"makes\",\n        \"makis\",\n        \"makos\",\n        \"malam\",\n        \"malar\",\n        \"malas\",\n        \"malax\",\n        \"males\",\n        \"malic\",\n        \"malik\",\n        \"malis\",\n        \"malls\",\n        \"malms\",\n        \"malmy\",\n        \"malts\",\n        \"malty\",\n        \"malus\",\n        \"malva\",\n        \"malwa\",\n        \"mamas\",\n        \"mamba\",\n        \"mamee\",\n        \"mamey\",\n        \"mamie\",\n        \"manas\",\n        \"manat\",\n        \"mandi\",\n        \"maneb\",\n        \"maned\",\n        \"maneh\",\n        \"manes\",\n        \"manet\",\n        \"mangs\",\n        \"manis\",\n        \"manky\",\n        \"manna\",\n        \"manos\",\n        \"manse\",\n        \"manta\",\n        \"manto\",\n        \"manty\",\n        \"manul\",\n        \"manus\",\n        \"mapau\",\n        \"maqui\",\n        \"marae\",\n        \"marah\",\n        \"maras\",\n        \"marcs\",\n        \"mardy\",\n        \"mares\",\n        \"marge\",\n        \"margs\",\n        \"maria\",\n        \"marid\",\n        \"marka\",\n        \"marks\",\n        \"marle\",\n        \"marls\",\n        \"marly\",\n        \"marms\",\n        \"maron\",\n        \"maror\",\n        \"marra\",\n        \"marri\",\n        \"marse\",\n        \"marts\",\n        \"marvy\",\n        \"masas\",\n        \"mased\",\n        \"maser\",\n        \"mases\",\n        \"mashy\",\n        \"masks\",\n        \"massa\",\n        \"massy\",\n        \"masts\",\n        \"masty\",\n        \"masus\",\n        \"matai\",\n        \"mated\",\n        \"mater\",\n        \"mates\",\n        \"maths\",\n        \"matin\",\n        \"matlo\",\n        \"matte\",\n        \"matts\",\n        \"matza\",\n        \"matzo\",\n        \"mauby\",\n        \"mauds\",\n        \"mauls\",\n        \"maund\",\n        \"mauri\",\n        \"mausy\",\n        \"mauts\",\n        \"mauzy\",\n        \"maven\",\n        \"mavie\",\n        \"mavin\",\n        \"mavis\",\n        \"mawed\",\n        \"mawks\",\n        \"mawky\",\n        \"mawns\",\n        \"mawrs\",\n        \"maxed\",\n        \"maxes\",\n        \"maxis\",\n        \"mayan\",\n        \"mayas\",\n        \"mayed\",\n        \"mayos\",\n        \"mayst\",\n        \"mazed\",\n        \"mazer\",\n        \"mazes\",\n        \"mazey\",\n        \"mazut\",\n        \"mbira\",\n        \"meads\",\n        \"meals\",\n        \"meane\",\n        \"means\",\n        \"meany\",\n        \"meare\",\n        \"mease\",\n        \"meath\",\n        \"meats\",\n        \"mebos\",\n        \"mechs\",\n        \"mecks\",\n        \"medii\",\n        \"medle\",\n        \"meeds\",\n        \"meers\",\n        \"meets\",\n        \"meffs\",\n        \"meins\",\n        \"meint\",\n        \"meiny\",\n        \"meith\",\n        \"mekka\",\n        \"melas\",\n        \"melba\",\n        \"melds\",\n        \"melic\",\n        \"melik\",\n        \"mells\",\n        \"melts\",\n        \"melty\",\n        \"memes\",\n        \"memos\",\n        \"menad\",\n        \"mends\",\n        \"mened\",\n        \"menes\",\n        \"menge\",\n        \"mengs\",\n        \"mensa\",\n        \"mense\",\n        \"mensh\",\n        \"menta\",\n        \"mento\",\n        \"menus\",\n        \"meous\",\n        \"meows\",\n        \"merch\",\n        \"mercs\",\n        \"merde\",\n        \"mered\",\n        \"merel\",\n        \"merer\",\n        \"meres\",\n        \"meril\",\n        \"meris\",\n        \"merks\",\n        \"merle\",\n        \"merls\",\n        \"merse\",\n        \"mesal\",\n        \"mesas\",\n        \"mesel\",\n        \"meses\",\n        \"meshy\",\n        \"mesic\",\n        \"mesne\",\n        \"meson\",\n        \"messy\",\n        \"mesto\",\n        \"meted\",\n        \"metes\",\n        \"metho\",\n        \"meths\",\n        \"metic\",\n        \"metif\",\n        \"metis\",\n        \"metol\",\n        \"metre\",\n        \"meuse\",\n        \"meved\",\n        \"meves\",\n        \"mewed\",\n        \"mewls\",\n        \"meynt\",\n        \"mezes\",\n        \"mezze\",\n        \"mezzo\",\n        \"mhorr\",\n        \"miaou\",\n        \"miaow\",\n        \"miasm\",\n        \"miaul\",\n        \"micas\",\n        \"miche\",\n        \"micht\",\n        \"micks\",\n        \"micky\",\n        \"micos\",\n        \"micra\",\n        \"middy\",\n        \"midgy\",\n        \"midis\",\n        \"miens\",\n        \"mieve\",\n        \"miffs\",\n        \"miffy\",\n        \"mifty\",\n        \"miggs\",\n        \"mihas\",\n        \"mihis\",\n        \"miked\",\n        \"mikes\",\n        \"mikra\",\n        \"mikva\",\n        \"milch\",\n        \"milds\",\n        \"miler\",\n        \"miles\",\n        \"milfs\",\n        \"milia\",\n        \"milko\",\n        \"milks\",\n        \"mille\",\n        \"mills\",\n        \"milor\",\n        \"milos\",\n        \"milpa\",\n        \"milts\",\n        \"milty\",\n        \"miltz\",\n        \"mimed\",\n        \"mimeo\",\n        \"mimer\",\n        \"mimes\",\n        \"mimsy\",\n        \"minae\",\n        \"minar\",\n        \"minas\",\n        \"mincy\",\n        \"minds\",\n        \"mined\",\n        \"mines\",\n        \"minge\",\n        \"mings\",\n        \"mingy\",\n        \"minis\",\n        \"minke\",\n        \"minks\",\n        \"minny\",\n        \"minos\",\n        \"mints\",\n        \"mired\",\n        \"mires\",\n        \"mirex\",\n        \"mirid\",\n        \"mirin\",\n        \"mirks\",\n        \"mirky\",\n        \"mirly\",\n        \"miros\",\n        \"mirvs\",\n        \"mirza\",\n        \"misch\",\n        \"misdo\",\n        \"mises\",\n        \"misgo\",\n        \"misos\",\n        \"missa\",\n        \"mists\",\n        \"misty\",\n        \"mitch\",\n        \"miter\",\n        \"mites\",\n        \"mitis\",\n        \"mitre\",\n        \"mitts\",\n        \"mixed\",\n        \"mixen\",\n        \"mixer\",\n        \"mixes\",\n        \"mixte\",\n        \"mixup\",\n        \"mizen\",\n        \"mizzy\",\n        \"mneme\",\n        \"moans\",\n        \"moats\",\n        \"mobby\",\n        \"mobes\",\n        \"mobey\",\n        \"mobie\",\n        \"moble\",\n        \"mochi\",\n        \"mochs\",\n        \"mochy\",\n        \"mocks\",\n        \"moder\",\n        \"modes\",\n        \"modge\",\n        \"modii\",\n        \"modus\",\n        \"moers\",\n        \"mofos\",\n        \"moggy\",\n        \"mohel\",\n        \"mohos\",\n        \"mohrs\",\n        \"mohua\",\n        \"mohur\",\n        \"moile\",\n        \"moils\",\n        \"moira\",\n        \"moire\",\n        \"moits\",\n        \"mojos\",\n        \"mokes\",\n        \"mokis\",\n        \"mokos\",\n        \"molal\",\n        \"molas\",\n        \"molds\",\n        \"moled\",\n        \"moles\",\n        \"molla\",\n        \"molls\",\n        \"molly\",\n        \"molto\",\n        \"molts\",\n        \"molys\",\n        \"momes\",\n        \"momma\",\n        \"mommy\",\n        \"momus\",\n        \"monad\",\n        \"monal\",\n        \"monas\",\n        \"monde\",\n        \"mondo\",\n        \"moner\",\n        \"mongo\",\n        \"mongs\",\n        \"monic\",\n        \"monie\",\n        \"monks\",\n        \"monos\",\n        \"monte\",\n        \"monty\",\n        \"moobs\",\n        \"mooch\",\n        \"moods\",\n        \"mooed\",\n        \"mooks\",\n        \"moola\",\n        \"mooli\",\n        \"mools\",\n        \"mooly\",\n        \"moong\",\n        \"moons\",\n        \"moony\",\n        \"moops\",\n        \"moors\",\n        \"moory\",\n        \"moots\",\n        \"moove\",\n        \"moped\",\n        \"moper\",\n        \"mopes\",\n        \"mopey\",\n        \"moppy\",\n        \"mopsy\",\n        \"mopus\",\n        \"morae\",\n        \"moras\",\n        \"morat\",\n        \"moray\",\n        \"morel\",\n        \"mores\",\n        \"moria\",\n        \"morne\",\n        \"morns\",\n        \"morra\",\n        \"morro\",\n        \"morse\",\n        \"morts\",\n        \"mosed\",\n        \"moses\",\n        \"mosey\",\n        \"mosks\",\n        \"mosso\",\n        \"moste\",\n        \"mosts\",\n        \"moted\",\n        \"moten\",\n        \"motes\",\n        \"motet\",\n        \"motey\",\n        \"moths\",\n        \"mothy\",\n        \"motis\",\n        \"motte\",\n        \"motts\",\n        \"motty\",\n        \"motus\",\n        \"motza\",\n        \"mouch\",\n        \"moues\",\n        \"mould\",\n        \"mouls\",\n        \"moups\",\n        \"moust\",\n        \"mousy\",\n        \"moved\",\n        \"moves\",\n        \"mowas\",\n        \"mowed\",\n        \"mowra\",\n        \"moxas\",\n        \"moxie\",\n        \"moyas\",\n        \"moyle\",\n        \"moyls\",\n        \"mozed\",\n        \"mozes\",\n        \"mozos\",\n        \"mpret\",\n        \"mucho\",\n        \"mucic\",\n        \"mucid\",\n        \"mucin\",\n        \"mucks\",\n        \"mucor\",\n        \"mucro\",\n        \"mudge\",\n        \"mudir\",\n        \"mudra\",\n        \"muffs\",\n        \"mufti\",\n        \"mugga\",\n        \"muggs\",\n        \"muggy\",\n        \"muhly\",\n        \"muids\",\n        \"muils\",\n        \"muirs\",\n        \"muist\",\n        \"mujik\",\n        \"mulct\",\n        \"muled\",\n        \"mules\",\n        \"muley\",\n        \"mulga\",\n        \"mulie\",\n        \"mulla\",\n        \"mulls\",\n        \"mulse\",\n        \"mulsh\",\n        \"mumms\",\n        \"mumps\",\n        \"mumsy\",\n        \"mumus\",\n        \"munga\",\n        \"munge\",\n        \"mungo\",\n        \"mungs\",\n        \"munis\",\n        \"munts\",\n        \"muntu\",\n        \"muons\",\n        \"muras\",\n        \"mured\",\n        \"mures\",\n        \"murex\",\n        \"murid\",\n        \"murks\",\n        \"murls\",\n        \"murly\",\n        \"murra\",\n        \"murre\",\n        \"murri\",\n        \"murrs\",\n        \"murry\",\n        \"murti\",\n        \"murva\",\n        \"musar\",\n        \"musca\",\n        \"mused\",\n        \"muser\",\n        \"muses\",\n        \"muset\",\n        \"musha\",\n        \"musit\",\n        \"musks\",\n        \"musos\",\n        \"musse\",\n        \"mussy\",\n        \"musth\",\n        \"musts\",\n        \"mutch\",\n        \"muted\",\n        \"muter\",\n        \"mutes\",\n        \"mutha\",\n        \"mutis\",\n        \"muton\",\n        \"mutts\",\n        \"muxed\",\n        \"muxes\",\n        \"muzak\",\n        \"muzzy\",\n        \"mvule\",\n        \"myall\",\n        \"mylar\",\n        \"mynah\",\n        \"mynas\",\n        \"myoid\",\n        \"myoma\",\n        \"myope\",\n        \"myops\",\n        \"myopy\",\n        \"mysid\",\n        \"mythi\",\n        \"myths\",\n        \"mythy\",\n        \"myxos\",\n        \"mzees\",\n        \"naams\",\n        \"naans\",\n        \"nabes\",\n        \"nabis\",\n        \"nabks\",\n        \"nabla\",\n        \"nabob\",\n        \"nache\",\n        \"nacho\",\n        \"nacre\",\n        \"nadas\",\n        \"naeve\",\n        \"naevi\",\n        \"naffs\",\n        \"nagas\",\n        \"naggy\",\n        \"nagor\",\n        \"nahal\",\n        \"naiad\",\n        \"naifs\",\n        \"naiks\",\n        \"nails\",\n        \"naira\",\n        \"nairu\",\n        \"naked\",\n        \"naker\",\n        \"nakfa\",\n        \"nalas\",\n        \"naled\",\n        \"nalla\",\n        \"named\",\n        \"namer\",\n        \"names\",\n        \"namma\",\n        \"namus\",\n        \"nanas\",\n        \"nance\",\n        \"nancy\",\n        \"nandu\",\n        \"nanna\",\n        \"nanos\",\n        \"nanua\",\n        \"napas\",\n        \"naped\",\n        \"napes\",\n        \"napoo\",\n        \"nappa\",\n        \"nappe\",\n        \"nappy\",\n        \"naras\",\n        \"narco\",\n        \"narcs\",\n        \"nards\",\n        \"nares\",\n        \"naric\",\n        \"naris\",\n        \"narks\",\n        \"narky\",\n        \"narre\",\n        \"nashi\",\n        \"natch\",\n        \"nates\",\n        \"natis\",\n        \"natty\",\n        \"nauch\",\n        \"naunt\",\n        \"navar\",\n        \"naves\",\n        \"navew\",\n        \"navvy\",\n        \"nawab\",\n        \"nazes\",\n        \"nazir\",\n        \"nazis\",\n        \"nduja\",\n        \"neafe\",\n        \"neals\",\n        \"neaps\",\n        \"nears\",\n        \"neath\",\n        \"neats\",\n        \"nebek\",\n        \"nebel\",\n        \"necks\",\n        \"neddy\",\n        \"needs\",\n        \"neeld\",\n        \"neele\",\n        \"neemb\",\n        \"neems\",\n        \"neeps\",\n        \"neese\",\n        \"neeze\",\n        \"negro\",\n        \"negus\",\n        \"neifs\",\n        \"neist\",\n        \"neive\",\n        \"nelis\",\n        \"nelly\",\n        \"nemas\",\n        \"nemns\",\n        \"nempt\",\n        \"nenes\",\n        \"neons\",\n        \"neper\",\n        \"nepit\",\n        \"neral\",\n        \"nerds\",\n        \"nerka\",\n        \"nerks\",\n        \"nerol\",\n        \"nerts\",\n        \"nertz\",\n        \"nervy\",\n        \"nests\",\n        \"netes\",\n        \"netop\",\n        \"netts\",\n        \"netty\",\n        \"neuks\",\n        \"neume\",\n        \"neums\",\n        \"nevel\",\n        \"neves\",\n        \"nevus\",\n        \"newbs\",\n        \"newed\",\n        \"newel\",\n        \"newie\",\n        \"newsy\",\n        \"newts\",\n        \"nexts\",\n        \"nexus\",\n        \"ngaio\",\n        \"ngana\",\n        \"ngati\",\n        \"ngoma\",\n        \"ngwee\",\n        \"nicad\",\n        \"nicht\",\n        \"nicks\",\n        \"nicol\",\n        \"nidal\",\n        \"nided\",\n        \"nides\",\n        \"nidor\",\n        \"nidus\",\n        \"niefs\",\n        \"nieve\",\n        \"nifes\",\n        \"niffs\",\n        \"niffy\",\n        \"nifty\",\n        \"niger\",\n        \"nighs\",\n        \"nihil\",\n        \"nikab\",\n        \"nikah\",\n        \"nikau\",\n        \"nills\",\n        \"nimbi\",\n        \"nimbs\",\n        \"nimps\",\n        \"niner\",\n        \"nines\",\n        \"ninon\",\n        \"nipas\",\n        \"nippy\",\n        \"niqab\",\n        \"nirls\",\n        \"nirly\",\n        \"nisei\",\n        \"nisse\",\n        \"nisus\",\n        \"niter\",\n        \"nites\",\n        \"nitid\",\n        \"niton\",\n        \"nitre\",\n        \"nitro\",\n        \"nitry\",\n        \"nitty\",\n        \"nival\",\n        \"nixed\",\n        \"nixer\",\n        \"nixes\",\n        \"nixie\",\n        \"nizam\",\n        \"nkosi\",\n        \"noahs\",\n        \"nobby\",\n        \"nocks\",\n        \"nodal\",\n        \"noddy\",\n        \"nodes\",\n        \"nodus\",\n        \"noels\",\n        \"noggs\",\n        \"nohow\",\n        \"noils\",\n        \"noily\",\n        \"noint\",\n        \"noirs\",\n        \"noles\",\n        \"nolls\",\n        \"nolos\",\n        \"nomas\",\n        \"nomen\",\n        \"nomes\",\n        \"nomic\",\n        \"nomoi\",\n        \"nomos\",\n        \"nonas\",\n        \"nonce\",\n        \"nones\",\n        \"nonet\",\n        \"nongs\",\n        \"nonis\",\n        \"nonny\",\n        \"nonyl\",\n        \"noobs\",\n        \"nooit\",\n        \"nooks\",\n        \"nooky\",\n        \"noons\",\n        \"noops\",\n        \"nopal\",\n        \"noria\",\n        \"noris\",\n        \"norks\",\n        \"norma\",\n        \"norms\",\n        \"nosed\",\n        \"noser\",\n        \"noses\",\n        \"notal\",\n        \"noted\",\n        \"noter\",\n        \"notes\",\n        \"notum\",\n        \"nould\",\n        \"noule\",\n        \"nouls\",\n        \"nouns\",\n        \"nouny\",\n        \"noups\",\n        \"novae\",\n        \"novas\",\n        \"novum\",\n        \"noway\",\n        \"nowed\",\n        \"nowls\",\n        \"nowts\",\n        \"nowty\",\n        \"noxal\",\n        \"noxes\",\n        \"noyau\",\n        \"noyed\",\n        \"noyes\",\n        \"nubby\",\n        \"nubia\",\n        \"nucha\",\n        \"nuddy\",\n        \"nuder\",\n        \"nudes\",\n        \"nudie\",\n        \"nudzh\",\n        \"nuffs\",\n        \"nugae\",\n        \"nuked\",\n        \"nukes\",\n        \"nulla\",\n        \"nulls\",\n        \"numbs\",\n        \"numen\",\n        \"nummy\",\n        \"nunny\",\n        \"nurds\",\n        \"nurdy\",\n        \"nurls\",\n        \"nurrs\",\n        \"nutso\",\n        \"nutsy\",\n        \"nyaff\",\n        \"nyala\",\n        \"nying\",\n        \"nyssa\",\n        \"oaked\",\n        \"oaker\",\n        \"oakum\",\n        \"oared\",\n        \"oases\",\n        \"oasis\",\n        \"oasts\",\n        \"oaten\",\n        \"oater\",\n        \"oaths\",\n        \"oaves\",\n        \"obang\",\n        \"obeah\",\n        \"obeli\",\n        \"obeys\",\n        \"obias\",\n        \"obied\",\n        \"obiit\",\n        \"obits\",\n        \"objet\",\n        \"oboes\",\n        \"obole\",\n        \"oboli\",\n        \"obols\",\n        \"occam\",\n        \"ocher\",\n        \"oches\",\n        \"ochre\",\n        \"ochry\",\n        \"ocker\",\n        \"ocrea\",\n        \"octad\",\n        \"octan\",\n        \"octas\",\n        \"octyl\",\n        \"oculi\",\n        \"odahs\",\n        \"odals\",\n        \"odeon\",\n        \"odeum\",\n        \"odism\",\n        \"odist\",\n        \"odium\",\n        \"odors\",\n        \"odour\",\n        \"odyle\",\n        \"odyls\",\n        \"ofays\",\n        \"offed\",\n        \"offie\",\n        \"oflag\",\n        \"ofter\",\n        \"ogams\",\n        \"ogeed\",\n        \"ogees\",\n        \"oggin\",\n        \"ogham\",\n        \"ogive\",\n        \"ogled\",\n        \"ogler\",\n        \"ogles\",\n        \"ogmic\",\n        \"ogres\",\n        \"ohias\",\n        \"ohing\",\n        \"ohmic\",\n        \"ohone\",\n        \"oidia\",\n        \"oiled\",\n        \"oiler\",\n        \"oinks\",\n        \"oints\",\n        \"ojime\",\n        \"okapi\",\n        \"okays\",\n        \"okehs\",\n        \"okras\",\n        \"oktas\",\n        \"oldie\",\n        \"oleic\",\n        \"olein\",\n        \"olent\",\n        \"oleos\",\n        \"oleum\",\n        \"olios\",\n        \"ollas\",\n        \"ollav\",\n        \"oller\",\n        \"ollie\",\n        \"ology\",\n        \"olpae\",\n        \"olpes\",\n        \"omasa\",\n        \"omber\",\n        \"ombus\",\n        \"omens\",\n        \"omers\",\n        \"omits\",\n        \"omlah\",\n        \"omovs\",\n        \"omrah\",\n        \"oncer\",\n        \"onces\",\n        \"oncet\",\n        \"oncus\",\n        \"onely\",\n        \"oners\",\n        \"onery\",\n        \"onium\",\n        \"onkus\",\n        \"onlay\",\n        \"onned\",\n        \"ontic\",\n        \"oobit\",\n        \"oohed\",\n        \"oomph\",\n        \"oonts\",\n        \"ooped\",\n        \"oorie\",\n        \"ooses\",\n        \"ootid\",\n        \"oozed\",\n        \"oozes\",\n        \"opahs\",\n        \"opals\",\n        \"opens\",\n        \"opepe\",\n        \"oping\",\n        \"oppos\",\n        \"opsin\",\n        \"opted\",\n        \"opter\",\n        \"orach\",\n        \"oracy\",\n        \"orals\",\n        \"orang\",\n        \"orant\",\n        \"orate\",\n        \"orbed\",\n        \"orcas\",\n        \"orcin\",\n        \"ordos\",\n        \"oread\",\n        \"orfes\",\n        \"orgia\",\n        \"orgic\",\n        \"orgue\",\n        \"oribi\",\n        \"oriel\",\n        \"orixa\",\n        \"orles\",\n        \"orlon\",\n        \"orlop\",\n        \"ormer\",\n        \"ornis\",\n        \"orpin\",\n        \"orris\",\n        \"ortho\",\n        \"orval\",\n        \"orzos\",\n        \"oscar\",\n        \"oshac\",\n        \"osier\",\n        \"osmic\",\n        \"osmol\",\n        \"ossia\",\n        \"ostia\",\n        \"otaku\",\n        \"otary\",\n        \"ottar\",\n        \"ottos\",\n        \"oubit\",\n        \"oucht\",\n        \"ouens\",\n        \"ouija\",\n        \"oulks\",\n        \"oumas\",\n        \"oundy\",\n        \"oupas\",\n        \"ouped\",\n        \"ouphe\",\n        \"ouphs\",\n        \"ourie\",\n        \"ousel\",\n        \"ousts\",\n        \"outby\",\n        \"outed\",\n        \"outre\",\n        \"outro\",\n        \"outta\",\n        \"ouzel\",\n        \"ouzos\",\n        \"ovals\",\n        \"ovels\",\n        \"ovens\",\n        \"overs\",\n        \"ovist\",\n        \"ovoli\",\n        \"ovolo\",\n        \"ovule\",\n        \"owche\",\n        \"owies\",\n        \"owled\",\n        \"owler\",\n        \"owlet\",\n        \"owned\",\n        \"owres\",\n        \"owrie\",\n        \"owsen\",\n        \"oxbow\",\n        \"oxers\",\n        \"oxeye\",\n        \"oxids\",\n        \"oxies\",\n        \"oxime\",\n        \"oxims\",\n        \"oxlip\",\n        \"oxter\",\n        \"oyers\",\n        \"ozeki\",\n        \"ozzie\",\n        \"paals\",\n        \"paans\",\n        \"pacas\",\n        \"paced\",\n        \"pacer\",\n        \"paces\",\n        \"pacey\",\n        \"pacha\",\n        \"packs\",\n        \"pacos\",\n        \"pacta\",\n        \"pacts\",\n        \"padis\",\n        \"padle\",\n        \"padma\",\n        \"padre\",\n        \"padri\",\n        \"paean\",\n        \"paedo\",\n        \"paeon\",\n        \"paged\",\n        \"pager\",\n        \"pages\",\n        \"pagle\",\n        \"pagod\",\n        \"pagri\",\n        \"paiks\",\n        \"pails\",\n        \"pains\",\n        \"paire\",\n        \"pairs\",\n        \"paisa\",\n        \"paise\",\n        \"pakka\",\n        \"palas\",\n        \"palay\",\n        \"palea\",\n        \"paled\",\n        \"pales\",\n        \"palet\",\n        \"palis\",\n        \"palki\",\n        \"palla\",\n        \"palls\",\n        \"pally\",\n        \"palms\",\n        \"palmy\",\n        \"palpi\",\n        \"palps\",\n        \"palsa\",\n        \"pampa\",\n        \"panax\",\n        \"pance\",\n        \"panda\",\n        \"pands\",\n        \"pandy\",\n        \"paned\",\n        \"panes\",\n        \"panga\",\n        \"pangs\",\n        \"panim\",\n        \"panko\",\n        \"panne\",\n        \"panni\",\n        \"panto\",\n        \"pants\",\n        \"panty\",\n        \"paoli\",\n        \"paolo\",\n        \"papas\",\n        \"papaw\",\n        \"papes\",\n        \"pappi\",\n        \"pappy\",\n        \"parae\",\n        \"paras\",\n        \"parch\",\n        \"pardi\",\n        \"pards\",\n        \"pardy\",\n        \"pared\",\n        \"paren\",\n        \"pareo\",\n        \"pares\",\n        \"pareu\",\n        \"parev\",\n        \"parge\",\n        \"pargo\",\n        \"paris\",\n        \"parki\",\n        \"parks\",\n        \"parky\",\n        \"parle\",\n        \"parly\",\n        \"parma\",\n        \"parol\",\n        \"parps\",\n        \"parra\",\n        \"parrs\",\n        \"parti\",\n        \"parts\",\n        \"parve\",\n        \"parvo\",\n        \"paseo\",\n        \"pases\",\n        \"pasha\",\n        \"pashm\",\n        \"paska\",\n        \"paspy\",\n        \"passe\",\n        \"pasts\",\n        \"pated\",\n        \"paten\",\n        \"pater\",\n        \"pates\",\n        \"paths\",\n        \"patin\",\n        \"patka\",\n        \"patly\",\n        \"patte\",\n        \"patus\",\n        \"pauas\",\n        \"pauls\",\n        \"pavan\",\n        \"paved\",\n        \"paven\",\n        \"paver\",\n        \"paves\",\n        \"pavid\",\n        \"pavin\",\n        \"pavis\",\n        \"pawas\",\n        \"pawaw\",\n        \"pawed\",\n        \"pawer\",\n        \"pawks\",\n        \"pawky\",\n        \"pawls\",\n        \"pawns\",\n        \"paxes\",\n        \"payed\",\n        \"payor\",\n        \"paysd\",\n        \"peage\",\n        \"peags\",\n        \"peaks\",\n        \"peaky\",\n        \"peals\",\n        \"peans\",\n        \"peare\",\n        \"pears\",\n        \"peart\",\n        \"pease\",\n        \"peats\",\n        \"peaty\",\n        \"peavy\",\n        \"peaze\",\n        \"pebas\",\n        \"pechs\",\n        \"pecke\",\n        \"pecks\",\n        \"pecky\",\n        \"pedes\",\n        \"pedis\",\n        \"pedro\",\n        \"peece\",\n        \"peeks\",\n        \"peels\",\n        \"peens\",\n        \"peeoy\",\n        \"peepe\",\n        \"peeps\",\n        \"peers\",\n        \"peery\",\n        \"peeve\",\n        \"peggy\",\n        \"peghs\",\n        \"peins\",\n        \"peise\",\n        \"peize\",\n        \"pekan\",\n        \"pekes\",\n        \"pekin\",\n        \"pekoe\",\n        \"pelas\",\n        \"pelau\",\n        \"peles\",\n        \"pelfs\",\n        \"pells\",\n        \"pelma\",\n        \"pelon\",\n        \"pelta\",\n        \"pelts\",\n        \"pends\",\n        \"pendu\",\n        \"pened\",\n        \"penes\",\n        \"pengo\",\n        \"penie\",\n        \"penis\",\n        \"penks\",\n        \"penna\",\n        \"penni\",\n        \"pents\",\n        \"peons\",\n        \"peony\",\n        \"pepla\",\n        \"pepos\",\n        \"peppy\",\n        \"pepsi\",\n        \"perai\",\n        \"perce\",\n        \"percs\",\n        \"perdu\",\n        \"perdy\",\n        \"perea\",\n        \"peres\",\n        \"peris\",\n        \"perks\",\n        \"perms\",\n        \"perns\",\n        \"perog\",\n        \"perps\",\n        \"perry\",\n        \"perse\",\n        \"perst\",\n        \"perts\",\n        \"perve\",\n        \"pervo\",\n        \"pervs\",\n        \"pervy\",\n        \"pesos\",\n        \"pests\",\n        \"pesty\",\n        \"petar\",\n        \"peter\",\n        \"petit\",\n        \"petre\",\n        \"petri\",\n        \"petti\",\n        \"petto\",\n        \"pewee\",\n        \"pewit\",\n        \"peyse\",\n        \"phage\",\n        \"phang\",\n        \"phare\",\n        \"pharm\",\n        \"pheer\",\n        \"phene\",\n        \"pheon\",\n        \"phese\",\n        \"phial\",\n        \"phish\",\n        \"phizz\",\n        \"phlox\",\n        \"phoca\",\n        \"phono\",\n        \"phons\",\n        \"phots\",\n        \"phpht\",\n        \"phuts\",\n        \"phyla\",\n        \"phyle\",\n        \"piani\",\n        \"pians\",\n        \"pibal\",\n        \"pical\",\n        \"picas\",\n        \"piccy\",\n        \"picks\",\n        \"picot\",\n        \"picra\",\n        \"picul\",\n        \"piend\",\n        \"piers\",\n        \"piert\",\n        \"pieta\",\n        \"piets\",\n        \"piezo\",\n        \"pight\",\n        \"pigmy\",\n        \"piing\",\n        \"pikas\",\n        \"pikau\",\n        \"piked\",\n        \"piker\",\n        \"pikes\",\n        \"pikey\",\n        \"pikis\",\n        \"pikul\",\n        \"pilae\",\n        \"pilaf\",\n        \"pilao\",\n        \"pilar\",\n        \"pilau\",\n        \"pilaw\",\n        \"pilch\",\n        \"pilea\",\n        \"piled\",\n        \"pilei\",\n        \"piler\",\n        \"piles\",\n        \"pilis\",\n        \"pills\",\n        \"pilow\",\n        \"pilum\",\n        \"pilus\",\n        \"pimas\",\n        \"pimps\",\n        \"pinas\",\n        \"pined\",\n        \"pines\",\n        \"pingo\",\n        \"pings\",\n        \"pinko\",\n        \"pinks\",\n        \"pinna\",\n        \"pinny\",\n        \"pinon\",\n        \"pinot\",\n        \"pinta\",\n        \"pints\",\n        \"pinup\",\n        \"pions\",\n        \"piony\",\n        \"pious\",\n        \"pioye\",\n        \"pioys\",\n        \"pipal\",\n        \"pipas\",\n        \"piped\",\n        \"pipes\",\n        \"pipet\",\n        \"pipis\",\n        \"pipit\",\n        \"pippy\",\n        \"pipul\",\n        \"pirai\",\n        \"pirls\",\n        \"pirns\",\n        \"pirog\",\n        \"pisco\",\n        \"pises\",\n        \"pisky\",\n        \"pisos\",\n        \"pissy\",\n        \"piste\",\n        \"pitas\",\n        \"piths\",\n        \"piton\",\n        \"pitot\",\n        \"pitta\",\n        \"piums\",\n        \"pixes\",\n        \"pized\",\n        \"pizes\",\n        \"plaas\",\n        \"plack\",\n        \"plage\",\n        \"plans\",\n        \"plaps\",\n        \"plash\",\n        \"plasm\",\n        \"plast\",\n        \"plats\",\n        \"platt\",\n        \"platy\",\n        \"playa\",\n        \"plays\",\n        \"pleas\",\n        \"plebe\",\n        \"plebs\",\n        \"plena\",\n        \"pleon\",\n        \"plesh\",\n        \"plews\",\n        \"plica\",\n        \"plies\",\n        \"plims\",\n        \"pling\",\n        \"plink\",\n        \"ploat\",\n        \"plods\",\n        \"plong\",\n        \"plonk\",\n        \"plook\",\n        \"plops\",\n        \"plots\",\n        \"plotz\",\n        \"plouk\",\n        \"plows\",\n        \"ploye\",\n        \"ploys\",\n        \"plues\",\n        \"pluff\",\n        \"plugs\",\n        \"plums\",\n        \"plumy\",\n        \"pluot\",\n        \"pluto\",\n        \"plyer\",\n        \"poach\",\n        \"poaka\",\n        \"poake\",\n        \"poboy\",\n        \"pocks\",\n        \"pocky\",\n        \"podal\",\n        \"poddy\",\n        \"podex\",\n        \"podge\",\n        \"podgy\",\n        \"podia\",\n        \"poems\",\n        \"poeps\",\n        \"poets\",\n        \"pogey\",\n        \"pogge\",\n        \"pogos\",\n        \"pohed\",\n        \"poilu\",\n        \"poind\",\n        \"pokal\",\n        \"poked\",\n        \"pokes\",\n        \"pokey\",\n        \"pokie\",\n        \"poled\",\n        \"poler\",\n        \"poles\",\n        \"poley\",\n        \"polio\",\n        \"polis\",\n        \"polje\",\n        \"polks\",\n        \"polls\",\n        \"polly\",\n        \"polos\",\n        \"polts\",\n        \"polys\",\n        \"pombe\",\n        \"pomes\",\n        \"pommy\",\n        \"pomos\",\n        \"pomps\",\n        \"ponce\",\n        \"poncy\",\n        \"ponds\",\n        \"pones\",\n        \"poney\",\n        \"ponga\",\n        \"pongo\",\n        \"pongs\",\n        \"pongy\",\n        \"ponks\",\n        \"ponts\",\n        \"ponty\",\n        \"ponzu\",\n        \"poods\",\n        \"pooed\",\n        \"poofs\",\n        \"poofy\",\n        \"poohs\",\n        \"pooja\",\n        \"pooka\",\n        \"pooks\",\n        \"pools\",\n        \"poons\",\n        \"poops\",\n        \"poopy\",\n        \"poori\",\n        \"poort\",\n        \"poots\",\n        \"poove\",\n        \"poovy\",\n        \"popes\",\n        \"poppa\",\n        \"popsy\",\n        \"porae\",\n        \"poral\",\n        \"pored\",\n        \"porer\",\n        \"pores\",\n        \"porge\",\n        \"porgy\",\n        \"porin\",\n        \"porks\",\n        \"porky\",\n        \"porno\",\n        \"porns\",\n        \"porny\",\n        \"porta\",\n        \"ports\",\n        \"porty\",\n        \"posed\",\n        \"poses\",\n        \"posey\",\n        \"posho\",\n        \"posts\",\n        \"potae\",\n        \"potch\",\n        \"poted\",\n        \"potes\",\n        \"potin\",\n        \"potoo\",\n        \"potsy\",\n        \"potto\",\n        \"potts\",\n        \"potty\",\n        \"pouff\",\n        \"poufs\",\n        \"pouke\",\n        \"pouks\",\n        \"poule\",\n        \"poulp\",\n        \"poult\",\n        \"poupe\",\n        \"poupt\",\n        \"pours\",\n        \"pouts\",\n        \"powan\",\n        \"powin\",\n        \"pownd\",\n        \"powns\",\n        \"powny\",\n        \"powre\",\n        \"poxed\",\n        \"poxes\",\n        \"poynt\",\n        \"poyou\",\n        \"poyse\",\n        \"pozzy\",\n        \"praam\",\n        \"prads\",\n        \"prahu\",\n        \"prams\",\n        \"prana\",\n        \"prang\",\n        \"praos\",\n        \"prase\",\n        \"prate\",\n        \"prats\",\n        \"pratt\",\n        \"praty\",\n        \"praus\",\n        \"prays\",\n        \"predy\",\n        \"preed\",\n        \"prees\",\n        \"preif\",\n        \"prems\",\n        \"premy\",\n        \"prent\",\n        \"preon\",\n        \"preop\",\n        \"preps\",\n        \"presa\",\n        \"prese\",\n        \"prest\",\n        \"preve\",\n        \"prexy\",\n        \"preys\",\n        \"prial\",\n        \"pricy\",\n        \"prief\",\n        \"prier\",\n        \"pries\",\n        \"prigs\",\n        \"prill\",\n        \"prima\",\n        \"primi\",\n        \"primp\",\n        \"prims\",\n        \"primy\",\n        \"prink\",\n        \"prion\",\n        \"prise\",\n        \"priss\",\n        \"proas\",\n        \"probs\",\n        \"prods\",\n        \"proem\",\n        \"profs\",\n        \"progs\",\n        \"proin\",\n        \"proke\",\n        \"prole\",\n        \"proll\",\n        \"promo\",\n        \"proms\",\n        \"pronk\",\n        \"props\",\n        \"prore\",\n        \"proso\",\n        \"pross\",\n        \"prost\",\n        \"prosy\",\n        \"proto\",\n        \"proul\",\n        \"prows\",\n        \"proyn\",\n        \"prunt\",\n        \"pruta\",\n        \"pryer\",\n        \"pryse\",\n        \"pseud\",\n        \"pshaw\",\n        \"psion\",\n        \"psoae\",\n        \"psoai\",\n        \"psoas\",\n        \"psora\",\n        \"psych\",\n        \"psyop\",\n        \"pubco\",\n        \"pubes\",\n        \"pubis\",\n        \"pucan\",\n        \"pucer\",\n        \"puces\",\n        \"pucka\",\n        \"pucks\",\n        \"puddy\",\n        \"pudge\",\n        \"pudic\",\n        \"pudor\",\n        \"pudsy\",\n        \"pudus\",\n        \"puers\",\n        \"puffa\",\n        \"puffs\",\n        \"puggy\",\n        \"pugil\",\n        \"puhas\",\n        \"pujah\",\n        \"pujas\",\n        \"pukas\",\n        \"puked\",\n        \"puker\",\n        \"pukes\",\n        \"pukey\",\n        \"pukka\",\n        \"pukus\",\n        \"pulao\",\n        \"pulas\",\n        \"puled\",\n        \"puler\",\n        \"pules\",\n        \"pulik\",\n        \"pulis\",\n        \"pulka\",\n        \"pulks\",\n        \"pulli\",\n        \"pulls\",\n        \"pully\",\n        \"pulmo\",\n        \"pulps\",\n        \"pulus\",\n        \"pumas\",\n        \"pumie\",\n        \"pumps\",\n        \"punas\",\n        \"punce\",\n        \"punga\",\n        \"pungs\",\n        \"punji\",\n        \"punka\",\n        \"punks\",\n        \"punky\",\n        \"punny\",\n        \"punto\",\n        \"punts\",\n        \"punty\",\n        \"pupae\",\n        \"pupas\",\n        \"pupus\",\n        \"purda\",\n        \"pured\",\n        \"pures\",\n        \"purin\",\n        \"puris\",\n        \"purls\",\n        \"purpy\",\n        \"purrs\",\n        \"pursy\",\n        \"purty\",\n        \"puses\",\n        \"pusle\",\n        \"pussy\",\n        \"putid\",\n        \"puton\",\n        \"putti\",\n        \"putto\",\n        \"putts\",\n        \"puzel\",\n        \"pwned\",\n        \"pyats\",\n        \"pyets\",\n        \"pygal\",\n        \"pyins\",\n        \"pylon\",\n        \"pyned\",\n        \"pynes\",\n        \"pyoid\",\n        \"pyots\",\n        \"pyral\",\n        \"pyran\",\n        \"pyres\",\n        \"pyrex\",\n        \"pyric\",\n        \"pyros\",\n        \"pyxed\",\n        \"pyxes\",\n        \"pyxie\",\n        \"pyxis\",\n        \"pzazz\",\n        \"qadis\",\n        \"qaids\",\n        \"qajaq\",\n        \"qanat\",\n        \"qapik\",\n        \"qibla\",\n        \"qophs\",\n        \"qorma\",\n        \"quads\",\n        \"quaff\",\n        \"quags\",\n        \"quair\",\n        \"quais\",\n        \"quaky\",\n        \"quale\",\n        \"quant\",\n        \"quare\",\n        \"quass\",\n        \"quate\",\n        \"quats\",\n        \"quayd\",\n        \"quays\",\n        \"qubit\",\n        \"quean\",\n        \"queme\",\n        \"quena\",\n        \"quern\",\n        \"queyn\",\n        \"queys\",\n        \"quich\",\n        \"quids\",\n        \"quiff\",\n        \"quims\",\n        \"quina\",\n        \"quine\",\n        \"quino\",\n        \"quins\",\n        \"quint\",\n        \"quipo\",\n        \"quips\",\n        \"quipu\",\n        \"quire\",\n        \"quirt\",\n        \"quist\",\n        \"quits\",\n        \"quoad\",\n        \"quods\",\n        \"quoif\",\n        \"quoin\",\n        \"quoit\",\n        \"quoll\",\n        \"quonk\",\n        \"quops\",\n        \"qursh\",\n        \"quyte\",\n        \"rabat\",\n        \"rabic\",\n        \"rabis\",\n        \"raced\",\n        \"races\",\n        \"rache\",\n        \"racks\",\n        \"racon\",\n        \"radge\",\n        \"radix\",\n        \"radon\",\n        \"raffs\",\n        \"rafts\",\n        \"ragas\",\n        \"ragde\",\n        \"raged\",\n        \"ragee\",\n        \"rager\",\n        \"rages\",\n        \"ragga\",\n        \"raggs\",\n        \"raggy\",\n        \"ragis\",\n        \"ragus\",\n        \"rahed\",\n        \"rahui\",\n        \"raias\",\n        \"raids\",\n        \"raiks\",\n        \"raile\",\n        \"rails\",\n        \"raine\",\n        \"rains\",\n        \"raird\",\n        \"raita\",\n        \"raits\",\n        \"rajas\",\n        \"rajes\",\n        \"raked\",\n        \"rakee\",\n        \"raker\",\n        \"rakes\",\n        \"rakia\",\n        \"rakis\",\n        \"rakus\",\n        \"rales\",\n        \"ramal\",\n        \"ramee\",\n        \"ramet\",\n        \"ramie\",\n        \"ramin\",\n        \"ramis\",\n        \"rammy\",\n        \"ramps\",\n        \"ramus\",\n        \"ranas\",\n        \"rance\",\n        \"rands\",\n        \"ranee\",\n        \"ranga\",\n        \"rangi\",\n        \"rangs\",\n        \"rangy\",\n        \"ranid\",\n        \"ranis\",\n        \"ranke\",\n        \"ranks\",\n        \"rants\",\n        \"raped\",\n        \"raper\",\n        \"rapes\",\n        \"raphe\",\n        \"rappe\",\n        \"rared\",\n        \"raree\",\n        \"rares\",\n        \"rarks\",\n        \"rased\",\n        \"raser\",\n        \"rases\",\n        \"rasps\",\n        \"rasse\",\n        \"rasta\",\n        \"ratal\",\n        \"ratan\",\n        \"ratas\",\n        \"ratch\",\n        \"rated\",\n        \"ratel\",\n        \"rater\",\n        \"rates\",\n        \"ratha\",\n        \"rathe\",\n        \"raths\",\n        \"ratoo\",\n        \"ratos\",\n        \"ratus\",\n        \"rauns\",\n        \"raupo\",\n        \"raved\",\n        \"ravel\",\n        \"raver\",\n        \"raves\",\n        \"ravey\",\n        \"ravin\",\n        \"rawer\",\n        \"rawin\",\n        \"rawly\",\n        \"rawns\",\n        \"raxed\",\n        \"raxes\",\n        \"rayah\",\n        \"rayas\",\n        \"rayed\",\n        \"rayle\",\n        \"rayne\",\n        \"razed\",\n        \"razee\",\n        \"razer\",\n        \"razes\",\n        \"razoo\",\n        \"readd\",\n        \"reads\",\n        \"reais\",\n        \"reaks\",\n        \"realo\",\n        \"reals\",\n        \"reame\",\n        \"reams\",\n        \"reamy\",\n        \"reans\",\n        \"reaps\",\n        \"rears\",\n        \"reast\",\n        \"reata\",\n        \"reate\",\n        \"reave\",\n        \"rebbe\",\n        \"rebec\",\n        \"rebid\",\n        \"rebit\",\n        \"rebop\",\n        \"rebuy\",\n        \"recal\",\n        \"recce\",\n        \"recco\",\n        \"reccy\",\n        \"recit\",\n        \"recks\",\n        \"recon\",\n        \"recta\",\n        \"recti\",\n        \"recto\",\n        \"redan\",\n        \"redds\",\n        \"reddy\",\n        \"reded\",\n        \"redes\",\n        \"redia\",\n        \"redid\",\n        \"redip\",\n        \"redly\",\n        \"redon\",\n        \"redos\",\n        \"redox\",\n        \"redry\",\n        \"redub\",\n        \"redux\",\n        \"redye\",\n        \"reech\",\n        \"reede\",\n        \"reeds\",\n        \"reefs\",\n        \"reefy\",\n        \"reeks\",\n        \"reeky\",\n        \"reels\",\n        \"reens\",\n        \"reest\",\n        \"reeve\",\n        \"refed\",\n        \"refel\",\n        \"reffo\",\n        \"refis\",\n        \"refix\",\n        \"refly\",\n        \"refry\",\n        \"regar\",\n        \"reges\",\n        \"reggo\",\n        \"regie\",\n        \"regma\",\n        \"regna\",\n        \"regos\",\n        \"regur\",\n        \"rehem\",\n        \"reifs\",\n        \"reify\",\n        \"reiki\",\n        \"reiks\",\n        \"reink\",\n        \"reins\",\n        \"reird\",\n        \"reist\",\n        \"reive\",\n        \"rejig\",\n        \"rejon\",\n        \"reked\",\n        \"rekes\",\n        \"rekey\",\n        \"relet\",\n        \"relie\",\n        \"relit\",\n        \"rello\",\n        \"reman\",\n        \"remap\",\n        \"remen\",\n        \"remet\",\n        \"remex\",\n        \"remix\",\n        \"renay\",\n        \"rends\",\n        \"reney\",\n        \"renga\",\n        \"renig\",\n        \"renin\",\n        \"renne\",\n        \"renos\",\n        \"rente\",\n        \"rents\",\n        \"reoil\",\n        \"reorg\",\n        \"repeg\",\n        \"repin\",\n        \"repla\",\n        \"repos\",\n        \"repot\",\n        \"repps\",\n        \"repro\",\n        \"reran\",\n        \"rerig\",\n        \"resat\",\n        \"resaw\",\n        \"resay\",\n        \"resee\",\n        \"reses\",\n        \"resew\",\n        \"resid\",\n        \"resit\",\n        \"resod\",\n        \"resow\",\n        \"resto\",\n        \"rests\",\n        \"resty\",\n        \"resus\",\n        \"retag\",\n        \"retax\",\n        \"retem\",\n        \"retia\",\n        \"retie\",\n        \"retox\",\n        \"revet\",\n        \"revie\",\n        \"rewan\",\n        \"rewax\",\n        \"rewed\",\n        \"rewet\",\n        \"rewin\",\n        \"rewon\",\n        \"rewth\",\n        \"rexes\",\n        \"rezes\",\n        \"rheas\",\n        \"rheme\",\n        \"rheum\",\n        \"rhies\",\n        \"rhime\",\n        \"rhine\",\n        \"rhody\",\n        \"rhomb\",\n        \"rhone\",\n        \"rhumb\",\n        \"rhyne\",\n        \"rhyta\",\n        \"riads\",\n        \"rials\",\n        \"riant\",\n        \"riata\",\n        \"ribas\",\n        \"ribby\",\n        \"ribes\",\n        \"riced\",\n        \"ricer\",\n        \"rices\",\n        \"ricey\",\n        \"richt\",\n        \"ricin\",\n        \"ricks\",\n        \"rides\",\n        \"ridgy\",\n        \"ridic\",\n        \"riels\",\n        \"riems\",\n        \"rieve\",\n        \"rifer\",\n        \"riffs\",\n        \"rifte\",\n        \"rifts\",\n        \"rifty\",\n        \"riggs\",\n        \"rigol\",\n        \"riled\",\n        \"riles\",\n        \"riley\",\n        \"rille\",\n        \"rills\",\n        \"rimae\",\n        \"rimed\",\n        \"rimer\",\n        \"rimes\",\n        \"rimus\",\n        \"rinds\",\n        \"rindy\",\n        \"rines\",\n        \"rings\",\n        \"rinks\",\n        \"rioja\",\n        \"riots\",\n        \"riped\",\n        \"ripes\",\n        \"ripps\",\n        \"rises\",\n        \"rishi\",\n        \"risks\",\n        \"risps\",\n        \"risus\",\n        \"rites\",\n        \"ritts\",\n        \"ritzy\",\n        \"rivas\",\n        \"rived\",\n        \"rivel\",\n        \"riven\",\n        \"rives\",\n        \"riyal\",\n        \"rizas\",\n        \"roads\",\n        \"roams\",\n        \"roans\",\n        \"roars\",\n        \"roary\",\n        \"roate\",\n        \"robed\",\n        \"robes\",\n        \"roble\",\n        \"rocks\",\n        \"roded\",\n        \"rodes\",\n        \"roguy\",\n        \"rohes\",\n        \"roids\",\n        \"roils\",\n        \"roily\",\n        \"roins\",\n        \"roist\",\n        \"rojak\",\n        \"rojis\",\n        \"roked\",\n        \"roker\",\n        \"rokes\",\n        \"rolag\",\n        \"roles\",\n        \"rolfs\",\n        \"rolls\",\n        \"romal\",\n        \"roman\",\n        \"romeo\",\n        \"romps\",\n        \"ronde\",\n        \"rondo\",\n        \"roneo\",\n        \"rones\",\n        \"ronin\",\n        \"ronne\",\n        \"ronte\",\n        \"ronts\",\n        \"roods\",\n        \"roofs\",\n        \"roofy\",\n        \"rooks\",\n        \"rooky\",\n        \"rooms\",\n        \"roons\",\n        \"roops\",\n        \"roopy\",\n        \"roosa\",\n        \"roose\",\n        \"roots\",\n        \"rooty\",\n        \"roped\",\n        \"roper\",\n        \"ropes\",\n        \"ropey\",\n        \"roque\",\n        \"roral\",\n        \"rores\",\n        \"roric\",\n        \"rorid\",\n        \"rorie\",\n        \"rorts\",\n        \"rorty\",\n        \"rosed\",\n        \"roses\",\n        \"roset\",\n        \"roshi\",\n        \"rosin\",\n        \"rosit\",\n        \"rosti\",\n        \"rosts\",\n        \"rotal\",\n        \"rotan\",\n        \"rotas\",\n        \"rotch\",\n        \"roted\",\n        \"rotes\",\n        \"rotis\",\n        \"rotls\",\n        \"roton\",\n        \"rotos\",\n        \"rotte\",\n        \"rouen\",\n        \"roues\",\n        \"roule\",\n        \"rouls\",\n        \"roums\",\n        \"roups\",\n        \"roupy\",\n        \"roust\",\n        \"routh\",\n        \"routs\",\n        \"roved\",\n        \"roven\",\n        \"roves\",\n        \"rowan\",\n        \"rowed\",\n        \"rowel\",\n        \"rowen\",\n        \"rowie\",\n        \"rowme\",\n        \"rownd\",\n        \"rowth\",\n        \"rowts\",\n        \"royne\",\n        \"royst\",\n        \"rozet\",\n        \"rozit\",\n        \"ruana\",\n        \"rubai\",\n        \"rubby\",\n        \"rubel\",\n        \"rubes\",\n        \"rubin\",\n        \"ruble\",\n        \"rubli\",\n        \"rubus\",\n        \"ruche\",\n        \"rucks\",\n        \"rudas\",\n        \"rudds\",\n        \"rudes\",\n        \"rudie\",\n        \"rudis\",\n        \"rueda\",\n        \"ruers\",\n        \"ruffe\",\n        \"ruffs\",\n        \"rugae\",\n        \"rugal\",\n        \"ruggy\",\n        \"ruing\",\n        \"ruins\",\n        \"rukhs\",\n        \"ruled\",\n        \"rules\",\n        \"rumal\",\n        \"rumbo\",\n        \"rumen\",\n        \"rumes\",\n        \"rumly\",\n        \"rummy\",\n        \"rumpo\",\n        \"rumps\",\n        \"rumpy\",\n        \"runch\",\n        \"runds\",\n        \"runed\",\n        \"runes\",\n        \"rungs\",\n        \"runic\",\n        \"runny\",\n        \"runts\",\n        \"runty\",\n        \"rupia\",\n        \"rurps\",\n        \"rurus\",\n        \"rusas\",\n        \"ruses\",\n        \"rushy\",\n        \"rusks\",\n        \"rusma\",\n        \"russe\",\n        \"rusts\",\n        \"ruths\",\n        \"rutin\",\n        \"rutty\",\n        \"ryals\",\n        \"rybat\",\n        \"ryked\",\n        \"rykes\",\n        \"rymme\",\n        \"rynds\",\n        \"ryots\",\n        \"ryper\",\n        \"saags\",\n        \"sabal\",\n        \"sabed\",\n        \"saber\",\n        \"sabes\",\n        \"sabha\",\n        \"sabin\",\n        \"sabir\",\n        \"sable\",\n        \"sabot\",\n        \"sabra\",\n        \"sabre\",\n        \"sacks\",\n        \"sacra\",\n        \"saddo\",\n        \"sades\",\n        \"sadhe\",\n        \"sadhu\",\n        \"sadis\",\n        \"sados\",\n        \"sadza\",\n        \"safed\",\n        \"safes\",\n        \"sagas\",\n        \"sager\",\n        \"sages\",\n        \"saggy\",\n        \"sagos\",\n        \"sagum\",\n        \"saheb\",\n        \"sahib\",\n        \"saice\",\n        \"saick\",\n        \"saics\",\n        \"saids\",\n        \"saiga\",\n        \"sails\",\n        \"saims\",\n        \"saine\",\n        \"sains\",\n        \"sairs\",\n        \"saist\",\n        \"saith\",\n        \"sajou\",\n        \"sakai\",\n        \"saker\",\n        \"sakes\",\n        \"sakia\",\n        \"sakis\",\n        \"sakti\",\n        \"salal\",\n        \"salat\",\n        \"salep\",\n        \"sales\",\n        \"salet\",\n        \"salic\",\n        \"salix\",\n        \"salle\",\n        \"salmi\",\n        \"salol\",\n        \"salop\",\n        \"salpa\",\n        \"salps\",\n        \"salse\",\n        \"salto\",\n        \"salts\",\n        \"salue\",\n        \"salut\",\n        \"saman\",\n        \"samas\",\n        \"samba\",\n        \"sambo\",\n        \"samek\",\n        \"samel\",\n        \"samen\",\n        \"sames\",\n        \"samey\",\n        \"samfu\",\n        \"sammy\",\n        \"sampi\",\n        \"samps\",\n        \"sands\",\n        \"saned\",\n        \"sanes\",\n        \"sanga\",\n        \"sangh\",\n        \"sango\",\n        \"sangs\",\n        \"sanko\",\n        \"sansa\",\n        \"santo\",\n        \"sants\",\n        \"saola\",\n        \"sapan\",\n        \"sapid\",\n        \"sapor\",\n        \"saran\",\n        \"sards\",\n        \"sared\",\n        \"saree\",\n        \"sarge\",\n        \"sargo\",\n        \"sarin\",\n        \"saris\",\n        \"sarks\",\n        \"sarky\",\n        \"sarod\",\n        \"saros\",\n        \"sarus\",\n        \"saser\",\n        \"sasin\",\n        \"sasse\",\n        \"satai\",\n        \"satay\",\n        \"sated\",\n        \"satem\",\n        \"sates\",\n        \"satis\",\n        \"sauba\",\n        \"sauch\",\n        \"saugh\",\n        \"sauls\",\n        \"sault\",\n        \"saunt\",\n        \"saury\",\n        \"sauts\",\n        \"saved\",\n        \"saver\",\n        \"saves\",\n        \"savey\",\n        \"savin\",\n        \"sawah\",\n        \"sawed\",\n        \"sawer\",\n        \"saxes\",\n        \"sayed\",\n        \"sayer\",\n        \"sayid\",\n        \"sayne\",\n        \"sayon\",\n        \"sayst\",\n        \"sazes\",\n        \"scabs\",\n        \"scads\",\n        \"scaff\",\n        \"scags\",\n        \"scail\",\n        \"scala\",\n        \"scall\",\n        \"scams\",\n        \"scand\",\n        \"scans\",\n        \"scapa\",\n        \"scape\",\n        \"scapi\",\n        \"scarp\",\n        \"scars\",\n        \"scart\",\n        \"scath\",\n        \"scats\",\n        \"scatt\",\n        \"scaud\",\n        \"scaup\",\n        \"scaur\",\n        \"scaws\",\n        \"sceat\",\n        \"scena\",\n        \"scend\",\n        \"schav\",\n        \"schmo\",\n        \"schul\",\n        \"schwa\",\n        \"sclim\",\n        \"scody\",\n        \"scogs\",\n        \"scoog\",\n        \"scoot\",\n        \"scopa\",\n        \"scops\",\n        \"scots\",\n        \"scoug\",\n        \"scoup\",\n        \"scowp\",\n        \"scows\",\n        \"scrab\",\n        \"scrae\",\n        \"scrag\",\n        \"scran\",\n        \"scrat\",\n        \"scraw\",\n        \"scray\",\n        \"scrim\",\n        \"scrip\",\n        \"scrob\",\n        \"scrod\",\n        \"scrog\",\n        \"scrow\",\n        \"scudi\",\n        \"scudo\",\n        \"scuds\",\n        \"scuff\",\n        \"scuft\",\n        \"scugs\",\n        \"sculk\",\n        \"scull\",\n        \"sculp\",\n        \"sculs\",\n        \"scums\",\n        \"scups\",\n        \"scurf\",\n        \"scurs\",\n        \"scuse\",\n        \"scuta\",\n        \"scute\",\n        \"scuts\",\n        \"scuzz\",\n        \"scyes\",\n        \"sdayn\",\n        \"sdein\",\n        \"seals\",\n        \"seame\",\n        \"seams\",\n        \"seamy\",\n        \"seans\",\n        \"seare\",\n        \"sears\",\n        \"sease\",\n        \"seats\",\n        \"seaze\",\n        \"sebum\",\n        \"secco\",\n        \"sechs\",\n        \"sects\",\n        \"seder\",\n        \"sedes\",\n        \"sedge\",\n        \"sedgy\",\n        \"sedum\",\n        \"seeds\",\n        \"seeks\",\n        \"seeld\",\n        \"seels\",\n        \"seely\",\n        \"seems\",\n        \"seeps\",\n        \"seepy\",\n        \"seers\",\n        \"sefer\",\n        \"segar\",\n        \"segni\",\n        \"segno\",\n        \"segol\",\n        \"segos\",\n        \"sehri\",\n        \"seifs\",\n        \"seils\",\n        \"seine\",\n        \"seirs\",\n        \"seise\",\n        \"seism\",\n        \"seity\",\n        \"seiza\",\n        \"sekos\",\n        \"sekts\",\n        \"selah\",\n        \"seles\",\n        \"selfs\",\n        \"sella\",\n        \"selle\",\n        \"sells\",\n        \"selva\",\n        \"semee\",\n        \"semes\",\n        \"semie\",\n        \"semis\",\n        \"senas\",\n        \"sends\",\n        \"senes\",\n        \"sengi\",\n        \"senna\",\n        \"senor\",\n        \"sensa\",\n        \"sensi\",\n        \"sente\",\n        \"senti\",\n        \"sents\",\n        \"senvy\",\n        \"senza\",\n        \"sepad\",\n        \"sepal\",\n        \"sepic\",\n        \"sepoy\",\n        \"septa\",\n        \"septs\",\n        \"serac\",\n        \"serai\",\n        \"seral\",\n        \"sered\",\n        \"serer\",\n        \"seres\",\n        \"serfs\",\n        \"serge\",\n        \"seric\",\n        \"serin\",\n        \"serks\",\n        \"seron\",\n        \"serow\",\n        \"serra\",\n        \"serre\",\n        \"serrs\",\n        \"serry\",\n        \"servo\",\n        \"sesey\",\n        \"sessa\",\n        \"setae\",\n        \"setal\",\n        \"seton\",\n        \"setts\",\n        \"sewan\",\n        \"sewar\",\n        \"sewed\",\n        \"sewel\",\n        \"sewen\",\n        \"sewin\",\n        \"sexed\",\n        \"sexer\",\n        \"sexes\",\n        \"sexto\",\n        \"sexts\",\n        \"seyen\",\n        \"shads\",\n        \"shags\",\n        \"shahs\",\n        \"shako\",\n        \"shakt\",\n        \"shalm\",\n        \"shaly\",\n        \"shama\",\n        \"shams\",\n        \"shand\",\n        \"shans\",\n        \"shaps\",\n        \"sharn\",\n        \"shash\",\n        \"shaul\",\n        \"shawm\",\n        \"shawn\",\n        \"shaws\",\n        \"shaya\",\n        \"shays\",\n        \"shchi\",\n        \"sheaf\",\n        \"sheal\",\n        \"sheas\",\n        \"sheds\",\n        \"sheel\",\n        \"shend\",\n        \"shent\",\n        \"sheol\",\n        \"sherd\",\n        \"shere\",\n        \"shero\",\n        \"shets\",\n        \"sheva\",\n        \"shewn\",\n        \"shews\",\n        \"shiai\",\n        \"shiel\",\n        \"shier\",\n        \"shies\",\n        \"shill\",\n        \"shily\",\n        \"shims\",\n        \"shins\",\n        \"ships\",\n        \"shirr\",\n        \"shirs\",\n        \"shish\",\n        \"shiso\",\n        \"shist\",\n        \"shite\",\n        \"shits\",\n        \"shiur\",\n        \"shiva\",\n        \"shive\",\n        \"shivs\",\n        \"shlep\",\n        \"shlub\",\n        \"shmek\",\n        \"shmoe\",\n        \"shoat\",\n        \"shoed\",\n        \"shoer\",\n        \"shoes\",\n        \"shogi\",\n        \"shogs\",\n        \"shoji\",\n        \"shojo\",\n        \"shola\",\n        \"shool\",\n        \"shoon\",\n        \"shoos\",\n        \"shope\",\n        \"shops\",\n        \"shorl\",\n        \"shote\",\n        \"shots\",\n        \"shott\",\n        \"showd\",\n        \"shows\",\n        \"shoyu\",\n        \"shred\",\n        \"shris\",\n        \"shrow\",\n        \"shtik\",\n        \"shtum\",\n        \"shtup\",\n        \"shule\",\n        \"shuln\",\n        \"shuls\",\n        \"shuns\",\n        \"shura\",\n        \"shute\",\n        \"shuts\",\n        \"shwas\",\n        \"shyer\",\n        \"sials\",\n        \"sibbs\",\n        \"sibyl\",\n        \"sices\",\n        \"sicht\",\n        \"sicko\",\n        \"sicks\",\n        \"sicky\",\n        \"sidas\",\n        \"sided\",\n        \"sider\",\n        \"sides\",\n        \"sidha\",\n        \"sidhe\",\n        \"sidle\",\n        \"sield\",\n        \"siens\",\n        \"sient\",\n        \"sieth\",\n        \"sieur\",\n        \"sifts\",\n        \"sighs\",\n        \"sigil\",\n        \"sigla\",\n        \"signa\",\n        \"signs\",\n        \"sijos\",\n        \"sikas\",\n        \"siker\",\n        \"sikes\",\n        \"silds\",\n        \"siled\",\n        \"silen\",\n        \"siler\",\n        \"siles\",\n        \"silex\",\n        \"silks\",\n        \"sills\",\n        \"silos\",\n        \"silts\",\n        \"silty\",\n        \"silva\",\n        \"simar\",\n        \"simas\",\n        \"simba\",\n        \"simis\",\n        \"simps\",\n        \"simul\",\n        \"sinds\",\n        \"sined\",\n        \"sines\",\n        \"sings\",\n        \"sinhs\",\n        \"sinks\",\n        \"sinky\",\n        \"sinus\",\n        \"siped\",\n        \"sipes\",\n        \"sippy\",\n        \"sired\",\n        \"siree\",\n        \"sires\",\n        \"sirih\",\n        \"siris\",\n        \"siroc\",\n        \"sirra\",\n        \"sirup\",\n        \"sisal\",\n        \"sises\",\n        \"sista\",\n        \"sists\",\n        \"sitar\",\n        \"sited\",\n        \"sites\",\n        \"sithe\",\n        \"sitka\",\n        \"situp\",\n        \"situs\",\n        \"siver\",\n        \"sixer\",\n        \"sixes\",\n        \"sixmo\",\n        \"sixte\",\n        \"sizar\",\n        \"sized\",\n        \"sizel\",\n        \"sizer\",\n        \"sizes\",\n        \"skags\",\n        \"skail\",\n        \"skald\",\n        \"skank\",\n        \"skart\",\n        \"skats\",\n        \"skatt\",\n        \"skaws\",\n        \"skean\",\n        \"skear\",\n        \"skeds\",\n        \"skeed\",\n        \"skeef\",\n        \"skeen\",\n        \"skeer\",\n        \"skees\",\n        \"skeet\",\n        \"skegg\",\n        \"skegs\",\n        \"skein\",\n        \"skelf\",\n        \"skell\",\n        \"skelm\",\n        \"skelp\",\n        \"skene\",\n        \"skens\",\n        \"skeos\",\n        \"skeps\",\n        \"skers\",\n        \"skets\",\n        \"skews\",\n        \"skids\",\n        \"skied\",\n        \"skies\",\n        \"skiey\",\n        \"skimo\",\n        \"skims\",\n        \"skink\",\n        \"skins\",\n        \"skint\",\n        \"skios\",\n        \"skips\",\n        \"skirl\",\n        \"skirr\",\n        \"skite\",\n        \"skits\",\n        \"skive\",\n        \"skivy\",\n        \"sklim\",\n        \"skoal\",\n        \"skody\",\n        \"skoff\",\n        \"skogs\",\n        \"skols\",\n        \"skool\",\n        \"skort\",\n        \"skosh\",\n        \"skran\",\n        \"skrik\",\n        \"skuas\",\n        \"skugs\",\n        \"skyed\",\n        \"skyer\",\n        \"skyey\",\n        \"skyfs\",\n        \"skyre\",\n        \"skyrs\",\n        \"skyte\",\n        \"slabs\",\n        \"slade\",\n        \"slaes\",\n        \"slags\",\n        \"slaid\",\n        \"slake\",\n        \"slams\",\n        \"slane\",\n        \"slank\",\n        \"slaps\",\n        \"slart\",\n        \"slats\",\n        \"slaty\",\n        \"slaws\",\n        \"slays\",\n        \"slebs\",\n        \"sleds\",\n        \"sleer\",\n        \"slews\",\n        \"sleys\",\n        \"slier\",\n        \"slily\",\n        \"slims\",\n        \"slipe\",\n        \"slips\",\n        \"slipt\",\n        \"slish\",\n        \"slits\",\n        \"slive\",\n        \"sloan\",\n        \"slobs\",\n        \"sloes\",\n        \"slogs\",\n        \"sloid\",\n        \"slojd\",\n        \"slomo\",\n        \"sloom\",\n        \"sloot\",\n        \"slops\",\n        \"slopy\",\n        \"slorm\",\n        \"slots\",\n        \"slove\",\n        \"slows\",\n        \"sloyd\",\n        \"slubb\",\n        \"slubs\",\n        \"slued\",\n        \"slues\",\n        \"sluff\",\n        \"slugs\",\n        \"sluit\",\n        \"slums\",\n        \"slurb\",\n        \"slurs\",\n        \"sluse\",\n        \"sluts\",\n        \"slyer\",\n        \"slype\",\n        \"smaak\",\n        \"smaik\",\n        \"smalm\",\n        \"smalt\",\n        \"smarm\",\n        \"smaze\",\n        \"smeek\",\n        \"smees\",\n        \"smeik\",\n        \"smeke\",\n        \"smerk\",\n        \"smews\",\n        \"smirr\",\n        \"smirs\",\n        \"smits\",\n        \"smogs\",\n        \"smoko\",\n        \"smolt\",\n        \"smoor\",\n        \"smoot\",\n        \"smore\",\n        \"smorg\",\n        \"smout\",\n        \"smowt\",\n        \"smugs\",\n        \"smurs\",\n        \"smush\",\n        \"smuts\",\n        \"snabs\",\n        \"snafu\",\n        \"snags\",\n        \"snaps\",\n        \"snarf\",\n        \"snark\",\n        \"snars\",\n        \"snary\",\n        \"snash\",\n        \"snath\",\n        \"snaws\",\n        \"snead\",\n        \"sneap\",\n        \"snebs\",\n        \"sneck\",\n        \"sneds\",\n        \"sneed\",\n        \"snees\",\n        \"snell\",\n        \"snibs\",\n        \"snick\",\n        \"snies\",\n        \"snift\",\n        \"snigs\",\n        \"snips\",\n        \"snipy\",\n        \"snirt\",\n        \"snits\",\n        \"snobs\",\n        \"snods\",\n        \"snoek\",\n        \"snoep\",\n        \"snogs\",\n        \"snoke\",\n        \"snood\",\n        \"snook\",\n        \"snool\",\n        \"snoot\",\n        \"snots\",\n        \"snowk\",\n        \"snows\",\n        \"snubs\",\n        \"snugs\",\n        \"snush\",\n        \"snyes\",\n        \"soaks\",\n        \"soaps\",\n        \"soare\",\n        \"soars\",\n        \"soave\",\n        \"sobas\",\n        \"socas\",\n        \"soces\",\n        \"socko\",\n        \"socks\",\n        \"socle\",\n        \"sodas\",\n        \"soddy\",\n        \"sodic\",\n        \"sodom\",\n        \"sofar\",\n        \"sofas\",\n        \"softa\",\n        \"softs\",\n        \"softy\",\n        \"soger\",\n        \"sohur\",\n        \"soils\",\n        \"soily\",\n        \"sojas\",\n        \"sojus\",\n        \"sokah\",\n        \"soken\",\n        \"sokes\",\n        \"sokol\",\n        \"solah\",\n        \"solan\",\n        \"solas\",\n        \"solde\",\n        \"soldi\",\n        \"soldo\",\n        \"solds\",\n        \"soled\",\n        \"solei\",\n        \"soler\",\n        \"soles\",\n        \"solon\",\n        \"solos\",\n        \"solum\",\n        \"solus\",\n        \"soman\",\n        \"somas\",\n        \"sonce\",\n        \"sonde\",\n        \"sones\",\n        \"songs\",\n        \"sonly\",\n        \"sonne\",\n        \"sonny\",\n        \"sonse\",\n        \"sonsy\",\n        \"sooey\",\n        \"sooks\",\n        \"sooky\",\n        \"soole\",\n        \"sools\",\n        \"sooms\",\n        \"soops\",\n        \"soote\",\n        \"soots\",\n        \"sophs\",\n        \"sophy\",\n        \"sopor\",\n        \"soppy\",\n        \"sopra\",\n        \"soral\",\n        \"soras\",\n        \"sorbo\",\n        \"sorbs\",\n        \"sorda\",\n        \"sordo\",\n        \"sords\",\n        \"sored\",\n        \"soree\",\n        \"sorel\",\n        \"sorer\",\n        \"sores\",\n        \"sorex\",\n        \"sorgo\",\n        \"sorns\",\n        \"sorra\",\n        \"sorta\",\n        \"sorts\",\n        \"sorus\",\n        \"soths\",\n        \"sotol\",\n        \"souce\",\n        \"souct\",\n        \"sough\",\n        \"souks\",\n        \"souls\",\n        \"soums\",\n        \"soups\",\n        \"soupy\",\n        \"sours\",\n        \"souse\",\n        \"souts\",\n        \"sowar\",\n        \"sowce\",\n        \"sowed\",\n        \"sowff\",\n        \"sowfs\",\n        \"sowle\",\n        \"sowls\",\n        \"sowms\",\n        \"sownd\",\n        \"sowne\",\n        \"sowps\",\n        \"sowse\",\n        \"sowth\",\n        \"soyas\",\n        \"soyle\",\n        \"soyuz\",\n        \"sozin\",\n        \"spacy\",\n        \"spado\",\n        \"spaed\",\n        \"spaer\",\n        \"spaes\",\n        \"spags\",\n        \"spahi\",\n        \"spail\",\n        \"spain\",\n        \"spait\",\n        \"spake\",\n        \"spald\",\n        \"spale\",\n        \"spall\",\n        \"spalt\",\n        \"spams\",\n        \"spane\",\n        \"spang\",\n        \"spans\",\n        \"spard\",\n        \"spars\",\n        \"spart\",\n        \"spate\",\n        \"spats\",\n        \"spaul\",\n        \"spawl\",\n        \"spaws\",\n        \"spayd\",\n        \"spays\",\n        \"spaza\",\n        \"spazz\",\n        \"speal\",\n        \"spean\",\n        \"speat\",\n        \"specs\",\n        \"spect\",\n        \"speel\",\n        \"speer\",\n        \"speil\",\n        \"speir\",\n        \"speks\",\n        \"speld\",\n        \"spelk\",\n        \"speos\",\n        \"spets\",\n        \"speug\",\n        \"spews\",\n        \"spewy\",\n        \"spial\",\n        \"spica\",\n        \"spick\",\n        \"spics\",\n        \"spide\",\n        \"spier\",\n        \"spies\",\n        \"spiff\",\n        \"spifs\",\n        \"spiks\",\n        \"spile\",\n        \"spims\",\n        \"spina\",\n        \"spink\",\n        \"spins\",\n        \"spirt\",\n        \"spiry\",\n        \"spits\",\n        \"spitz\",\n        \"spivs\",\n        \"splay\",\n        \"splog\",\n        \"spode\",\n        \"spods\",\n        \"spoom\",\n        \"spoor\",\n        \"spoot\",\n        \"spork\",\n        \"sposh\",\n        \"spots\",\n        \"sprad\",\n        \"sprag\",\n        \"sprat\",\n        \"spred\",\n        \"sprew\",\n        \"sprit\",\n        \"sprod\",\n        \"sprog\",\n        \"sprue\",\n        \"sprug\",\n        \"spuds\",\n        \"spued\",\n        \"spuer\",\n        \"spues\",\n        \"spugs\",\n        \"spule\",\n        \"spume\",\n        \"spumy\",\n        \"spurs\",\n        \"sputa\",\n        \"spyal\",\n        \"spyre\",\n        \"squab\",\n        \"squaw\",\n        \"squeg\",\n        \"squid\",\n        \"squit\",\n        \"squiz\",\n        \"stabs\",\n        \"stade\",\n        \"stags\",\n        \"stagy\",\n        \"staig\",\n        \"stane\",\n        \"stang\",\n        \"staph\",\n        \"staps\",\n        \"starn\",\n        \"starr\",\n        \"stars\",\n        \"stats\",\n        \"staun\",\n        \"staws\",\n        \"stays\",\n        \"stean\",\n        \"stear\",\n        \"stedd\",\n        \"stede\",\n        \"steds\",\n        \"steek\",\n        \"steem\",\n        \"steen\",\n        \"steil\",\n        \"stela\",\n        \"stele\",\n        \"stell\",\n        \"steme\",\n        \"stems\",\n        \"stend\",\n        \"steno\",\n        \"stens\",\n        \"stent\",\n        \"steps\",\n        \"stept\",\n        \"stere\",\n        \"stets\",\n        \"stews\",\n        \"stewy\",\n        \"steys\",\n        \"stich\",\n        \"stied\",\n        \"sties\",\n        \"stilb\",\n        \"stile\",\n        \"stime\",\n        \"stims\",\n        \"stimy\",\n        \"stipa\",\n        \"stipe\",\n        \"stire\",\n        \"stirk\",\n        \"stirp\",\n        \"stirs\",\n        \"stive\",\n        \"stivy\",\n        \"stoae\",\n        \"stoai\",\n        \"stoas\",\n        \"stoat\",\n        \"stobs\",\n        \"stoep\",\n        \"stogy\",\n        \"stoit\",\n        \"stoln\",\n        \"stoma\",\n        \"stond\",\n        \"stong\",\n        \"stonk\",\n        \"stonn\",\n        \"stook\",\n        \"stoor\",\n        \"stope\",\n        \"stops\",\n        \"stopt\",\n        \"stoss\",\n        \"stots\",\n        \"stott\",\n        \"stoun\",\n        \"stoup\",\n        \"stour\",\n        \"stown\",\n        \"stowp\",\n        \"stows\",\n        \"strad\",\n        \"strae\",\n        \"strag\",\n        \"strak\",\n        \"strep\",\n        \"strew\",\n        \"stria\",\n        \"strig\",\n        \"strim\",\n        \"strop\",\n        \"strow\",\n        \"stroy\",\n        \"strum\",\n        \"stubs\",\n        \"stude\",\n        \"studs\",\n        \"stull\",\n        \"stulm\",\n        \"stumm\",\n        \"stums\",\n        \"stuns\",\n        \"stupa\",\n        \"stupe\",\n        \"sture\",\n        \"sturt\",\n        \"styed\",\n        \"styes\",\n        \"styli\",\n        \"stylo\",\n        \"styme\",\n        \"stymy\",\n        \"styre\",\n        \"styte\",\n        \"subah\",\n        \"subas\",\n        \"subby\",\n        \"suber\",\n        \"subha\",\n        \"succi\",\n        \"sucks\",\n        \"sucky\",\n        \"sucre\",\n        \"sudds\",\n        \"sudor\",\n        \"sudsy\",\n        \"suede\",\n        \"suent\",\n        \"suers\",\n        \"suete\",\n        \"suets\",\n        \"suety\",\n        \"sugan\",\n        \"sughs\",\n        \"sugos\",\n        \"suhur\",\n        \"suids\",\n        \"suint\",\n        \"suits\",\n        \"sujee\",\n        \"sukhs\",\n        \"sukuk\",\n        \"sulci\",\n        \"sulfa\",\n        \"sulfo\",\n        \"sulks\",\n        \"sulph\",\n        \"sulus\",\n        \"sumis\",\n        \"summa\",\n        \"sumos\",\n        \"sumph\",\n        \"sumps\",\n        \"sunis\",\n        \"sunks\",\n        \"sunna\",\n        \"sunns\",\n        \"sunup\",\n        \"supes\",\n        \"supra\",\n        \"surah\",\n        \"sural\",\n        \"suras\",\n        \"surat\",\n        \"surds\",\n        \"sured\",\n        \"sures\",\n        \"surfs\",\n        \"surfy\",\n        \"surgy\",\n        \"surra\",\n        \"sused\",\n        \"suses\",\n        \"susus\",\n        \"sutor\",\n        \"sutra\",\n        \"sutta\",\n        \"swabs\",\n        \"swack\",\n        \"swads\",\n        \"swage\",\n        \"swags\",\n        \"swail\",\n        \"swain\",\n        \"swale\",\n        \"swaly\",\n        \"swamy\",\n        \"swang\",\n        \"swank\",\n        \"swans\",\n        \"swaps\",\n        \"swapt\",\n        \"sward\",\n        \"sware\",\n        \"swarf\",\n        \"swart\",\n        \"swats\",\n        \"swayl\",\n        \"sways\",\n        \"sweal\",\n        \"swede\",\n        \"sweed\",\n        \"sweel\",\n        \"sweer\",\n        \"swees\",\n        \"sweir\",\n        \"swelt\",\n        \"swerf\",\n        \"sweys\",\n        \"swies\",\n        \"swigs\",\n        \"swile\",\n        \"swims\",\n        \"swink\",\n        \"swipe\",\n        \"swire\",\n        \"swiss\",\n        \"swith\",\n        \"swits\",\n        \"swive\",\n        \"swizz\",\n        \"swobs\",\n        \"swole\",\n        \"swoln\",\n        \"swops\",\n        \"swopt\",\n        \"swots\",\n        \"swoun\",\n        \"sybbe\",\n        \"sybil\",\n        \"syboe\",\n        \"sybow\",\n        \"sycee\",\n        \"syces\",\n        \"sycon\",\n        \"syens\",\n        \"syker\",\n        \"sykes\",\n        \"sylis\",\n        \"sylph\",\n        \"sylva\",\n        \"symar\",\n        \"synch\",\n        \"syncs\",\n        \"synds\",\n        \"syned\",\n        \"synes\",\n        \"synth\",\n        \"syped\",\n        \"sypes\",\n        \"syphs\",\n        \"syrah\",\n        \"syren\",\n        \"sysop\",\n        \"sythe\",\n        \"syver\",\n        \"taals\",\n        \"taata\",\n        \"taber\",\n        \"tabes\",\n        \"tabid\",\n        \"tabis\",\n        \"tabla\",\n        \"tabor\",\n        \"tabun\",\n        \"tabus\",\n        \"tacan\",\n        \"taces\",\n        \"tacet\",\n        \"tache\",\n        \"tacho\",\n        \"tachs\",\n        \"tacks\",\n        \"tacos\",\n        \"tacts\",\n        \"taels\",\n        \"tafia\",\n        \"taggy\",\n        \"tagma\",\n        \"tahas\",\n        \"tahrs\",\n        \"taiga\",\n        \"taigs\",\n        \"taiko\",\n        \"tails\",\n        \"tains\",\n        \"taira\",\n        \"taish\",\n        \"taits\",\n        \"tajes\",\n        \"takas\",\n        \"takes\",\n        \"takhi\",\n        \"takin\",\n        \"takis\",\n        \"takky\",\n        \"talak\",\n        \"talaq\",\n        \"talar\",\n        \"talas\",\n        \"talcs\",\n        \"talcy\",\n        \"talea\",\n        \"taler\",\n        \"tales\",\n        \"talks\",\n        \"talky\",\n        \"talls\",\n        \"talma\",\n        \"talpa\",\n        \"taluk\",\n        \"talus\",\n        \"tamal\",\n        \"tamed\",\n        \"tames\",\n        \"tamin\",\n        \"tamis\",\n        \"tammy\",\n        \"tamps\",\n        \"tanas\",\n        \"tanga\",\n        \"tangi\",\n        \"tangs\",\n        \"tanhs\",\n        \"tanka\",\n        \"tanks\",\n        \"tanky\",\n        \"tanna\",\n        \"tansy\",\n        \"tanti\",\n        \"tanto\",\n        \"tanty\",\n        \"tapas\",\n        \"taped\",\n        \"tapen\",\n        \"tapes\",\n        \"tapet\",\n        \"tapis\",\n        \"tappa\",\n        \"tapus\",\n        \"taras\",\n        \"tardo\",\n        \"tared\",\n        \"tares\",\n        \"targa\",\n        \"targe\",\n        \"tarns\",\n        \"taroc\",\n        \"tarok\",\n        \"taros\",\n        \"tarps\",\n        \"tarre\",\n        \"tarry\",\n        \"tarsi\",\n        \"tarts\",\n        \"tarty\",\n        \"tasar\",\n        \"tased\",\n        \"taser\",\n        \"tases\",\n        \"tasks\",\n        \"tassa\",\n        \"tasse\",\n        \"tasso\",\n        \"tatar\",\n        \"tater\",\n        \"tates\",\n        \"taths\",\n        \"tatie\",\n        \"tatou\",\n        \"tatts\",\n        \"tatus\",\n        \"taube\",\n        \"tauld\",\n        \"tauon\",\n        \"taupe\",\n        \"tauts\",\n        \"tavah\",\n        \"tavas\",\n        \"taver\",\n        \"tawai\",\n        \"tawas\",\n        \"tawed\",\n        \"tawer\",\n        \"tawie\",\n        \"tawse\",\n        \"tawts\",\n        \"taxed\",\n        \"taxer\",\n        \"taxes\",\n        \"taxis\",\n        \"taxol\",\n        \"taxon\",\n        \"taxor\",\n        \"taxus\",\n        \"tayra\",\n        \"tazza\",\n        \"tazze\",\n        \"teade\",\n        \"teads\",\n        \"teaed\",\n        \"teaks\",\n        \"teals\",\n        \"teams\",\n        \"tears\",\n        \"teats\",\n        \"teaze\",\n        \"techs\",\n        \"techy\",\n        \"tecta\",\n        \"teels\",\n        \"teems\",\n        \"teend\",\n        \"teene\",\n        \"teens\",\n        \"teeny\",\n        \"teers\",\n        \"teffs\",\n        \"teggs\",\n        \"tegua\",\n        \"tegus\",\n        \"tehrs\",\n        \"teiid\",\n        \"teils\",\n        \"teind\",\n        \"teins\",\n        \"telae\",\n        \"telco\",\n        \"teles\",\n        \"telex\",\n        \"telia\",\n        \"telic\",\n        \"tells\",\n        \"telly\",\n        \"teloi\",\n        \"telos\",\n        \"temed\",\n        \"temes\",\n        \"tempi\",\n        \"temps\",\n        \"tempt\",\n        \"temse\",\n        \"tench\",\n        \"tends\",\n        \"tendu\",\n        \"tenes\",\n        \"tenge\",\n        \"tenia\",\n        \"tenne\",\n        \"tenno\",\n        \"tenny\",\n        \"tenon\",\n        \"tents\",\n        \"tenty\",\n        \"tenue\",\n        \"tepal\",\n        \"tepas\",\n        \"tepoy\",\n        \"terai\",\n        \"teras\",\n        \"terce\",\n        \"terek\",\n        \"teres\",\n        \"terfe\",\n        \"terfs\",\n        \"terga\",\n        \"terms\",\n        \"terne\",\n        \"terns\",\n        \"terry\",\n        \"terts\",\n        \"tesla\",\n        \"testa\",\n        \"teste\",\n        \"tests\",\n        \"tetes\",\n        \"teths\",\n        \"tetra\",\n        \"tetri\",\n        \"teuch\",\n        \"teugh\",\n        \"tewed\",\n        \"tewel\",\n        \"tewit\",\n        \"texas\",\n        \"texes\",\n        \"texts\",\n        \"thack\",\n        \"thagi\",\n        \"thaim\",\n        \"thale\",\n        \"thali\",\n        \"thana\",\n        \"thane\",\n        \"thang\",\n        \"thans\",\n        \"thanx\",\n        \"tharm\",\n        \"thars\",\n        \"thaws\",\n        \"thawy\",\n        \"thebe\",\n        \"theca\",\n        \"theed\",\n        \"theek\",\n        \"thees\",\n        \"thegn\",\n        \"theic\",\n        \"thein\",\n        \"thelf\",\n        \"thema\",\n        \"thens\",\n        \"theow\",\n        \"therm\",\n        \"thesp\",\n        \"thete\",\n        \"thews\",\n        \"thewy\",\n        \"thigs\",\n        \"thilk\",\n        \"thill\",\n        \"thine\",\n        \"thins\",\n        \"thiol\",\n        \"thirl\",\n        \"thoft\",\n        \"thole\",\n        \"tholi\",\n        \"thoro\",\n        \"thorp\",\n        \"thous\",\n        \"thowl\",\n        \"thrae\",\n        \"thraw\",\n        \"thrid\",\n        \"thrip\",\n        \"throe\",\n        \"thuds\",\n        \"thugs\",\n        \"thuja\",\n        \"thunk\",\n        \"thurl\",\n        \"thuya\",\n        \"thymi\",\n        \"thymy\",\n        \"tians\",\n        \"tiars\",\n        \"tical\",\n        \"ticca\",\n        \"ticed\",\n        \"tices\",\n        \"tichy\",\n        \"ticks\",\n        \"ticky\",\n        \"tiddy\",\n        \"tided\",\n        \"tides\",\n        \"tiers\",\n        \"tiffs\",\n        \"tifos\",\n        \"tifts\",\n        \"tiges\",\n        \"tigon\",\n        \"tikas\",\n        \"tikes\",\n        \"tikis\",\n        \"tikka\",\n        \"tilak\",\n        \"tiled\",\n        \"tiler\",\n        \"tiles\",\n        \"tills\",\n        \"tilly\",\n        \"tilth\",\n        \"tilts\",\n        \"timbo\",\n        \"timed\",\n        \"times\",\n        \"timon\",\n        \"timps\",\n        \"tinas\",\n        \"tinct\",\n        \"tinds\",\n        \"tinea\",\n        \"tined\",\n        \"tines\",\n        \"tinge\",\n        \"tings\",\n        \"tinks\",\n        \"tinny\",\n        \"tints\",\n        \"tinty\",\n        \"tipis\",\n        \"tippy\",\n        \"tired\",\n        \"tires\",\n        \"tirls\",\n        \"tiros\",\n        \"tirrs\",\n        \"titch\",\n        \"titer\",\n        \"titis\",\n        \"titre\",\n        \"titty\",\n        \"titup\",\n        \"tiyin\",\n        \"tiyns\",\n        \"tizes\",\n        \"tizzy\",\n        \"toads\",\n        \"toady\",\n        \"toaze\",\n        \"tocks\",\n        \"tocky\",\n        \"tocos\",\n        \"todde\",\n        \"toeas\",\n        \"toffs\",\n        \"toffy\",\n        \"tofts\",\n        \"tofus\",\n        \"togae\",\n        \"togas\",\n        \"toged\",\n        \"toges\",\n        \"togue\",\n        \"tohos\",\n        \"toile\",\n        \"toils\",\n        \"toing\",\n        \"toise\",\n        \"toits\",\n        \"tokay\",\n        \"toked\",\n        \"toker\",\n        \"tokes\",\n        \"tokos\",\n        \"tolan\",\n        \"tolar\",\n        \"tolas\",\n        \"toled\",\n        \"toles\",\n        \"tolls\",\n        \"tolly\",\n        \"tolts\",\n        \"tolus\",\n        \"tolyl\",\n        \"toman\",\n        \"tombs\",\n        \"tomes\",\n        \"tomia\",\n        \"tommy\",\n        \"tomos\",\n        \"tondi\",\n        \"tondo\",\n        \"toned\",\n        \"toner\",\n        \"tones\",\n        \"toney\",\n        \"tongs\",\n        \"tonka\",\n        \"tonks\",\n        \"tonne\",\n        \"tonus\",\n        \"tools\",\n        \"tooms\",\n        \"toons\",\n        \"toots\",\n        \"toped\",\n        \"topee\",\n        \"topek\",\n        \"toper\",\n        \"topes\",\n        \"tophe\",\n        \"tophi\",\n        \"tophs\",\n        \"topis\",\n        \"topoi\",\n        \"topos\",\n        \"toppy\",\n        \"toque\",\n        \"torah\",\n        \"toran\",\n        \"toras\",\n        \"torcs\",\n        \"tores\",\n        \"toric\",\n        \"torii\",\n        \"toros\",\n        \"torot\",\n        \"torrs\",\n        \"torse\",\n        \"torsi\",\n        \"torsk\",\n        \"torta\",\n        \"torte\",\n        \"torts\",\n        \"tosas\",\n        \"tosed\",\n        \"toses\",\n        \"toshy\",\n        \"tossy\",\n        \"toted\",\n        \"toter\",\n        \"totes\",\n        \"totty\",\n        \"touks\",\n        \"touns\",\n        \"tours\",\n        \"touse\",\n        \"tousy\",\n        \"touts\",\n        \"touze\",\n        \"touzy\",\n        \"towed\",\n        \"towie\",\n        \"towns\",\n        \"towny\",\n        \"towse\",\n        \"towsy\",\n        \"towts\",\n        \"towze\",\n        \"towzy\",\n        \"toyed\",\n        \"toyer\",\n        \"toyon\",\n        \"toyos\",\n        \"tozed\",\n        \"tozes\",\n        \"tozie\",\n        \"trabs\",\n        \"trads\",\n        \"tragi\",\n        \"traik\",\n        \"trams\",\n        \"trank\",\n        \"tranq\",\n        \"trans\",\n        \"trant\",\n        \"trape\",\n        \"traps\",\n        \"trapt\",\n        \"trass\",\n        \"trats\",\n        \"tratt\",\n        \"trave\",\n        \"trayf\",\n        \"trays\",\n        \"treck\",\n        \"treed\",\n        \"treen\",\n        \"trees\",\n        \"trefa\",\n        \"treif\",\n        \"treks\",\n        \"trema\",\n        \"trems\",\n        \"tress\",\n        \"trest\",\n        \"trets\",\n        \"trews\",\n        \"treyf\",\n        \"treys\",\n        \"triac\",\n        \"tride\",\n        \"trier\",\n        \"tries\",\n        \"triff\",\n        \"trigo\",\n        \"trigs\",\n        \"trike\",\n        \"trild\",\n        \"trill\",\n        \"trims\",\n        \"trine\",\n        \"trins\",\n        \"triol\",\n        \"trior\",\n        \"trios\",\n        \"trips\",\n        \"tripy\",\n        \"trist\",\n        \"troad\",\n        \"troak\",\n        \"troat\",\n        \"trock\",\n        \"trode\",\n        \"trods\",\n        \"trogs\",\n        \"trois\",\n        \"troke\",\n        \"tromp\",\n        \"trona\",\n        \"tronc\",\n        \"trone\",\n        \"tronk\",\n        \"trons\",\n        \"trooz\",\n        \"troth\",\n        \"trots\",\n        \"trows\",\n        \"troys\",\n        \"trued\",\n        \"trues\",\n        \"trugo\",\n        \"trugs\",\n        \"trull\",\n        \"tryer\",\n        \"tryke\",\n        \"tryma\",\n        \"tryps\",\n        \"tsade\",\n        \"tsadi\",\n        \"tsars\",\n        \"tsked\",\n        \"tsuba\",\n        \"tsubo\",\n        \"tuans\",\n        \"tuart\",\n        \"tuath\",\n        \"tubae\",\n        \"tubar\",\n        \"tubas\",\n        \"tubby\",\n        \"tubed\",\n        \"tubes\",\n        \"tucks\",\n        \"tufas\",\n        \"tuffe\",\n        \"tuffs\",\n        \"tufts\",\n        \"tufty\",\n        \"tugra\",\n        \"tuile\",\n        \"tuina\",\n        \"tuism\",\n        \"tuktu\",\n        \"tules\",\n        \"tulpa\",\n        \"tulsi\",\n        \"tumid\",\n        \"tummy\",\n        \"tumps\",\n        \"tumpy\",\n        \"tunas\",\n        \"tunds\",\n        \"tuned\",\n        \"tuner\",\n        \"tunes\",\n        \"tungs\",\n        \"tunny\",\n        \"tupek\",\n        \"tupik\",\n        \"tuple\",\n        \"tuque\",\n        \"turds\",\n        \"turfs\",\n        \"turfy\",\n        \"turks\",\n        \"turme\",\n        \"turms\",\n        \"turns\",\n        \"turnt\",\n        \"turps\",\n        \"turrs\",\n        \"tushy\",\n        \"tusks\",\n        \"tusky\",\n        \"tutee\",\n        \"tutti\",\n        \"tutty\",\n        \"tutus\",\n        \"tuxes\",\n        \"tuyer\",\n        \"twaes\",\n        \"twain\",\n        \"twals\",\n        \"twank\",\n        \"twats\",\n        \"tways\",\n        \"tweel\",\n        \"tween\",\n        \"tweep\",\n        \"tweer\",\n        \"twerk\",\n        \"twerp\",\n        \"twier\",\n        \"twigs\",\n        \"twill\",\n        \"twilt\",\n        \"twink\",\n        \"twins\",\n        \"twiny\",\n        \"twire\",\n        \"twirp\",\n        \"twite\",\n        \"twits\",\n        \"twoer\",\n        \"twyer\",\n        \"tyees\",\n        \"tyers\",\n        \"tyiyn\",\n        \"tykes\",\n        \"tyler\",\n        \"tymps\",\n        \"tynde\",\n        \"tyned\",\n        \"tynes\",\n        \"typal\",\n        \"typed\",\n        \"types\",\n        \"typey\",\n        \"typic\",\n        \"typos\",\n        \"typps\",\n        \"typto\",\n        \"tyran\",\n        \"tyred\",\n        \"tyres\",\n        \"tyros\",\n        \"tythe\",\n        \"tzars\",\n        \"udals\",\n        \"udons\",\n        \"ugali\",\n        \"ugged\",\n        \"uhlan\",\n        \"uhuru\",\n        \"ukase\",\n        \"ulama\",\n        \"ulans\",\n        \"ulema\",\n        \"ulmin\",\n        \"ulnad\",\n        \"ulnae\",\n        \"ulnar\",\n        \"ulnas\",\n        \"ulpan\",\n        \"ulvas\",\n        \"ulyie\",\n        \"ulzie\",\n        \"umami\",\n        \"umbel\",\n        \"umber\",\n        \"umble\",\n        \"umbos\",\n        \"umbre\",\n        \"umiac\",\n        \"umiak\",\n        \"umiaq\",\n        \"ummah\",\n        \"ummas\",\n        \"ummed\",\n        \"umped\",\n        \"umphs\",\n        \"umpie\",\n        \"umpty\",\n        \"umrah\",\n        \"umras\",\n        \"unais\",\n        \"unapt\",\n        \"unarm\",\n        \"unary\",\n        \"unaus\",\n        \"unbag\",\n        \"unban\",\n        \"unbar\",\n        \"unbed\",\n        \"unbid\",\n        \"unbox\",\n        \"uncap\",\n        \"unces\",\n        \"uncia\",\n        \"uncos\",\n        \"uncoy\",\n        \"uncus\",\n        \"undam\",\n        \"undee\",\n        \"undos\",\n        \"undug\",\n        \"uneth\",\n        \"unfix\",\n        \"ungag\",\n        \"unget\",\n        \"ungod\",\n        \"ungot\",\n        \"ungum\",\n        \"unhat\",\n        \"unhip\",\n        \"unica\",\n        \"units\",\n        \"unjam\",\n        \"unked\",\n        \"unket\",\n        \"unkid\",\n        \"unlaw\",\n        \"unlay\",\n        \"unled\",\n        \"unlet\",\n        \"unlid\",\n        \"unman\",\n        \"unmew\",\n        \"unmix\",\n        \"unpay\",\n        \"unpeg\",\n        \"unpen\",\n        \"unpin\",\n        \"unred\",\n        \"unrid\",\n        \"unrig\",\n        \"unrip\",\n        \"unsaw\",\n        \"unsay\",\n        \"unsee\",\n        \"unsew\",\n        \"unsex\",\n        \"unsod\",\n        \"untax\",\n        \"untin\",\n        \"unwet\",\n        \"unwit\",\n        \"unwon\",\n        \"upbow\",\n        \"upbye\",\n        \"updos\",\n        \"updry\",\n        \"upend\",\n        \"upjet\",\n        \"uplay\",\n        \"upled\",\n        \"uplit\",\n        \"upped\",\n        \"upran\",\n        \"uprun\",\n        \"upsee\",\n        \"upsey\",\n        \"uptak\",\n        \"upter\",\n        \"uptie\",\n        \"uraei\",\n        \"urali\",\n        \"uraos\",\n        \"urare\",\n        \"urari\",\n        \"urase\",\n        \"urate\",\n        \"urbex\",\n        \"urbia\",\n        \"urdee\",\n        \"ureal\",\n        \"ureas\",\n        \"uredo\",\n        \"ureic\",\n        \"urena\",\n        \"urent\",\n        \"urged\",\n        \"urger\",\n        \"urges\",\n        \"urial\",\n        \"urite\",\n        \"urman\",\n        \"urnal\",\n        \"urned\",\n        \"urped\",\n        \"ursae\",\n        \"ursid\",\n        \"urson\",\n        \"urubu\",\n        \"urvas\",\n        \"users\",\n        \"usnea\",\n        \"usque\",\n        \"usure\",\n        \"usury\",\n        \"uteri\",\n        \"uveal\",\n        \"uveas\",\n        \"uvula\",\n        \"vacua\",\n        \"vaded\",\n        \"vades\",\n        \"vagal\",\n        \"vagus\",\n        \"vails\",\n        \"vaire\",\n        \"vairs\",\n        \"vairy\",\n        \"vakas\",\n        \"vakil\",\n        \"vales\",\n        \"valis\",\n        \"valse\",\n        \"vamps\",\n        \"vampy\",\n        \"vanda\",\n        \"vaned\",\n        \"vanes\",\n        \"vangs\",\n        \"vants\",\n        \"vaped\",\n        \"vaper\",\n        \"vapes\",\n        \"varan\",\n        \"varas\",\n        \"vardy\",\n        \"varec\",\n        \"vares\",\n        \"varia\",\n        \"varix\",\n        \"varna\",\n        \"varus\",\n        \"varve\",\n        \"vasal\",\n        \"vases\",\n        \"vasts\",\n        \"vasty\",\n        \"vatic\",\n        \"vatus\",\n        \"vauch\",\n        \"vaute\",\n        \"vauts\",\n        \"vawte\",\n        \"vaxes\",\n        \"veale\",\n        \"veals\",\n        \"vealy\",\n        \"veena\",\n        \"veeps\",\n        \"veers\",\n        \"veery\",\n        \"vegas\",\n        \"veges\",\n        \"vegie\",\n        \"vegos\",\n        \"vehme\",\n        \"veils\",\n        \"veily\",\n        \"veins\",\n        \"veiny\",\n        \"velar\",\n        \"velds\",\n        \"veldt\",\n        \"veles\",\n        \"vells\",\n        \"velum\",\n        \"venae\",\n        \"venal\",\n        \"vends\",\n        \"vendu\",\n        \"veney\",\n        \"venge\",\n        \"venin\",\n        \"vents\",\n        \"venus\",\n        \"verbs\",\n        \"verra\",\n        \"verry\",\n        \"verst\",\n        \"verts\",\n        \"vertu\",\n        \"vespa\",\n        \"vesta\",\n        \"vests\",\n        \"vetch\",\n        \"vexed\",\n        \"vexer\",\n        \"vexes\",\n        \"vexil\",\n        \"vezir\",\n        \"vials\",\n        \"viand\",\n        \"vibes\",\n        \"vibex\",\n        \"vibey\",\n        \"viced\",\n        \"vices\",\n        \"vichy\",\n        \"viers\",\n        \"views\",\n        \"viewy\",\n        \"vifda\",\n        \"viffs\",\n        \"vigas\",\n        \"vigia\",\n        \"vilde\",\n        \"viler\",\n        \"villi\",\n        \"vills\",\n        \"vimen\",\n        \"vinal\",\n        \"vinas\",\n        \"vinca\",\n        \"vined\",\n        \"viner\",\n        \"vines\",\n        \"vinew\",\n        \"vinic\",\n        \"vinos\",\n        \"vints\",\n        \"viold\",\n        \"viols\",\n        \"vired\",\n        \"vireo\",\n        \"vires\",\n        \"virga\",\n        \"virge\",\n        \"virid\",\n        \"virls\",\n        \"virtu\",\n        \"visas\",\n        \"vised\",\n        \"vises\",\n        \"visie\",\n        \"visne\",\n        \"vison\",\n        \"visto\",\n        \"vitae\",\n        \"vitas\",\n        \"vitex\",\n        \"vitro\",\n        \"vitta\",\n        \"vivas\",\n        \"vivat\",\n        \"vivda\",\n        \"viver\",\n        \"vives\",\n        \"vizir\",\n        \"vizor\",\n        \"vleis\",\n        \"vlies\",\n        \"vlogs\",\n        \"voars\",\n        \"vocab\",\n        \"voces\",\n        \"voddy\",\n        \"vodou\",\n        \"vodun\",\n        \"voema\",\n        \"vogie\",\n        \"voids\",\n        \"voile\",\n        \"voips\",\n        \"volae\",\n        \"volar\",\n        \"voled\",\n        \"voles\",\n        \"volet\",\n        \"volks\",\n        \"volta\",\n        \"volte\",\n        \"volti\",\n        \"volts\",\n        \"volva\",\n        \"volve\",\n        \"vomer\",\n        \"voted\",\n        \"votes\",\n        \"vouge\",\n        \"voulu\",\n        \"vowed\",\n        \"vower\",\n        \"voxel\",\n        \"vozhd\",\n        \"vraic\",\n        \"vrils\",\n        \"vroom\",\n        \"vrous\",\n        \"vrouw\",\n        \"vrows\",\n        \"vuggs\",\n        \"vuggy\",\n        \"vughs\",\n        \"vughy\",\n        \"vulgo\",\n        \"vulns\",\n        \"vulva\",\n        \"vutty\",\n        \"waacs\",\n        \"wacke\",\n        \"wacko\",\n        \"wacks\",\n        \"wadds\",\n        \"waddy\",\n        \"waded\",\n        \"wader\",\n        \"wades\",\n        \"wadge\",\n        \"wadis\",\n        \"wadts\",\n        \"waffs\",\n        \"wafts\",\n        \"waged\",\n        \"wages\",\n        \"wagga\",\n        \"wagyu\",\n        \"wahoo\",\n        \"waide\",\n        \"waifs\",\n        \"waift\",\n        \"wails\",\n        \"wains\",\n        \"wairs\",\n        \"waite\",\n        \"waits\",\n        \"wakas\",\n        \"waked\",\n        \"waken\",\n        \"waker\",\n        \"wakes\",\n        \"wakfs\",\n        \"waldo\",\n        \"walds\",\n        \"waled\",\n        \"waler\",\n        \"wales\",\n        \"walie\",\n        \"walis\",\n        \"walks\",\n        \"walla\",\n        \"walls\",\n        \"wally\",\n        \"walty\",\n        \"wamed\",\n        \"wames\",\n        \"wamus\",\n        \"wands\",\n        \"waned\",\n        \"wanes\",\n        \"waney\",\n        \"wangs\",\n        \"wanks\",\n        \"wanky\",\n        \"wanle\",\n        \"wanly\",\n        \"wanna\",\n        \"wants\",\n        \"wanty\",\n        \"wanze\",\n        \"waqfs\",\n        \"warbs\",\n        \"warby\",\n        \"wards\",\n        \"wared\",\n        \"wares\",\n        \"warez\",\n        \"warks\",\n        \"warms\",\n        \"warns\",\n        \"warps\",\n        \"warre\",\n        \"warst\",\n        \"warts\",\n        \"wases\",\n        \"washy\",\n        \"wasms\",\n        \"wasps\",\n        \"waspy\",\n        \"wasts\",\n        \"watap\",\n        \"watts\",\n        \"wauff\",\n        \"waugh\",\n        \"wauks\",\n        \"waulk\",\n        \"wauls\",\n        \"waurs\",\n        \"waved\",\n        \"waves\",\n        \"wavey\",\n        \"wawas\",\n        \"wawes\",\n        \"wawls\",\n        \"waxed\",\n        \"waxer\",\n        \"waxes\",\n        \"wayed\",\n        \"wazir\",\n        \"wazoo\",\n        \"weald\",\n        \"weals\",\n        \"weamb\",\n        \"weans\",\n        \"wears\",\n        \"webby\",\n        \"weber\",\n        \"wecht\",\n        \"wedel\",\n        \"wedgy\",\n        \"weeds\",\n        \"weeke\",\n        \"weeks\",\n        \"weels\",\n        \"weems\",\n        \"weens\",\n        \"weeny\",\n        \"weeps\",\n        \"weepy\",\n        \"weest\",\n        \"weete\",\n        \"weets\",\n        \"wefte\",\n        \"wefts\",\n        \"weids\",\n        \"weigh\",\n        \"weils\",\n        \"weirs\",\n        \"weise\",\n        \"weize\",\n        \"wekas\",\n        \"welds\",\n        \"welke\",\n        \"welks\",\n        \"welkt\",\n        \"wells\",\n        \"welly\",\n        \"welts\",\n        \"wembs\",\n        \"wends\",\n        \"wenge\",\n        \"wenny\",\n        \"wents\",\n        \"weros\",\n        \"wersh\",\n        \"wests\",\n        \"wetas\",\n        \"wetly\",\n        \"wexed\",\n        \"wexes\",\n        \"whamo\",\n        \"whams\",\n        \"whang\",\n        \"whaps\",\n        \"whare\",\n        \"whata\",\n        \"whats\",\n        \"whaup\",\n        \"whaur\",\n        \"wheal\",\n        \"whear\",\n        \"wheen\",\n        \"wheep\",\n        \"wheft\",\n        \"whelk\",\n        \"whelm\",\n        \"whens\",\n        \"whets\",\n        \"whews\",\n        \"wheys\",\n        \"whids\",\n        \"whift\",\n        \"whigs\",\n        \"whilk\",\n        \"whims\",\n        \"whins\",\n        \"whios\",\n        \"whips\",\n        \"whipt\",\n        \"whirr\",\n        \"whirs\",\n        \"whish\",\n        \"whiss\",\n        \"whist\",\n        \"whits\",\n        \"whity\",\n        \"whizz\",\n        \"whomp\",\n        \"whoof\",\n        \"whoot\",\n        \"whops\",\n        \"whore\",\n        \"whorl\",\n        \"whort\",\n        \"whoso\",\n        \"whows\",\n        \"whump\",\n        \"whups\",\n        \"whyda\",\n        \"wicca\",\n        \"wicks\",\n        \"wicky\",\n        \"widdy\",\n        \"wides\",\n        \"wiels\",\n        \"wifed\",\n        \"wifes\",\n        \"wifey\",\n        \"wifie\",\n        \"wifty\",\n        \"wigan\",\n        \"wigga\",\n        \"wiggy\",\n        \"wikis\",\n        \"wilco\",\n        \"wilds\",\n        \"wiled\",\n        \"wiles\",\n        \"wilga\",\n        \"wilis\",\n        \"wilja\",\n        \"wills\",\n        \"wilts\",\n        \"wimps\",\n        \"winds\",\n        \"wined\",\n        \"wines\",\n        \"winey\",\n        \"winge\",\n        \"wings\",\n        \"wingy\",\n        \"winks\",\n        \"winna\",\n        \"winns\",\n        \"winos\",\n        \"winze\",\n        \"wiped\",\n        \"wiper\",\n        \"wipes\",\n        \"wired\",\n        \"wirer\",\n        \"wires\",\n        \"wirra\",\n        \"wised\",\n        \"wises\",\n        \"wisha\",\n        \"wisht\",\n        \"wisps\",\n        \"wists\",\n        \"witan\",\n        \"wited\",\n        \"wites\",\n        \"withe\",\n        \"withs\",\n        \"withy\",\n        \"wived\",\n        \"wiver\",\n        \"wives\",\n        \"wizen\",\n        \"wizes\",\n        \"woads\",\n        \"woald\",\n        \"wocks\",\n        \"wodge\",\n        \"woful\",\n        \"wojus\",\n        \"woker\",\n        \"wokka\",\n        \"wolds\",\n        \"wolfs\",\n        \"wolly\",\n        \"wolve\",\n        \"wombs\",\n        \"womby\",\n        \"womyn\",\n        \"wonga\",\n        \"wongi\",\n        \"wonks\",\n        \"wonky\",\n        \"wonts\",\n        \"woods\",\n        \"wooed\",\n        \"woofs\",\n        \"woofy\",\n        \"woold\",\n        \"wools\",\n        \"woons\",\n        \"woops\",\n        \"woopy\",\n        \"woose\",\n        \"woosh\",\n        \"wootz\",\n        \"words\",\n        \"works\",\n        \"worms\",\n        \"wormy\",\n        \"worts\",\n        \"wowed\",\n        \"wowee\",\n        \"woxen\",\n        \"wrang\",\n        \"wraps\",\n        \"wrapt\",\n        \"wrast\",\n        \"wrate\",\n        \"wrawl\",\n        \"wrens\",\n        \"wrick\",\n        \"wried\",\n        \"wrier\",\n        \"wries\",\n        \"writs\",\n        \"wroke\",\n        \"wroot\",\n        \"wroth\",\n        \"wryer\",\n        \"wuddy\",\n        \"wudus\",\n        \"wulls\",\n        \"wurst\",\n        \"wuses\",\n        \"wushu\",\n        \"wussy\",\n        \"wuxia\",\n        \"wyled\",\n        \"wyles\",\n        \"wynds\",\n        \"wynns\",\n        \"wyted\",\n        \"wytes\",\n        \"xebec\",\n        \"xenia\",\n        \"xenic\",\n        \"xenon\",\n        \"xeric\",\n        \"xerox\",\n        \"xerus\",\n        \"xoana\",\n        \"xrays\",\n        \"xylan\",\n        \"xylem\",\n        \"xylic\",\n        \"xylol\",\n        \"xylyl\",\n        \"xysti\",\n        \"xysts\",\n        \"yaars\",\n        \"yabas\",\n        \"yabba\",\n        \"yabby\",\n        \"yacca\",\n        \"yacka\",\n        \"yacks\",\n        \"yaffs\",\n        \"yager\",\n        \"yages\",\n        \"yagis\",\n        \"yahoo\",\n        \"yaird\",\n        \"yakka\",\n        \"yakow\",\n        \"yales\",\n        \"yamen\",\n        \"yampy\",\n        \"yamun\",\n        \"yangs\",\n        \"yanks\",\n        \"yapok\",\n        \"yapon\",\n        \"yapps\",\n        \"yappy\",\n        \"yarak\",\n        \"yarco\",\n        \"yards\",\n        \"yarer\",\n        \"yarfa\",\n        \"yarks\",\n        \"yarns\",\n        \"yarrs\",\n        \"yarta\",\n        \"yarto\",\n        \"yates\",\n        \"yauds\",\n        \"yauld\",\n        \"yaups\",\n        \"yawed\",\n        \"yawey\",\n        \"yawls\",\n        \"yawns\",\n        \"yawny\",\n        \"yawps\",\n        \"ybore\",\n        \"yclad\",\n        \"ycled\",\n        \"ycond\",\n        \"ydrad\",\n        \"ydred\",\n        \"yeads\",\n        \"yeahs\",\n        \"yealm\",\n        \"yeans\",\n        \"yeard\",\n        \"years\",\n        \"yecch\",\n        \"yechs\",\n        \"yechy\",\n        \"yedes\",\n        \"yeeds\",\n        \"yeesh\",\n        \"yeggs\",\n        \"yelks\",\n        \"yells\",\n        \"yelms\",\n        \"yelps\",\n        \"yelts\",\n        \"yenta\",\n        \"yente\",\n        \"yerba\",\n        \"yerds\",\n        \"yerks\",\n        \"yeses\",\n        \"yesks\",\n        \"yests\",\n        \"yesty\",\n        \"yetis\",\n        \"yetts\",\n        \"yeuks\",\n        \"yeuky\",\n        \"yeven\",\n        \"yeves\",\n        \"yewen\",\n        \"yexed\",\n        \"yexes\",\n        \"yfere\",\n        \"yiked\",\n        \"yikes\",\n        \"yills\",\n        \"yince\",\n        \"yipes\",\n        \"yippy\",\n        \"yirds\",\n        \"yirks\",\n        \"yirrs\",\n        \"yirth\",\n        \"yites\",\n        \"yitie\",\n        \"ylems\",\n        \"ylike\",\n        \"ylkes\",\n        \"ymolt\",\n        \"ympes\",\n        \"yobbo\",\n        \"yobby\",\n        \"yocks\",\n        \"yodel\",\n        \"yodhs\",\n        \"yodle\",\n        \"yogas\",\n        \"yogee\",\n        \"yoghs\",\n        \"yogic\",\n        \"yogin\",\n        \"yogis\",\n        \"yoick\",\n        \"yojan\",\n        \"yoked\",\n        \"yokel\",\n        \"yoker\",\n        \"yokes\",\n        \"yokul\",\n        \"yolks\",\n        \"yolky\",\n        \"yomim\",\n        \"yomps\",\n        \"yonic\",\n        \"yonis\",\n        \"yonks\",\n        \"yoofs\",\n        \"yoops\",\n        \"yores\",\n        \"yorks\",\n        \"yorps\",\n        \"youks\",\n        \"yourn\",\n        \"yours\",\n        \"yourt\",\n        \"youse\",\n        \"yowed\",\n        \"yowes\",\n        \"yowie\",\n        \"yowls\",\n        \"yowza\",\n        \"yrapt\",\n        \"yrent\",\n        \"yrivd\",\n        \"yrneh\",\n        \"ysame\",\n        \"ytost\",\n        \"yuans\",\n        \"yucas\",\n        \"yucca\",\n        \"yucch\",\n        \"yucko\",\n        \"yucks\",\n        \"yucky\",\n        \"yufts\",\n        \"yugas\",\n        \"yuked\",\n        \"yukes\",\n        \"yukky\",\n        \"yukos\",\n        \"yulan\",\n        \"yules\",\n        \"yummo\",\n        \"yummy\",\n        \"yumps\",\n        \"yupon\",\n        \"yuppy\",\n        \"yurta\",\n        \"yurts\",\n        \"yuzus\",\n        \"zabra\",\n        \"zacks\",\n        \"zaida\",\n        \"zaidy\",\n        \"zaire\",\n        \"zakat\",\n        \"zaman\",\n        \"zambo\",\n        \"zamia\",\n        \"zanja\",\n        \"zante\",\n        \"zanza\",\n        \"zanze\",\n        \"zappy\",\n        \"zarfs\",\n        \"zaris\",\n        \"zatis\",\n        \"zaxes\",\n        \"zayin\",\n        \"zazen\",\n        \"zeals\",\n        \"zebec\",\n        \"zebub\",\n        \"zebus\",\n        \"zedas\",\n        \"zeins\",\n        \"zendo\",\n        \"zerda\",\n        \"zerks\",\n        \"zeros\",\n        \"zests\",\n        \"zetas\",\n        \"zexes\",\n        \"zezes\",\n        \"zhomo\",\n        \"zibet\",\n        \"ziffs\",\n        \"zigan\",\n        \"zilas\",\n        \"zilch\",\n        \"zilla\",\n        \"zills\",\n        \"zimbi\",\n        \"zimbs\",\n        \"zinco\",\n        \"zincs\",\n        \"zincy\",\n        \"zineb\",\n        \"zines\",\n        \"zings\",\n        \"zingy\",\n        \"zinke\",\n        \"zinky\",\n        \"zippo\",\n        \"zippy\",\n        \"ziram\",\n        \"zitis\",\n        \"zizel\",\n        \"zizit\",\n        \"zlote\",\n        \"zloty\",\n        \"zoaea\",\n        \"zobos\",\n        \"zobus\",\n        \"zocco\",\n        \"zoeae\",\n        \"zoeal\",\n        \"zoeas\",\n        \"zoism\",\n        \"zoist\",\n        \"zombi\",\n        \"zonae\",\n        \"zonda\",\n        \"zoned\",\n        \"zoner\",\n        \"zones\",\n        \"zonks\",\n        \"zooea\",\n        \"zooey\",\n        \"zooid\",\n        \"zooks\",\n        \"zooms\",\n        \"zoons\",\n        \"zooty\",\n        \"zoppa\",\n        \"zoppo\",\n        \"zoril\",\n        \"zoris\",\n        \"zorro\",\n        \"zouks\",\n        \"zowee\",\n        \"zowie\",\n        \"zulus\",\n        \"zupan\",\n        \"zupas\",\n        \"zuppa\",\n        \"zurfs\",\n        \"zuzim\",\n        \"zygal\",\n        \"zygon\",\n        \"zymes\",\n        \"zymic\"\n    ],\n    \"depart\": [\n        \"adieu\",\n        \"adios\",\n        \"aloha\",\n        \"later\",\n        \"leave\",\n        \"envoi\",\n        \"finis\",\n        \"peace\"\n    ]\n};\nexport default words;\n","import seedrandom from \"seedrandom\";\nimport { GameMode, ms } from \"./enums\";\nimport wordList from \"./words_5\";\nexport const ROWS = 6;\nexport const COLS = 5;\nexport const words = Object.assign(Object.assign({}, wordList), { contains: (word) => {\n        return wordList.words.includes(word) || wordList.valid.includes(word) || wordList.depart.includes(word);\n    } });\nexport function checkHardMode(board, row) {\n    for (let i = 0; i < COLS; ++i) {\n        if (board.state[row - 1][i] === \"🟩\" && board.words[row - 1][i] !== board.words[row][i]) {\n            return { pos: i, char: board.words[row - 1][i], type: \"🟩\" };\n        }\n    }\n    for (let i = 0; i < COLS; ++i) {\n        if (board.state[row - 1][i] === \"🟨\" && !board.words[row].includes(board.words[row - 1][i])) {\n            return { pos: i, char: board.words[row - 1][i], type: \"🟨\" };\n        }\n    }\n    return { pos: -1, char: \"\", type: \"⬛\" };\n}\nclass Tile {\n    constructor() {\n        this.notSet = new Set();\n    }\n    not(char) {\n        this.notSet.add(char);\n    }\n}\nclass WordData {\n    constructor() {\n        this.notSet = new Set();\n        this.letterCounts = new Map();\n        this.word = [];\n        for (let col = 0; col < COLS; ++col) {\n            this.word.push(new Tile());\n        }\n    }\n    confirmCount(char) {\n        let c = this.letterCounts.get(char);\n        if (!c) {\n            this.not(char);\n        }\n        else {\n            c[1] = true;\n        }\n    }\n    countConfirmed(char) {\n        const val = this.letterCounts.get(char);\n        return val ? val[1] : false;\n    }\n    setCount(char, count) {\n        let c = this.letterCounts.get(char);\n        if (!c) {\n            this.letterCounts.set(char, [count, false]);\n        }\n        else {\n            c[0] = count;\n        }\n    }\n    incrementCount(char) {\n        ++this.letterCounts.get(char)[0];\n    }\n    not(char) {\n        this.notSet.add(char);\n    }\n    inGlobalNotList(char) {\n        return this.notSet.has(char);\n    }\n    lettersNotAt(pos) {\n        return new Set([...this.notSet, ...this.word[pos].notSet]);\n    }\n}\nexport function getRowData(n, board) {\n    const wd = new WordData();\n    for (let row = 0; row < n; ++row) {\n        const occured = new Set();\n        for (let col = 0; col < COLS; ++col) {\n            const state = board.state[row][col];\n            const char = board.words[row][col];\n            if (state === \"⬛\") {\n                wd.confirmCount(char);\n                // if char isn't in the global not list add it to the not list for that position\n                if (!wd.inGlobalNotList(char)) {\n                    wd.word[col].not(char);\n                }\n                continue;\n            }\n            // If this isn't the first time this letter has occured in this row\n            if (occured.has(char)) {\n                wd.incrementCount(char);\n            }\n            else if (!wd.countConfirmed(char)) {\n                occured.add(char);\n                wd.setCount(char, 1);\n            }\n            if (state === \"🟩\") {\n                wd.word[col].value = char;\n            }\n            else { // if (state === \"🟨\")\n                wd.word[col].not(char);\n            }\n        }\n    }\n    let exp = \"\";\n    for (let pos = 0; pos < wd.word.length; ++pos) {\n        exp += wd.word[pos].value ? wd.word[pos].value : `[^${[...wd.lettersNotAt(pos)].join(\" \")}]`;\n    }\n    return (word) => {\n        if (new RegExp(exp).test(word)) {\n            const chars = word.split(\"\");\n            for (const e of wd.letterCounts) {\n                const occurences = countOccurences(chars, e[0]);\n                if (!occurences || (e[1][1] && occurences !== e[1][0]))\n                    return false;\n            }\n            return true;\n        }\n        return false;\n    };\n}\nfunction countOccurences(arr, val) {\n    return arr.reduce((count, v) => v === val ? count + 1 : count, 0);\n}\nexport function getState(word, guess) {\n    const charArr = word.split(\"\");\n    const result = Array(5).fill(\"⬛\");\n    for (let i = 0; i < word.length; ++i) {\n        if (charArr[i] === guess.charAt(i)) {\n            result[i] = \"🟩\";\n            charArr[i] = \"$\";\n        }\n    }\n    for (let i = 0; i < word.length; ++i) {\n        const pos = charArr.indexOf(guess[i]);\n        if (result[i] !== \"🟩\" && pos >= 0) {\n            charArr[pos] = \"$\";\n            result[i] = \"🟨\";\n        }\n    }\n    return result;\n}\nexport function contractNum(n) {\n    switch (n % 10) {\n        case 1: return `${n}st`;\n        case 2: return `${n}nd`;\n        case 3: return `${n}rd`;\n        default: return `${n}th`;\n    }\n}\nexport const keys = [\"qwertyuiop\", \"asdfghjkl\", \"zxcvbnm\"];\nexport function newSeed(mode) {\n    const now = Date.now();\n    switch (mode) {\n        case GameMode.daily:\n            // Adds time zome offset to UTC time, calculates how many days that falls after 1/1/1970\n            // and returns the unix time for the beginning of that day.\n            return Date.UTC(1970, 0, 1 + Math.floor((now - (new Date().getTimezoneOffset() * ms.MINUTE)) / ms.DAY));\n        case GameMode.hourly:\n            return now - (now % ms.HOUR);\n        // case GameMode.minutely:\n        // \treturn now - (now % ms.MINUTE);\n        case GameMode.infinite:\n            return now - (now % ms.SECOND);\n        case GameMode.final:\n            return now - (now % ms.SECOND);\n    }\n}\nexport const modeData = {\n    default: GameMode.daily,\n    modes: [\n        {\n            name: \"Daily\",\n            unit: ms.DAY,\n            start: 1642370400000,\n            seed: newSeed(GameMode.daily),\n            historical: false,\n            streak: true,\n            useTimeZone: true,\n        },\n        {\n            name: \"Hourly\",\n            unit: ms.HOUR,\n            start: 1642528800000,\n            seed: newSeed(GameMode.hourly),\n            historical: false,\n            icon: \"m50,7h100v33c0,40 -35,40 -35,60c0,20 35,20 35,60v33h-100v-33c0,-40 35,-40 35,-60c0,-20 -35,-20 -35,-60z\",\n            streak: true,\n        },\n        {\n            name: \"Infinite\",\n            unit: ms.SECOND,\n            start: 1642428600000,\n            seed: newSeed(GameMode.infinite),\n            historical: false,\n            icon: \"m7,100c0,-50 68,-50 93,0c25,50 93,50 93,0c0,-50 -68,-50 -93,0c-25,50 -93,50 -93,0z\",\n        },\n        {\n            name: \"Final\",\n            unit: ms.SECOND,\n            start: 840456000000,\n            seed: newSeed(GameMode.final),\n            historical: false,\n            // Icon created by Gan Khoon Lay.\n            icon: \"M179.615,47.294c-1.74-1.711-4.002-3.123-6.61-4.057c-6.858-3.334-30.569-13.958-58.205-14.043   c-7.788,0-15.904,0.871-24.003,3.093c-4.263,1.169-6.769,5.57-5.6,9.832c1.169,4.26,5.572,6.766,9.834,5.597   c6.489-1.782,13.173-2.523,19.769-2.523c1.205-0.001,2.405,0.032,3.602,0.079c5.416-2.905,11.373-4.448,17.441-4.448h0.134   c6.116,0.021,12.132,1.406,18.263,4.169c1.514,0.682,3.032,1.425,4.564,2.28c5.043,2.84,8.347,5.656,9.238,6.45   c1.659,1.503,2.727,3.436,3.131,5.558c0.087,0.457,0.153,0.919,0.177,1.392c0.132,2.669-0.783,5.228-2.578,7.207   c-1.892,2.088-4.593,3.284-7.411,3.284c-2.486,0-4.87-0.919-6.716-2.59l-0.04-0.034l-0.143-0.119   c-0.253-0.213-0.622-0.511-1.115-0.883c-0.926-0.696-2.431-1.754-4.336-2.825c-4.353-2.471-9.063-3.886-12.931-3.886   c-0.007,0-0.013,0.001-0.019,0.001c-5.432,5.904-9.77,11.931-13.86,19.293c-3.229,0.123-6.461,0.24-9.643,0.331   c-1.812,1.642-4.18,2.607-6.707,2.607c-1.648,0-3.289-0.417-4.749-1.205c-0.647-0.349-1.239-0.768-1.783-1.235   c-7.407-0.072-13.96-0.527-18.51-1.617c-2.505-0.585-4.365-1.387-5.35-2.15c-0.986-0.816-1.133-1.197-1.176-1.99   c-0.002-0.11,0.007-0.24,0.028-0.396c0.049-0.419,0.076-0.816,0.076-1.225c0.036-2.69-1.327-5.122-3.206-6.668   c-2.83-2.358-6.622-3.481-10.934-4.242c-4.314-0.731-9.18-0.985-14.04-0.985c-13.293,0.002-26.555,1.918-26.632,1.927   c-1.642,0.236-2.778,1.758-2.543,3.397c0.236,1.64,1.757,2.777,3.398,2.543l-0.003-0.002c0.009,0,3.222-0.463,8.085-0.931   c4.858-0.468,11.33-0.936,17.694-0.934c6.186-0.008,12.305,0.463,16.523,1.671c2.107,0.589,3.699,1.375,4.561,2.124   c0.861,0.787,1.062,1.24,1.096,2.099c0.002,0.134-0.009,0.294-0.03,0.479c-0.047,0.349-0.074,0.74-0.074,1.142   c-0.045,2.773,1.488,5.271,3.549,6.77c3.102,2.299,7.289,3.354,12.359,4.078c5.067,0.691,11.029,0.919,17.451,0.921   c5.553-0.001,11.454-0.174,17.359-0.387c-1.174,2.379-2.346,4.896-3.538,7.587c-1.015,2.86-1.542,5.43-1.682,7.751   c1.038,0.016,2.084,0.024,3.137,0.024h0.257c2.297,0,4.547-0.042,6.75-0.117c7.35-0.248,14.125-0.902,19.882-1.935   c0.694-0.123,1.373-0.255,2.044-0.391c3.616-0.735,6.867-1.66,9.574-2.717c2.455-3.34,5.053-6.559,7.65-9.623   c1.342,0.358,2.316,0.786,2.797,1.133c0.604,0.494,0.416,0.396,0.461,0.506c0,0.025,0,0.032,0.001,0.053   c-0.084,1.82-0.756,3.373-2.192,4.906c-0.418,0.446-0.891,0.89-1.443,1.338c-2.156,1.736-5.375,3.268-9.305,4.528   c-1.783,0.572-3.712,1.088-5.757,1.542c-1.128,0.25-2.285,0.483-3.478,0.694c-6.383,1.146-13.616,1.772-20.959,1.99   c-2.005,0.059-4.017,0.094-6.023,0.094c-1.141,0.002-2.279-0.009-3.415-0.026c-15.209-0.234-29.685-2.116-36.499-4.358   c-5.938-1.931-11.156-2.726-15.884-2.724c-8.996,0-16.019,2.857-22.842,5.469c-6.862,2.628-13.554,5.064-22.588,5.071   c-3.655,0-7.705-0.404-12.315-1.394c-1.62-0.349-3.217,0.683-3.566,2.3c-0.349,1.621,0.683,3.217,2.303,3.566   c4.99,1.072,9.479,1.529,13.578,1.529c0.012,0,0.023,0,0.034,0c10.144,0,17.821-2.831,24.701-5.469   c6.925-2.662,13.018-5.073,20.694-5.073c4.056,0.002,8.604,0.67,14.029,2.433c8.209,2.641,23.474,4.495,39.663,4.661   c0.701,0.007,1.401,0.016,2.105,0.017c1.231,0,2.466-0.015,3.699-0.036c9.735-0.17,19.455-1.012,27.815-2.839   c1.285-0.28,2.535-0.585,3.75-0.914c0.323-0.087,0.652-0.171,0.97-0.262c5.144-1.48,9.605-3.402,13.017-6.096   c0.75-0.585,1.44-1.231,2.078-1.917c2.254-2.422,3.737-5.437,3.827-8.873c0.001-0.023-0.005-0.045-0.005-0.069   c0.001-0.034,0.009-0.066,0.008-0.1c-0.003-0.038-0.003-0.038-0.003-0.038c0.045-2.296-1.371-4.344-3.029-5.429   c-0.623-0.421-1.288-0.781-1.995-1.093c2.931-3.313,5.753-6.401,8.235-9.197C183.072,65.631,185.888,53.462,179.615,47.294z M119.913,111.587c-0.938,0.012-1.859,0.02-2.736,0.021c-0.362-0.001-0.724-0.006-1.086-0.008   c0.643,1.076,1.392,2.065,2.217,2.978c-1.325,2.312-2.935,4.764-4.879,7.142c-3.467,4.275-7.872,8.308-13.472,11.283   c-5.62,2.967-12.462,5.003-21.563,5.022c-5.734,0-12.376-0.842-20.069-2.941c-6.659-1.819-13.531,2.107-15.351,8.767   c-1.818,6.659,2.106,13.534,8.768,15.352c9.584,2.616,18.462,3.822,26.652,3.822c13.41,0.021,24.938-3.305,34.167-8.416   c12.779-7.064,21.059-17.104,26.315-25.7c4.476,6.495,8.119,14.648,8.073,23.148c-0.074,7.521-2.42,16.005-11.394,26.559   c-4.503,5.234-3.91,13.128,1.324,17.628c2.36,2.03,5.261,3.024,8.147,3.024c3.515,0.001,7.009-1.474,9.482-4.347   c12.26-14.129,17.515-29.246,17.44-42.864c0-8.561-1.944-16.362-4.707-23.09c-3.708-8.989-8.814-16.156-13.34-21.47   c-2.089,0.594-4.262,1.103-6.479,1.544C138.085,110.896,127.961,111.482,119.913,111.587z M102.05,80.093c0.405,0.219,0.823,0.386,1.245,0.529c0.838,0.284,1.698,0.436,2.553,0.436c0.949,0,1.884-0.184,2.768-0.509   c1.764-0.648,3.313-1.903,4.277-3.686c4.181-7.725,8.44-12.166,12.255-14.694c3.832-2.514,7.297-3.317,10.82-3.341   c0.629-0.004,1.261,0.025,1.893,0.082c4.383,0.393,8.76,2.148,12.129,4.061c1.923,1.08,3.503,2.175,4.56,2.971   c0.527,0.397,0.925,0.719,1.172,0.925c0.123,0.102,0.208,0.177,0.253,0.215l0.013,0.011c3.274,2.969,8.334,2.72,11.303-0.555   c1.925-2.124,2.487-5,1.756-7.569c-0.396-1.389-1.163-2.689-2.312-3.73h-0.002c-0.307-0.273-3.558-3.205-8.905-6.216   c-1.691-0.943-3.601-1.907-5.707-2.784c-4.546-1.896-10.004-3.39-16.151-3.411c-4.294-0.016-8.912,0.791-13.473,2.689   c-2.087,0.869-4.163,1.966-6.189,3.318c-6.475,4.291-12.38,10.964-17.486,20.416C96.717,73.137,98.163,77.992,102.05,80.093z\",\n        },\n        // {\n        // \tname: \"Minutely\",\n        // \tunit: ms.MINUTE,\n        // \tstart: 1642528800000,\t// 18/01/2022 8:00pm\n        // \tseed: newSeed(GameMode.minutely),\n        // \thistorical: false,\n        // \ticon: \"m7,200v-200l93,100l93,-100v200\",\n        // \tstreak: true,\n        // },\n    ]\n};\nexport function getWordNumber(mode) {\n    return Math.round((modeData.modes[mode].seed - modeData.modes[mode].start) / modeData.modes[mode].unit) + 1;\n}\nexport function seededRandomInt(min, max, seed) {\n    const rng = seedrandom(`${seed}`);\n    return Math.floor(min + (max - min) * rng());\n}\nexport const DELAY_INCREMENT = 200;\nexport const PRAISE = [\n    \"Genius\",\n    \"Magnificent\",\n    \"Impressive\",\n    \"Splendid\",\n    \"Great\",\n    \"Phew\",\n];\nexport function createNewGame(mode) {\n    return {\n        active: true,\n        guesses: 0,\n        time: modeData.modes[mode].seed,\n        wordNumber: getWordNumber(mode),\n        validHard: true,\n        board: {\n            words: Array(ROWS).fill(\"\"),\n            state: Array.from({ length: ROWS }, () => (Array(COLS).fill(\"🔳\")))\n        },\n    };\n}\nexport function createDefaultSettings() {\n    return {\n        hard: new Array(modeData.modes.length).map(() => false),\n        dark: true,\n        colorblind: false,\n        tutorial: 3,\n    };\n}\nexport function createDefaultStats(mode) {\n    const stats = {\n        played: 0,\n        lastGame: 0,\n        guesses: {\n            fail: 0,\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n        }\n    };\n    if (!modeData.modes[mode].streak)\n        return stats;\n    return Object.assign(Object.assign({}, stats), { streak: 0, maxStreak: 0 });\n}\n;\nexport function createLetterStates() {\n    return {\n        a: \"🔳\",\n        b: \"🔳\",\n        c: \"🔳\",\n        d: \"🔳\",\n        e: \"🔳\",\n        f: \"🔳\",\n        g: \"🔳\",\n        h: \"🔳\",\n        i: \"🔳\",\n        j: \"🔳\",\n        k: \"🔳\",\n        l: \"🔳\",\n        m: \"🔳\",\n        n: \"🔳\",\n        o: \"🔳\",\n        p: \"🔳\",\n        q: \"🔳\",\n        r: \"🔳\",\n        s: \"🔳\",\n        t: \"🔳\",\n        u: \"🔳\",\n        v: \"🔳\",\n        w: \"🔳\",\n        x: \"🔳\",\n        y: \"🔳\",\n        z: \"🔳\",\n    };\n}\nexport function timeRemaining(m) {\n    if (m.useTimeZone) {\n        return m.unit - (Date.now() - (m.seed + new Date().getTimezoneOffset() * ms.MINUTE));\n    }\n    return m.unit - (Date.now() - m.seed);\n}\nexport function failed(s) {\n    return !(s.active || (s.guesses > 0 && s.board.state[s.guesses - 1].join(\"\") === \"🟩\".repeat(COLS)));\n}\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { split_css_unit, is_function, assign } from '../internal/index.mjs';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    const [value, unit] = split_css_unit(amount);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * value}${unit});`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    const [xValue, xUnit] = split_css_unit(x);\n    const [yValue, yUnit] = split_css_unit(y);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * xValue}${xUnit}, ${(1 - t) * yValue}${yUnit});\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut, axis = 'y' } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const primary_property = axis === 'y' ? 'height' : 'width';\n    const primary_property_value = parseFloat(style[primary_property]);\n    const secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n    const capitalized_secondary_properties = secondary_properties.map((e) => `${e[0].toUpperCase()}${e.slice(1)}`);\n    const padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n    const padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n    const margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n    const margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n    const border_width_start_value = parseFloat(style[`border${capitalized_secondary_properties[0]}Width`]);\n    const border_width_end_value = parseFloat(style[`border${capitalized_secondary_properties[1]}Width`]);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `${primary_property}: ${t * primary_property_value}px;` +\n            `padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n            `padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n            `margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n            `margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n            `border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n            `border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from_node, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const from = from_node.getBoundingClientRect();\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, node);\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const other_node = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(other_node, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","import { writable } from \"svelte/store\";\nimport { createDefaultSettings, createLetterStates } from \"./utils\";\nexport const mode = writable();\nexport const letterStates = writable(createLetterStates());\nexport const settings = writable(createDefaultSettings());\n","<script lang=\"ts\">\n\texport let onClick = () => {};\n</script>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" on:click={onClick}>\n\t<slot />\n</svg>\n\n<style lang=\"scss\">\n\tsvg {\n\t\tcursor: pointer;\n\t\twidth: 24px;\n\t\tmargin: 0 4px;\n\t\t:global(path) {\n\t\t\tfill: var(--icon-color);\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, getContext } from \"svelte\";\n\timport { scale, fade } from \"svelte/transition\";\n\timport { mode } from \"../stores\";\n\timport { modeData, timeRemaining } from \"../utils\";\n\timport GameIcon from \"./GameIcon.svelte\";\n\timport type { Toaster } from \"./widgets\";\n\n\texport let showStats: boolean;\n\texport let tutorial: boolean;\n\texport let showRefresh: boolean;\n\n\texport let toaster = getContext<Toaster>(\"toaster\");\n\n\tconst dispatch = createEventDispatcher();\n\tmode.subscribe((m) => {\n\t\tif (timeRemaining(modeData.modes[m]) > 0) {\n\t\t\tshowRefresh = false;\n\t\t}\n\t});\n</script>\n\n<header>\n\t<div class=\"icons\">\n\t\t<GameIcon onClick={() => dispatch(\"tutorial\")}>\n\t\t\t<path\n\t\t\t\td=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\n\t\t\t/>\n\t\t</GameIcon>\n\t\t{#if showRefresh}\n\t\t\t<GameIcon onClick={() => dispatch(\"reload\")}>\n\t\t\t\t<path\n\t\t\t\t\ttransition:fade={{ duration: 200 }}\n\t\t\t\t\td=\"M4.609 12c0-4.082 3.309-7.391 7.391-7.391a7.39 7.39 0 0 1 6.523 3.912l-1.653 1.567H22v-5.13l-1.572 1.659C18.652 3.841 15.542 2 12 2 6.477 2 2 6.477 2 12s4.477 10 10 10c4.589 0 8.453-3.09 9.631-7.301l-2.512-.703c-.871 3.113-3.73 5.395-7.119 5.395-4.082 0-7.391-3.309-7.391-7.391z\"\n\t\t\t\t/>\n\t\t\t</GameIcon>\n\t\t{/if}\n\t</div>\n\t<h1\n\t\ton:click|self={() => {\n\t\t\t$mode = ($mode + 1) % modeData.modes.length;\n\t\t\ttoaster.pop(modeData.modes[$mode].name);\n\t\t}}\n\t\ton:contextmenu|preventDefault|self={() => {\n\t\t\t$mode = ($mode - 1 + modeData.modes.length) % modeData.modes.length;\n\t\t\ttoaster.pop(modeData.modes[$mode].name);\n\t\t}}\n\t>\n\t\twordata\n\t</h1>\n\t<div class=\"icons\">\n\t\t{#if showStats}\n\t\t\t<GameIcon onClick={() => dispatch(\"stats\")}>\n\t\t\t\t<path\n\t\t\t\t\ttransition:fade={{ duration: 200 }}\n\t\t\t\t\td=\"M16,11V3H8v6H2v12h20V11H16z M10,5h4v14h-4V5z M4,11h4v8H4V11z M20,19h-4v-6h4V19z\"\n\t\t\t\t/>\n\t\t\t</GameIcon>\n\t\t{/if}\n\t\t<GameIcon onClick={() => dispatch(\"settings\")}>\n\t\t\t<path\n\t\t\t\td=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"\n\t\t\t/>\n\t\t</GameIcon>\n\t</div>\n\t{#if tutorial}\n\t\t<div transition:scale class=\"tutorial\" on:click={() => dispatch(\"closeTutPopUp\")}>\n\t\t\tTap WorData to change game mode\n\t\t\t<span class=\"ok\">OK</span>\n\t\t</div>\n\t{/if}\n</header>\n\n<style lang=\"scss\">\n\theader {\n\t\t--height: 51px;\n\t\tposition: relative;\n\t\tfont-weight: 700;\n\t\ttext-transform: uppercase;\n\t\tletter-spacing: 0.2rem;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tborder-bottom: 1px solid var(--border-primary);\n\t\twidth: 100%;\n\t\theight: var(--height);\n\t\tposition: relative;\n\t}\n\t.icons {\n\t\theight: 100%;\n\t\tz-index: 1;\n\t\tdisplay: flex;\n\t}\n\th1 {\n\t\tposition: absolute;\n\t\twidth: max-content;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\tfont-size: var(--fs-large);\n\t\tcursor: pointer;\n\t\ttext-align: center;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { onDestroy } from \"svelte\";\n\n\timport { mode } from \"../../stores\";\n\n\timport { DELAY_INCREMENT, ROWS } from \"../../utils\";\n\n\texport let value = \"\";\n\texport let state: LetterState;\n\texport let position = 0;\n\texport function bounce() {\n\t\tsetTimeout(() => (animation = \"bounce\"), (ROWS + position) * DELAY_INCREMENT);\n\t}\n\tlet s: string;\n\tlet pop = false;\n\tlet animation = \"\";\n\n\t// reset animation when value changes, because for some reason changing anination to \"\" when the game is over causes the tiles to flash\n\t$: !value && (animation = \"\");\n\n\t// ensure all animations play\n\tconst unsub = mode.subscribe(() => {\n\t\tanimation = \"\";\n\t\ts = \"🔳\";\n\t\tsetTimeout(() => (s = \"\"), 10);\n\t});\n\t// prevent pop animation from playing at the beginning\n\tsetTimeout(() => (pop = true), 200);\n\n\tonDestroy(unsub);\n</script>\n\n<div\n\tdata-animation={animation}\n\tclass:value\n\tclass:pop\n\tclass=\"tile {state} {s}\"\n\tstyle=\"transition-delay: {position * DELAY_INCREMENT}ms\"\n>\n\t<div class=\"front\">{value}</div>\n\t<div class=\"back\">{value}</div>\n</div>\n\n<style lang=\"scss\">\n\t:not(.pop),\n\t:global(.complete) .value {\n\t\tscale: 1 !important;\n\t\topacity: 1 !important;\n\t}\n\t.value {\n\t\tanimation: pop 0.1s;\n\t\t.front {\n\t\t\tborder-color: var(--border-primary);\n\t\t}\n\t}\n\t.tile {\n\t\tfont-size: 2rem;\n\t\tfont-weight: bold;\n\t\ttext-transform: uppercase;\n\t\tposition: relative;\n\t\ttransform-style: preserve-3d;\n\t\t&[data-animation=\"bounce\"] {\n\t\t\tanimation: bounce 1s;\n\t\t}\n\t}\n\t.back,\n\t.front {\n\t\tdisplay: grid;\n\t\tplace-items: center;\n\t\tposition: absolute;\n\t\tinset: 0;\n\t\tbackface-visibility: hidden;\n\t\t-webkit-backface-visibility: hidden;\n\t\ttransition: transform 0s ease-in-out;\n\t}\n\t.front {\n\t\tborder: 2px solid var(--border-primary);\n\t\ttransform: rotateX(0deg);\n\t\tcolor: var(--fg-primary);\n\t}\n\t.back {\n\t\tbackground: var(--color-absent);\n\t\ttransform: rotateX(180deg);\n\t}\n\t.🟩 .back {\n\t\tbackground: var(--color-correct);\n\t}\n\t.🟨 .back {\n\t\tbackground: var(--color-present);\n\t}\n\t:global(.complete) .tile:not(.🔳) .front {\n\t\ttransition-delay: inherit !important;\n\t\ttransition-duration: 0.8s;\n\t\ttransform: rotateX(180deg);\n\t}\n\t:global(.complete) .tile:not(.🔳) .back {\n\t\ttransition-delay: inherit !important;\n\t\ttransition-duration: 0.8s;\n\t\ttransform: rotateX(0deg);\n\t}\n\t@keyframes pop {\n\t\tfrom {\n\t\t\tscale: 0.8;\n\t\t\topacity: 0;\n\t\t}\n\n\t\t40% {\n\t\t\tscale: 1.1;\n\t\t\topacity: 1;\n\t\t}\n\t}\n\t@keyframes bounce {\n\t\t0%,\n\t\t20% {\n\t\t\ttransform: translateY(0);\n\t\t}\n\t\t40% {\n\t\t\ttransform: translateY(-30px);\n\t\t}\n\t\t50% {\n\t\t\ttransform: translateY(5px);\n\t\t}\n\t\t60% {\n\t\t\ttransform: translateY(-15px);\n\t\t}\n\t\t80% {\n\t\t\ttransform: translateY(2px);\n\t\t}\n\t\t100% {\n\t\t\ttransform: translateY(0);\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { COLS } from \"../../utils\";\n\n\timport Tile from \"./Tile.svelte\";\n\texport let guesses: number;\n\texport let num: number;\n\texport let value = \"\";\n\texport let state: LetterState[];\n\texport function shake() {\n\t\tanimation = \"shake\";\n\t}\n\texport function bounce() {\n\t\ttiles.forEach((e) => e.bounce());\n\t}\n\tconst dispatch = createEventDispatcher();\n\tlet animation = \"\";\n\tlet tiles: Tile[] = [];\n</script>\n\n<div\n\tclass=\"board-row\"\n\ton:contextmenu|preventDefault={(e) => dispatch(\"ctx\", { x: e.clientX, y: e.clientY })}\n\ton:dblclick|preventDefault={(e) => dispatch(\"ctx\", { x: e.clientX, y: e.clientY })}\n\ton:animationend={() => (animation = \"\")}\n\tdata-animation={animation}\n\tclass:complete={guesses > num}\n>\n\t{#each Array(COLS) as _, i}\n\t\t<Tile bind:this={tiles[i]} state={state[i]} value={value.charAt(i)} position={i} />\n\t{/each}\n</div>\n\n<style lang=\"scss\">\n\t.board-row {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(var(--cols), 1fr);\n\t\tgap: 5px;\n\t\t&[data-animation=\"shake\"] {\n\t\t\tanimation: shake 0.6s;\n\t\t}\n\t}\n\t@keyframes shake {\n\t\t10%,\n\t\t90% {\n\t\t\ttransform: translateX(-1px);\n\t\t}\n\n\t\t20%,\n\t\t80% {\n\t\t\ttransform: translateX(2px);\n\t\t}\n\n\t\t30%,\n\t\t50%,\n\t\t70% {\n\t\t\ttransform: translateX(-4px);\n\t\t}\n\n\t\t40%,\n\t\t60% {\n\t\t\ttransform: translateX(4px);\n\t\t}\n\t}\n</style>\n","<script context=\"module\" lang=\"ts\">\n\tconst cache = new Map<string, Promise<DictionaryEntry>>();\n</script>\n\n<script lang=\"ts\">\n\texport let word: string;\n\t/** The maximum number of alternate definitions to provide*/\n\texport let alternates = 9;\n\n\tasync function getWordData(word: string): Promise<DictionaryEntry> {\n\t\tif (!cache.has(word)) {\n\t\t\tconst data = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`, {\n\t\t\t\tmode: \"cors\",\n\t\t\t});\n\t\t\tif (data.ok) {\n\t\t\t\tcache.set(word, (await data.json())[0]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Failed to fetch definition`);\n\t\t\t}\n\t\t}\n\t\treturn cache.get(word);\n\t}\n</script>\n\n<div class=\"def\">\n\t{#await getWordData(word)}\n\t\t<h4>Fetching definition...</h4>\n\t{:then data}\n\t\t<h2>{word}</h2>\n\t\t<em>{data.meanings[0].partOfSpeech}</em>\n\t\t<ol>\n\t\t\t{#if word !== data.word}\n\t\t\t\t<li>variant of {data.word}.</li>\n\t\t\t{/if}\n\t\t\t{#each data.meanings[0].definitions.slice(0, 1 + alternates - (word !== data.word ? 1 : 0)) as def}\n\t\t\t\t<li>{def.definition}</li>\n\t\t\t{/each}\n\t\t</ol>\n\t{:catch}\n\t\t<div>Your word was <strong>{word}</strong>. (failed to fetch definition)</div>\n\t{/await}\n</div>\n\n<style>\n\th2 {\n\t\tdisplay: inline-block;\n\t\tmargin-right: 1rem;\n\t\tmargin-bottom: 0.8rem;\n\t}\n\tol {\n\t\tpadding-left: 1.5rem;\n\t}\n\tli {\n\t\tmargin-bottom: 0.5rem;\n\t}\n\tli::first-letter {\n\t\ttext-transform: uppercase;\n\t}\n\tli::marker {\n\t\tcolor: var(--fg-secondary);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport Definition from \"./Definition.svelte\";\n\n\texport let x = 0;\n\texport let y = 0;\n\texport let word = \"\";\n\texport let pAns: number;\n\texport let pSols: number;\n\tconst width = parseInt(getComputedStyle(document.body).getPropertyValue(\"--game-width\")) / 2;\n\n\t$: x = window.innerWidth - x < width ? window.innerWidth - width : x;\n</script>\n\n<div class=\"ctx-menu\" style=\"top: {y}px; left: {x}px;\">\n\t{#if word !== \"\"}\n\t\t<div>\n\t\t\tConsidering all hints, this row had:\n\t\t\t<br /><br />\n\t\t\t{pAns} possible answer{pAns > 1 ? \"s\" : \"\"}\n\t\t\t<br />\n\t\t\t{pSols} valid guess{pSols > 1 ? \"es\" : \"\"}\n\t\t</div>\n\t\t<Definition {word} alternates={1} />\n\t{:else}\n\t\t<div>\n\t\t\tConsidering all hints, there {pAns > 1 ? \"are\" : \"is\"}:\n\t\t\t<br /><br />\n\t\t\t{pAns} possible answer{pAns > 1 ? \"s\" : \"\"}\n\t\t\t<br />\n\t\t\t{pSols} valid guess{pSols > 1 ? \"es\" : \"\"}\n\t\t</div>\n\t{/if}\n</div>\n\n<style lang=\"scss\">\n\t.ctx-menu {\n\t\tposition: fixed;\n\t\tz-index: 2;\n\t\tfont-size: var(--fs-small);\n\t\tbackground-color: var(--bg-secondary);\n\t\tborder: solid 1px var(--border-primary);\n\t\tborder-radius: 4px;\n\t\tpadding: 10px;\n\t\twidth: calc(var(--game-width) / 2);\n\n\t\t& > :global(*) {\n\t\t\tborder-bottom: 1px solid var(--border-primary);\n\t\t\tpadding-bottom: 5px;\n\t\t}\n\t\t& > :global(*:last-child) {\n\t\t\tborder-bottom: none;\n\t\t\tpadding-bottom: unset;\n\t\t\tpadding-top: 5px;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getRowData, words } from \"../../utils\";\n\n\timport Row from \"./Row.svelte\";\n\timport ContextMenu from \"../widgets/ContextMenu.svelte\";\n\timport { createEventDispatcher } from \"svelte\";\n\timport { scale } from \"svelte/transition\";\n\n\texport let value: string[];\n\texport let board: GameBoard;\n\texport let guesses: number;\n\texport let icon: string;\n\texport let tutorial: boolean;\n\texport function shake(row: number) {\n\t\trows[row].shake();\n\t}\n\texport function bounce(row: number) {\n\t\trows[row].bounce();\n\t}\n\texport function hideCtx(e?: MouseEvent) {\n\t\tif (!e || !e.defaultPrevented) showCtx = false;\n\t}\n\tconst dispatch = createEventDispatcher();\n\n\tlet rows: Row[] = [];\n\tlet showCtx = false;\n\tlet pAns = 0;\n\tlet pSols = 0;\n\tlet x = 0;\n\tlet y = 0;\n\tlet word = \"\";\n\n\tfunction context(cx: number, cy: number, num: number, val: string) {\n\t\tif (guesses >= num) {\n\t\t\tx = cx;\n\t\t\ty = cy;\n\t\t\tshowCtx = true;\n\t\t\tword = guesses > num ? val : \"\";\n\n\t\t\tconst match = getRowData(num, board);\n\t\t\tpAns = words.words.filter((w) => match(w)).length;\n\t\t\tpSols = pAns + words.valid.filter((w) => match(w)).length;\n\t\t}\n\t}\n</script>\n\n{#if showCtx}\n\t<ContextMenu {pAns} {pSols} {x} {y} {word} />\n{/if}\n\n<div class=\"board\">\n\t{#each value as _, i}\n\t\t<Row\n\t\t\tnum={i}\n\t\t\t{guesses}\n\t\t\tbind:this={rows[i]}\n\t\t\tbind:value={value[i]}\n\t\t\tstate={board.state[i]}\n\t\t\ton:ctx={(e) => context(e.detail.x, e.detail.y, i, value[i])}\n\t\t/>\n\t{/each}\n\t{#if icon}\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\" fill=\"none\">\n\t\t\t<path d={icon} stroke-width=\"14\" />\n\t\t</svg>\n\t{/if}\n\t{#if tutorial}\n\t\t<div transition:scale class=\"tutorial\" on:click={() => dispatch(\"closeTutPopUp\")}>\n\t\t\tdouble tap (right click) a row to see a word's definition, or how many words could be\n\t\t\tplayed there\n\t\t\t<span class=\"ok\">OK</span>\n\t\t</div>\n\t{/if}\n</div>\n\n<style>\n\t.board {\n\t\tdisplay: grid;\n\t\tgrid-template-rows: repeat(var(--rows), 1fr);\n\t\tgap: 5.5px;\n\t\tmax-height: 420px;\n\t\tflex-grow: 1;\n\t\taspect-ratio: var(--cols) / var(--rows);\n\t\tpadding: 10px;\n\t\tposition: relative;\n\t}\n\tsvg {\n\t\tposition: absolute;\n\t\tz-index: -1;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\twidth: min(130%, 100vw);\n\t\tmax-height: 100%;\n\t}\n\tpath {\n\t\tstroke: var(--bg-secondary);\n\t}\n\t.tutorial {\n\t\ttop: calc(100 / var(--rows) * 1%);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\n\texport let letter: string;\n\texport let state: LetterState = \"🔳\";\n\n\tconst dispatch = createEventDispatcher();\n</script>\n\n<div class={state} class:big={letter.length !== 1} on:click={() => dispatch(\"keystroke\", letter)}>\n\t{letter}<slot />\n</div>\n\n<style>\n\tdiv {\n\t\tfont-size: calc(var(--fs-tiny) + 1px);\n\t\tfont-weight: bold;\n\t\ttext-transform: uppercase;\n\t\tborder-radius: 4px;\n\t\theight: 58px;\n\t\tbackground: var(--key-bg);\n\t\tcursor: pointer;\n\t\tdisplay: grid;\n\t\tplace-items: center;\n\t\tflex: 1;\n\t\ttransition: background-color 0.3s ease-in-out;\n\t}\n\t:global(.guesses) div {\n\t\ttransition-delay: 1s;\n\t}\n\t:global(.guesses .preventChange) div {\n\t\ttransition-duration: 0.15s;\n\t\ttransition-delay: 0s;\n\t\tbackground: var(--key-bg) !important;\n\t}\n\t.big {\n\t\tfont-size: var(--fs-tiny);\n\t\tflex-grow: 1.5;\n\t}\n\t.⬛ {\n\t\tbackground: var(--color-absent);\n\t}\n\t.🟨 {\n\t\tbackground: var(--color-present);\n\t}\n\t.🟩 {\n\t\tbackground: var(--color-correct);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, onDestroy } from \"svelte/internal\";\n\timport { letterStates, mode } from \"../../stores\";\n\timport { COLS, keys } from \"../../utils\";\n\timport Key from \"./Key.svelte\";\n\n\texport let value = \"\";\n\texport let disabled = false;\n\tlet preventChange = true;\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction appendValue(char: string) {\n\t\tif (!disabled && value.length < COLS) {\n\t\t\tdispatch(\"keystroke\", char);\n\t\t\tvalue += char;\n\t\t}\n\t}\n\tfunction backspaceValue() {\n\t\tif (!disabled) {\n\t\t\tvalue = value.slice(0, value.length - 1);\n\t\t}\n\t}\n\tfunction handleKeystroke(e: KeyboardEvent) {\n\t\tif (!disabled && !e.ctrlKey && !e.altKey) {\n\t\t\tif (e.key && /^[a-z]$/.test(e.key.toLowerCase())) {\n\t\t\t\treturn appendValue(e.key.toLowerCase());\n\t\t\t}\n\t\t\tif (e.key === \"Backspace\") return backspaceValue();\n\n\t\t\tif (e.key === \"Enter\") return dispatch(\"submitWord\");\n\t\t}\n\t\tif (e.key === \"Escape\") dispatch(\"esc\");\n\t}\n\n\t// Ensure keys change on load instead of loading their state color & change the color of all the keys to neutral, then to their correct color on mode change\n\tconst unsub = mode.subscribe(() => {\n\t\tpreventChange = true;\n\t\tsetTimeout(() => (preventChange = false), 200);\n\t});\n\tonDestroy(unsub);\n</script>\n\n<svelte:body on:keydown={handleKeystroke} />\n\n<div class:preventChange class=\"keyboard\">\n\t<div class=\"row\">\n\t\t{#each keys[0] as letter}\n\t\t\t<Key\n\t\t\t\t{letter}\n\t\t\t\ton:keystroke={(e) => appendValue(e.detail)}\n\t\t\t\tstate={$letterStates[letter]}\n\t\t\t/>\n\t\t{/each}\n\t</div>\n\t<div class=\"row\">\n\t\t{#each keys[1] as letter}\n\t\t\t<Key\n\t\t\t\t{letter}\n\t\t\t\ton:keystroke={(e) => appendValue(e.detail)}\n\t\t\t\tstate={$letterStates[letter]}\n\t\t\t/>\n\t\t{/each}\n\t</div>\n\t<div class=\"row\">\n\t\t<Key letter=\"ENTER\" on:keystroke={() => !disabled && dispatch(\"submitWord\")} />\n\t\t{#each keys[2] as letter}\n\t\t\t<Key\n\t\t\t\t{letter}\n\t\t\t\ton:keystroke={(e) => appendValue(e.detail)}\n\t\t\t\tstate={$letterStates[letter]}\n\t\t\t/>\n\t\t{/each}\n\t\t<Key letter=\"\" on:keystroke={backspaceValue}>\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</Key>\n\t</div>\n</div>\n\n<style>\n\t.keyboard {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tmargin-bottom: 2px;\n\t}\n\t.row {\n\t\ttouch-action: manipulation;\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tmargin: 0 auto 8px;\n\t\tpadding: 0 8px;\n\t\tgap: 6px;\n\t}\n\t.row:nth-of-type(2) {\n\t\tpadding: 0 30px;\n\t}\n\tsvg {\n\t\tfill: var(--fg-primary);\n\t\twidth: 24px;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\n\timport GameIcon from \"./GameIcon.svelte\";\n\n\texport let visible = false;\n\texport let fullscreen = false;\n\n\tconst dispach = createEventDispatcher();\n\n\tfunction close() {\n\t\tvisible = false;\n\t\tdispach(\"close\");\n\t}\n</script>\n\n{#if fullscreen}\n\t<div class:visible class=\"page\">\n\t\t<div class=\"exit\" on:click={close}>\n\t\t\t<GameIcon>\n\t\t\t\t<path\n\t\t\t\t\td=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n\t\t\t\t/>\n\t\t\t</GameIcon>\n\t\t</div>\n\t\t<div>\n\t\t\t<slot />\n\t\t</div>\n\t\t<slot name=\"footer\" />\n\t</div>\n{:else}\n\t<div class:visible class=\"overlay\" on:click|self={close}>\n\t\t<div class=\"modal\">\n\t\t\t<div class=\"exit\" on:click={close}>\n\t\t\t\t<GameIcon>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n\t\t\t\t\t/>\n\t\t\t\t</GameIcon>\n\t\t\t</div>\n\t\t\t<slot />\n\t\t</div>\n\t</div>\n{/if}\n\n<style lang=\"scss\">\n\t@mixin modal-outer() {\n\t\ttransition: all 0.2s ease;\n\t\tfont-size: var(--fs-small);\n\t\tvisibility: hidden;\n\t\tposition: absolute;\n\t\tz-index: 1;\n\t\topacity: 0;\n\t\tinset: 0;\n\t}\n\t.overlay.visible,\n\t.visible.page,\n\t.visible .modal {\n\t\ttop: 0;\n\t\topacity: 1;\n\t\tvisibility: visible;\n\t}\n\t.exit {\n\t\tposition: absolute;\n\t\ttop: var(--modal-padding);\n\t\tright: var(--modal-padding);\n\t}\n\t/* regular modal */\n\t.overlay {\n\t\t@include modal-outer();\n\t\tbackground: #0008;\n\t}\n\t.modal {\n\t\t--modal-padding: 16px;\n\t\tbackground: var(--bg-primary);\n\t\tmax-width: var(--game-width);\n\t\theight: min-content;\n\t\tmax-height: 90%;\n\t\toverflow-y: auto;\n\t\tborder-radius: 8px;\n\t\tborder: 1px solid var(--bg-secondary);\n\t\tpadding: var(--modal-padding);\n\t\tpadding-top: calc(2 * var(--modal-padding));\n\t\tposition: absolute;\n\t\twidth: 90%;\n\t\tinset: 20vh 0 0;\n\t\tmargin: auto;\n\t\ttransition: all 0.3s ease;\n\t\t> :global(*:not(h3)) {\n\t\t\tmargin-bottom: 15px;\n\t\t}\n\t}\n\t/* fullscreen modal */\n\t.page {\n\t\t@include modal-outer();\n\t\tbackground: var(--bg-primary);\n\t\ttop: 10vh;\n\t\theight: 100%;\n\t\tmax-width: var(--game-width);\n\t\tmargin: auto;\n\t\tpadding: 10px 16px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t\toverflow-y: auto;\n\t\t.exit {\n\t\t\ttop: 10px;\n\t\t\tright: 10px;\n\t\t}\n\t}\n\t:global([slot=\"footer\"]) {\n\t\tcolor: var(--fg-secondary);\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: flex-end;\n\t\ttext-align: end;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let value: boolean;\n\texport let disabled = false;\n</script>\n\n<div on:click={(e) => !disabled && (value = !value)} class:checked={value} {disabled} />\n\n<style lang=\"scss\">\n\tdiv[disabled=\"true\"] {\n\t\topacity: 0.5;\n\t\tcursor: unset;\n\t}\n\tdiv {\n\t\twidth: 32px;\n\t\theight: 20px;\n\t\tborder-radius: 10px;\n\t\tbackground: var(--icon-color);\n\t\tposition: relative;\n\t\tcursor: pointer;\n\t\ttransition: background-color 0.3s ease;\n\t\t&::before {\n\t\t\tcontent: \"\";\n\t\t\tposition: absolute;\n\t\t\twidth: 16px;\n\t\t\taspect-ratio: 1;\n\t\t\tbackground: white;\n\t\t\tborder-radius: 50%;\n\t\t\tmargin: 2px;\n\t\t\tleft: 0;\n\t\t\ttransition: left 0.3s ease;\n\t\t}\n\t}\n\t.checked {\n\t\tbackground: var(--color-correct);\n\t\t&::before {\n\t\t\tleft: 12px;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let value: number;\n\texport let options: (string | number)[];\n\texport let disabled = false;\n</script>\n\n<select bind:value {disabled}>\n\t{#each options as val, i}\n\t\t<option value={i}>{val}</option>\n\t{/each}\n</select>\n\n<style>\n\tselect {\n\t\tborder: solid 1px var(--border-secondary);\n\t\tpadding: 8px;\n\t\tmin-width: 85px;\n\t\tborder-radius: 4px;\n\t\tcursor: pointer;\n\t\tbackground: var(--bg-secondary);\n\t\tcolor: var(--fg-primary);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport Switch from \"./Switch.svelte\";\n\timport DropDown from \"./DropDown.svelte\";\n\texport let value: any;\n\texport let type: SettingType;\n\texport let options: (string | number)[] = [];\n\texport let disabled = false;\n\tconst types = {\n\t\tswitch: Switch,\n\t\tdropdown: DropDown,\n\t};\n</script>\n\n<div class=\"setting\">\n\t<div>\n\t\t<div class=\"title\"><slot name=\"title\" /></div>\n\t\t<div class=\"desc\"><slot name=\"desc\" /></div>\n\t</div>\n\t<svelte:component this={types[type]} bind:value {options} {disabled} />\n</div>\n\n<style>\n\t.setting {\n\t\t/* border-bottom: 1px solid var(--border-primary); */\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t}\n\t.title {\n\t\tfont-size: var(--fs-medium);\n\t\tfont-weight: 500;\n\t}\n\t.desc {\n\t\tfont-size: var(--fs-tiny);\n\t\tcolor: var(--fg-secondary);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getContext, onMount } from \"svelte\";\n\n\timport { mode, settings } from \"../../stores\";\n\timport { modeData } from \"../../utils\";\n\timport type { Toaster } from \"../widgets\";\n\timport Setting from \"./Setting.svelte\";\n\n\texport let state: GameState;\n\n\tconst toaster = getContext<Toaster>(\"toaster\");\n\n\tlet root: HTMLElement;\n\tonMount(() => {\n\t\troot = document.documentElement;\n\t});\n\t$: {\n\t\tif (root) {\n\t\t\t$settings.dark ? root.classList.remove(\"light\") : root.classList.add(\"light\");\n\t\t\t$settings.colorblind\n\t\t\t\t? root.classList.add(\"colorblind\")\n\t\t\t\t: root.classList.remove(\"colorblind\");\n\t\t\tlocalStorage.setItem(\"settings\", JSON.stringify($settings));\n\t\t}\n\t}\n</script>\n\n<!-- not currently supported, see https://github.com/sveltejs/svelte/issues/3105 -->\n<!-- <svelte:body class:light={!$settings.dark} class:colorblind={$settings.colorblind} /> -->\n<div class=\"outer\">\n\t<div class=\"settings-top\">\n\t\t<h3>settings</h3>\n\t\t<div\n\t\t\ton:click={() => {\n\t\t\t\tif (!state.validHard) {\n\t\t\t\t\ttoaster.pop(\"Game has already violated hard mode\");\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<Setting type=\"switch\" bind:value={$settings.hard[$mode]} disabled={!state.validHard}>\n\t\t\t\t<span slot=\"title\">Hard Mode</span>\n\t\t\t\t<span slot=\"desc\">Any revealed hints must be used in subsequent guesses</span>\n\t\t\t</Setting>\n\t\t</div>\n\t\t<Setting type=\"switch\" bind:value={$settings.dark}>\n\t\t\t<span slot=\"title\">Dark Theme</span>\n\t\t</Setting>\n\t\t<Setting type=\"switch\" bind:value={$settings.colorblind}>\n\t\t\t<span slot=\"title\">Color Blind Mode</span>\n\t\t\t<span slot=\"desc\">High contrast colors</span>\n\t\t</Setting>\n\t\t<Setting type=\"dropdown\" bind:value={$mode} options={modeData.modes.map((e) => e.name)}>\n\t\t\t<span slot=\"title\">Game Mode</span>\n\t\t\t<span slot=\"desc\">The game mode determines how often the word refreshes</span>\n\t\t</Setting>\n\t\t<div class=\"links\">\n\t\t\t<a href=\"https://github.com/MikhaD/wordle\" target=\"_blank\">Leave a ⭐</a>\n\t\t\t<a href=\"https://github.com/MikhaD/wordle/issues\" target=\"_blank\">Report a Bug</a>\n\t\t</div>\n\t</div>\n</div>\n\n<style>\n\t.outer {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t}\n\t.links {\n\t\tfont-size: var(--fs-medium);\n\t\tborder-bottom: 1px solid var(--border-primary);\n\t\tcolor: var(--fg-secondary);\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n\t:global(.settings-top > div) {\n\t\tpadding: 16px 0;\n\t\tborder-bottom: 1px solid var(--border-primary);\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let visible = true;\n</script>\n\n<div class=\"sep\" class:visible>\n\t<div>\n\t\t<slot name=\"1\" />\n\t</div>\n\t<div>\n\t\t<slot name=\"2\" />\n\t</div>\n</div>\n\n<style>\n\t.sep.visible {\n\t\tdisplay: flex;\n\t}\n\t.sep {\n\t\tdisplay: none;\n\t}\n\t.sep :first-child {\n\t\tborder-right: 1px solid var(--fg-primary);\n\t}\n\t.sep div {\n\t\tflex: 1;\n\t\tdisplay: grid;\n\t\tplace-items: center;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport type Toaster from \"./Toaster.svelte\";\n\n\timport { mode } from \"../../stores\";\n\timport { failed, modeData } from \"../../utils\";\n\timport { getContext } from \"svelte\";\n\n\texport let state: GameState;\n\tconst toaster = getContext<Toaster>(\"toaster\");\n\n\t$: stats = `${modeData.modes[$mode].name} Wordle+ #${state.wordNumber} ${\n\t\tfailed(state) ? \"X\" : state.guesses\n\t}/${state.board.words.length}\\n\\n    ${state.board.state\n\t\t.slice(0, state.guesses)\n\t\t.map((r) => r.join(\"\"))\n\t\t.join(\"\\n    \")}\\nmikhad.github.io/wordle`;\n</script>\n\n<div\n\ton:click={() => {\n\t\tnavigator.clipboard.writeText(stats);\n\t\ttoaster.pop(\"Copied\");\n\t}}\n>\n\tshare\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n\t\t<path\n\t\t\tfill=\"white\"\n\t\t\td=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\n\t\t/>\n\t</svg>\n</div>\n\n<style lang=\"scss\">\n\tdiv {\n\t\tcolor: #fff;\n\t\tfont-size: var(--fs-medium);\n\t\ttext-transform: uppercase;\n\t\tfont-weight: bold;\n\t\tbackground: var(--color-correct);\n\t\tborder-radius: 4px;\n\t\theight: 52px;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tgap: 8px;\n\t\twidth: 80%;\n\t\tcursor: pointer;\n\t\t&:hover {\n\t\t\topacity: 0.9;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { COLS, ROWS } from \"../../utils\";\n\n\timport { Tile } from \"../board\";\n\texport let visible: boolean;\n</script>\n\n<h3>how to play</h3>\n<div>Guess the <strong>WORDLE</strong> in {ROWS} tries.</div>\n<div>Each guess must be a valid {COLS} letter word. Hit the enter button to submit.</div>\n<div>\n\tAfter each guess, the color of the tiles will change to show how close your guess was to the\n\tword.\n</div>\n<div class:complete={visible} class=\"examples\">\n\t<div><strong>Examples</strong></div>\n\t<div class=\"row\">\n\t\t<Tile value=\"w\" state=\"🟩\" />\n\t\t<Tile value=\"e\" state=\"🔳\" />\n\t\t<Tile value=\"a\" state=\"🔳\" />\n\t\t<Tile value=\"r\" state=\"🔳\" />\n\t\t<Tile value=\"y\" state=\"🔳\" />\n\t</div>\n\t<div>The letter <strong>W</strong> is in the word and in the correct spot.</div>\n\t<div class=\"row\">\n\t\t<Tile value=\"p\" state=\"🔳\" />\n\t\t<Tile value=\"i\" state=\"🟨\" />\n\t\t<Tile value=\"l\" state=\"🔳\" />\n\t\t<Tile value=\"l\" state=\"🔳\" />\n\t\t<Tile value=\"s\" state=\"🔳\" />\n\t</div>\n\t<div>The letter <strong>I</strong> is in the word but in the wrong spot.</div>\n\t<div class=\"row\">\n\t\t<Tile value=\"v\" state=\"🔳\" />\n\t\t<Tile value=\"a\" state=\"🔳\" />\n\t\t<Tile value=\"g\" state=\"🔳\" />\n\t\t<Tile value=\"u\" state=\"⬛\" />\n\t\t<Tile value=\"e\" state=\"🔳\" />\n\t</div>\n\t<div>The letter <strong>U</strong> is not in the word in any spot.</div>\n</div>\n<div>\n\tThis is a recreation of the original <a\n\t\thref=\"https://www.nytimes.com/games/wordle/\"\n\t\ttarget=\"_blank\">Wordle</a\n\t>\n\tby Josh Wardle with additional modes and features, allowing you to play infinite wordles. Switch\n\tto infinite mode to play an unlimited number of times.\n\t<br /><br />\n\tOpen the settings menu to see some of the additional features.\n\t<br />\n\tWritten with Svelte, in Typescript by\n\t<a href=\"https://github.com/MikhaD\" target=\"_blank\">MikhaD</a>.\n</div>\n\n<style lang=\"scss\">\n\tdiv {\n\t\tmargin: 14px 0;\n\t}\n\t.examples {\n\t\tborder-top: 1px solid var(--border-primary);\n\t\tborder-bottom: 1px solid var(--border-primary);\n\t\t:global(.row > *) {\n\t\t\theight: 100%;\n\t\t\taspect-ratio: 1;\n\t\t}\n\t\t&:not(.complete) :global(.row .back) {\n\t\t\ttransition-delay: 0.3s;\n\t\t}\n\t}\n\t.row {\n\t\theight: 40px;\n\t\tdisplay: flex;\n\t\tgap: 4px;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\n\timport type { GameMode } from \"../../enums\";\n\timport { ms as MS } from \"../../enums\";\n\timport { mode } from \"../../stores\";\n\timport { modeData, timeRemaining } from \"../../utils\";\n\n\tconst dispatch = createEventDispatcher();\n\n\tlet ms = 1000;\n\n\tlet countDown: number;\n\n\texport function reset(m: GameMode) {\n\t\tclearInterval(countDown);\n\t\tms = timeRemaining(modeData.modes[m]);\n\t\tif (ms < 0) dispatch(\"timeup\");\n\t\tcountDown = setInterval(() => {\n\t\t\tms = timeRemaining(modeData.modes[m]);\n\t\t\tif (ms < 0) {\n\t\t\t\tclearInterval(countDown);\n\t\t\t\tdispatch(\"timeup\");\n\t\t\t}\n\t\t}, MS.SECOND);\n\t}\n\t$: reset($mode);\n</script>\n\n<h3>Next wordle</h3>\n<div class=\"container\">\n\t{#if ms > 0}\n\t\t<div class=\"timer\">\n\t\t\t{`${Math.floor(ms / MS.HOUR)}`.padStart(2, \"0\")}:{`${Math.floor(\n\t\t\t\t(ms % MS.HOUR) / MS.MINUTE\n\t\t\t)}`.padStart(2, \"0\")}:{`${Math.floor((ms % MS.MINUTE) / MS.SECOND)}`.padStart(2, \"0\")}\n\t\t</div>\n\t{:else}\n\t\t<div class=\"button\" on:click={() => dispatch(\"reload\")}>\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M4.609 12c0-4.082 3.309-7.391 7.391-7.391a7.39 7.39 0 0 1 6.523 3.912l-1.653 1.567H22v-5.13l-1.572 1.659C18.652 3.841 15.542 2 12 2 6.477 2 2 6.477 2 12s4.477 10 10 10c4.589 0 8.453-3.09 9.631-7.301l-2.512-.703c-.871 3.113-3.73 5.395-7.119 5.395-4.082 0-7.391-3.309-7.391-7.391z\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</div>\n\t{/if}\n</div>\n\n<style>\n\th3 {\n\t\tmargin-bottom: 10px;\n\t}\n\t.container {\n\t\theight: 45px;\n\t\tmin-width: 70%;\n\t}\n\t.timer {\n\t\tfont-size: clamp(25px, 8vw, var(--fs-large));\n\t\ttext-align: center;\n\t}\n\t.button {\n\t\theight: 80%;\n\t\taspect-ratio: 1;\n\t\tpadding: 4px;\n\t\tbackground: var(--color-correct);\n\t\tborder-radius: 4px;\n\t\tcursor: pointer;\n\t\tmargin: auto;\n\t}\n\tsvg {\n\t\tfill: white;\n\t\theight: 100%;\n\t}\n\t.button:hover {\n\t\topacity: 0.9;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { fade } from \"svelte/transition\";\n\n\texport function pop(text: string, duration = 1) {\n\t\ttoast = [text, ...toast];\n\t\tsetTimeout(() => (toast = toast.slice(0, toast.length - 1)), duration * 1000);\n\t}\n\tlet toast: string[] = [];\n</script>\n\n<div class=\"toast\">\n\t{#each toast as slice}\n\t\t<div class=\"slice\" out:fade={{ duration: 200 }}>{slice}</div>\n\t{/each}\n</div>\n\n<style>\n\t.toast {\n\t\ttop: 10%;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\tposition: absolute;\n\t\tz-index: 10;\n\t\tfont-weight: bold;\n\t}\n\t.slice {\n\t\tcolor: var(--bg-primary);\n\t\tbackground: var(--fg-primary);\n\t\tpadding: 16px;\n\t\tmargin: 16px auto;\n\t\tborder-radius: 4px;\n\t\twidth: fit-content;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let index = 0;\n\tconst tips = [\n\t\t\"You can change the gamemode by clicking wordle+.\",\n\t\t\"Hard mode is game mode specific. Turning it on in one game mode won't change it on the others.\",\n\t\t\"Double tap or right click a word on the board to learn its definition.\",\n\t\t\"Hard mode can be enabled during a game if you haven't violated the hard mode rules yet.\",\n\t\t\"Double tap or right click the next row to see how many possible words can be played there, if you use all the previous information.\",\n\t\t\"Because words are chosen from the list randomly it is possible to get the same word again.\",\n\t\t\"When you see the refresh button in the top left corner it means a new word is ready.\",\n\t\t\"Everyone has the same wordle at the same time. Your word #73 is the same as everyone elses #73.\",\n\t\t\"There are more valid guesses than possible words, ie. not all 5 letter words can be selected as an answer by the game.\",\n\t\t\"Historical games don't count towards your stats. Historical games are when you follow a link to a specific game number.\",\n\t];\n\texport const length = tips.length;\n</script>\n\n<div class=\"outer\">\n\t<div class=\"number\">Tip {index + 1}/{tips.length}</div>\n\t<div class=\"tip\">{tips[index]}</div>\n\t<svg\n\t\tclass=\"left\"\n\t\ton:click={() => (index = (index - 1 + tips.length) % tips.length)}\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 100 100\"\n\t>\n\t\t<path d=\"M75,0L25,50L75,100z\" />\n\t</svg>\n\t<svg\n\t\ton:click={() => (index = (index + 1) % tips.length)}\n\t\tclass=\"right\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 100 100\"\n\t>\n\t\t<path d=\"M25,0L75,50L25,100z\" />\n\t</svg>\n</div>\n\n<style lang=\"scss\">\n\t.outer {\n\t\tmargin: 15px auto;\n\t\tpadding: 10px 20px;\n\t\tmax-width: calc(0.6 * var(--game-width));\n\t\tborder: solid 1px var(--border-secondary);\n\t\tbackground: var(--bg-secondary);\n\t\tborder-radius: 4px;\n\t\tposition: relative;\n\t}\n\t.number {\n\t\ttext-align: center;\n\t\tfont-weight: bold;\n\t\tfont-size: 1.2em;\n\t\tmargin-bottom: 10px;\n\t}\n\t.left,\n\t.right {\n\t\tcursor: pointer;\n\t\tposition: absolute;\n\t\tborder-radius: 4px;\n\t\tbackground: var(--fg-primary);\n\t\tfill: var(--bg-primary);\n\t\theight: 45px;\n\t\tpadding: 10px 0;\n\t\ttop: 50%;\n\t}\n\t.left {\n\t\tleft: 0;\n\t\ttransform: translate(-50%, -50%);\n\t}\n\t.right {\n\t\tright: 0;\n\t\ttransform: translate(50%, -50%);\n\t}\n\t.tip {\n\t\ttext-align: center;\n\t\tmin-height: 70px;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getContext } from \"svelte\";\n\timport { GameMode } from \"../../enums\";\n\timport { mode } from \"../../stores\";\n\timport { modeData } from \"../../utils\";\n\timport GameIcon from \"../GameIcon.svelte\";\n\timport type Toaster from \"./Toaster.svelte\";\n\n\texport let wordNumber: number;\n\n\tconst toaster: Toaster = getContext(\"toaster\");\n\n\tfunction share() {\n\t\ttoaster.pop(\"Copied\");\n\t\tnavigator.clipboard.writeText(`${window.location.href}/${wordNumber}`);\n\t}\n</script>\n\n<div on:click={share}>\n\t<GameIcon>\n\t\t<path\n\t\t\td=\"M4.167 4.167c-1.381 1.381-1.381 3.619 0 5L6.5 11.5a1.18 1.18 0 0 1 0 1.667 1.18 1.18 0 0 1-1.667 0L2.5 10.833C.199 8.532.199 4.801 2.5 2.5s6.032-2.301 8.333 0l3.333 3.333c2.301 2.301 2.301 6.032 0 8.333a1.18 1.18 0 0 1-1.667 0 1.18 1.18 0 0 1 0-1.667c1.381-1.381 1.381-3.619 0-5L9.167 4.167c-1.381-1.381-3.619-1.381-5 0zm5.667 14c-2.301-2.301-2.301-6.032 0-8.333a1.18 1.18 0 0 1 1.667 0 1.18 1.18 0 0 1 0 1.667c-1.381 1.381-1.381 3.619 0 5l3.333 3.333c1.381 1.381 3.619 1.381 5 0s1.381-3.619 0-5L17.5 12.5a1.18 1.18 0 0 1 0-1.667 1.18 1.18 0 0 1 1.667 0l2.333 2.333c2.301 2.301 2.301 6.032 0 8.333s-6.032 2.301-8.333 0l-3.333-3.333z\"\n\t\t/>\n\t</GameIcon>\n\tCopy link to this game ({modeData.modes[$mode].name} #{wordNumber})\n</div>\n\n<style>\n\tdiv {\n\t\tcolor: var(--fg-secondary);\n\t\tfont-size: var(--fs-regular);\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tgap: 10px;\n\t\tcursor: pointer;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let stat: number | string;\n\texport let name: string;\n</script>\n\n<section>\n\t<div class=\"stat\">{stat}</div>\n\t<div class=\"name\">{name}</div>\n</section>\n\n<style>\n\tsection {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\twidth: 60px;\n\t}\n\t.stat {\n\t\tfont-size: var(--fs-large);\n\t}\n\t.name {\n\t\ttext-align: center;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { mode } from \"../../../stores\";\n\timport { modeData } from \"../../../utils\";\n\n\timport Stat from \"./Stat.svelte\";\n\texport let data: Stats;\n\n\tlet stats: [string, string | number][];\n\t$: {\n\t\tstats = [\n\t\t\t[\"Played\", data.played],\n\t\t\t[\"Win %\", Math.round(((data.played - data.guesses.fail) / data.played) * 100) || 0],\n\t\t\t[\n\t\t\t\t\"Average Guesses\",\n\t\t\t\t(\n\t\t\t\t\tObject.entries(data.guesses).reduce((a, b) => {\n\t\t\t\t\t\tif (!isNaN(parseInt(b[0]))) {\n\t\t\t\t\t\t\treturn a + parseInt(b[0]) * b[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn a;\n\t\t\t\t\t}, 0) / data.played || 0\n\t\t\t\t).toFixed(1),\n\t\t\t],\n\t\t];\n\t\tif (data.guesses.fail > 0) {\n\t\t\tstats.push([\"Lost\", data.guesses.fail]);\n\t\t}\n\t\tif (\"streak\" in data) {\n\t\t\tstats.push([\"Current Streak\", data.streak]);\n\t\t\tstats.push([\"Max Streak\", data.maxStreak]);\n\t\t}\n\t}\n</script>\n\n<h3>Statistics ({modeData.modes[$mode].name})</h3>\n<div>\n\t{#each stats as stat}\n\t\t<Stat name={stat[0]} stat={stat[1]} />\n\t{/each}\n</div>\n\n<style>\n\tdiv {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tgap: 8px;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { failed } from \"../../../utils\";\n\n\texport let game: GameState;\n\texport let distribution: Guesses;\n\n\t$: max = Object.entries(distribution).reduce((p, c) => {\n\t\tif (!isNaN(Number(c[0]))) return Math.max(c[1], p);\n\t\treturn p;\n\t}, 1);\n</script>\n\n<h3>guess distribution</h3>\n<div class=\"container\">\n\t{#each Object.entries(distribution) as guess, i (guess[0])}\n\t\t{@const g = Number(guess[0])}\n\t\t{#if !isNaN(g)}\n\t\t\t<div class=\"graph\">\n\t\t\t\t<span class=\"guess\">{guess[0]}</span>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"bar\"\n\t\t\t\t\tclass:this={g === game.guesses && !game.active && !failed(game)}\n\t\t\t\t\tstyle=\"width: {(guess[1] / max) * 100}%;\"\n\t\t\t\t>\n\t\t\t\t\t{guess[1]}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/if}\n\t{/each}\n</div>\n\n<style>\n\t.guess {\n\t\tdisplay: grid;\n\t\tplace-items: center;\n\t}\n\t.container {\n\t\twidth: 80%;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 4px;\n\t}\n\t.graph {\n\t\theight: 20px;\n\t\tdisplay: flex;\n\t\tgap: 4px;\n\t}\n\t.bar {\n\t\tmin-width: 7%;\n\t\ttransition: width 0.3s ease-out;\n\t\tbackground: var(--color-absent);\n\t\tcolor: white;\n\t\tfont-weight: bold;\n\t\tdisplay: flex;\n\t\tjustify-content: end;\n\t\talign-items: center;\n\t\tpadding-right: min(0.8rem, 1vw);\n\t}\n\t.bar.this {\n\t\tbackground: var(--color-correct);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { fade } from \"svelte/transition\";\n\timport Header from \"./Header.svelte\";\n\timport { Board } from \"./board\";\n\timport Keyboard from \"./keyboard\";\n\timport Modal from \"./Modal.svelte\";\n\timport { getContext, onMount, setContext } from \"svelte\";\n\timport Settings from \"./settings\";\n\timport {\n\t\tShare,\n\t\tSeperator,\n\t\tDefinition,\n\t\tTutorial,\n\t\tStatistics,\n\t\tDistribution,\n\t\tTimer,\n\t\tToaster,\n\t\tShareGame,\n\t\tTips,\n\t} from \"./widgets\";\n\timport {\n\t\tcontractNum,\n\t\tDELAY_INCREMENT,\n\t\tPRAISE,\n\t\tgetState,\n\t\tmodeData,\n\t\tcheckHardMode,\n\t\tROWS,\n\t\tCOLS,\n\t\tnewSeed,\n\t\tcreateNewGame,\n\t\tseededRandomInt,\n\t\tcreateLetterStates,\n\t\twords,\n\t} from \"../utils\";\n\timport { letterStates, settings, mode } from \"../stores\";\n\n\texport let word: string;\n\texport let stats: Stats;\n\texport let game: GameState;\n\texport let toaster: Toaster;\n\n\tsetContext(\"toaster\", toaster);\n\tconst version = getContext<string>(\"version\");\n\n\t// implement transition delay on keys\n\tconst delay = DELAY_INCREMENT * ROWS + 800;\n\n\tlet showTutorial = $settings.tutorial === 3;\n\tlet showSettings = false;\n\tlet showStats = false;\n\tlet showRefresh = false;\n\n\tlet board: Board;\n\tlet timer: Timer;\n\tlet tips: Tips;\n\n\tlet tip = 0;\n\t$: if (showSettings && tips) tip = Math.floor(tips.length * Math.random());\n\n\tfunction submitWord() {\n\t\tif (game.board.words[game.guesses].length !== COLS) {\n\t\t\ttoaster.pop(\"Not enough letters\");\n\t\t\tboard.shake(game.guesses);\n\t\t} else  if (words.contains(game.board.words[game.guesses])) {\n\t\t\tif (game.guesses > 0) {\n\t\t\t\tconst hm = checkHardMode(game.board, game.guesses);\n\t\t\t\tif ($settings.hard[$mode]) {\n\t\t\t\t\tif (hm.type === \"🟩\") {\n\t\t\t\t\t\ttoaster.pop(\n\t\t\t\t\t\t\t`${contractNum(hm.pos + 1)} letter must be ${hm.char.toUpperCase()}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tboard.shake(game.guesses);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (hm.type === \"🟨\") {\n\t\t\t\t\t\ttoaster.pop(`Guess must contain ${hm.char.toUpperCase()}`);\n\t\t\t\t\t\tboard.shake(game.guesses);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (hm.type !== \"⬛\") {\n\t\t\t\t\tgame.validHard = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst state = getState(word, game.board.words[game.guesses]);\n\t\t\tgame.board.state[game.guesses] = state;\n\t\t\tstate.forEach((e, i) => {\n\t\t\t\tconst ls = $letterStates[game.board.words[game.guesses][i]];\n\t\t\t\tif (ls === \"🔳\" || e === \"🟩\") {\n\t\t\t\t\t$letterStates[game.board.words[game.guesses][i]] = e;\n\t\t\t\t}\n\t\t\t});\n\t\t\t++game.guesses;\n\t\t\tif (game.board.words[game.guesses - 1] === word) win();\n\t\t\telse if (game.guesses === ROWS) lose();\n\t\t} else {\n\t\t\ttoaster.pop(\"Not in word list\");\n\t\t\tboard.shake(game.guesses);\n\t\t}\n\t}\n\n\tfunction win() {\n\t\tboard.bounce(game.guesses - 1);\n\t\tgame.active = false;\n\t\tsetTimeout(\n\t\t\t() => toaster.pop(PRAISE[game.guesses - 1]),\n\t\t\tDELAY_INCREMENT * COLS + DELAY_INCREMENT\n\t\t);\n\t\tsetTimeout(setShowStatsTrue, delay * 1.4);\n\t\tif (!modeData.modes[$mode].historical) {\n\t\t\t++stats.guesses[game.guesses];\n\t\t\t++stats.played;\n\t\t\tif (\"streak\" in stats) {\n\t\t\t\tstats.streak =\n\t\t\t\t\tmodeData.modes[$mode].seed - stats.lastGame > modeData.modes[$mode].unit\n\t\t\t\t\t\t? 1\n\t\t\t\t\t\t: stats.streak + 1;\n\t\t\t\tif (stats.streak > stats.maxStreak) stats.maxStreak = stats.streak;\n\t\t\t}\n\t\t\tstats.lastGame = modeData.modes[$mode].seed;\n\t\t\tlocalStorage.setItem(`stats-${$mode}`, JSON.stringify(stats));\n\t\t}\n\t}\n\n\tfunction lose() {\n\t\tgame.active = false;\n\t\tsetTimeout(setShowStatsTrue, delay);\n\t\tif (!modeData.modes[$mode].historical) {\n\t\t\t++stats.guesses.fail;\n\t\t\t++stats.played;\n\t\t\tif (\"streak\" in stats) stats.streak = 0;\n\t\t\tstats.lastGame = modeData.modes[$mode].seed;\n\t\t\tlocalStorage.setItem(`stats-${$mode}`, JSON.stringify(stats));\n\t\t}\n\t}\n\n\tfunction concede() {\n\t\tshowSettings = false;\n\t\tsetTimeout(setShowStatsTrue, DELAY_INCREMENT);\n\t\tlose();\n\t}\n\n\tfunction reload() {\n\t\tmodeData.modes[$mode].historical = false;\n\t\tmodeData.modes[$mode].seed = newSeed($mode);\n\t\tgame = createNewGame($mode);\n\t\tif (modeData.modes[$mode].name == \"Final\") {\n\t\t\tword = words.depart[seededRandomInt(0, words.depart.length, modeData.modes[$mode].seed)];\n\t\t} else {\n\t\t\tword = words.words[seededRandomInt(0, words.words.length, modeData.modes[$mode].seed)];\n\t\t}\n\t\t$letterStates = createLetterStates();\n\t\tshowStats = false;\n\t\tshowRefresh = false;\n\t\ttimer.reset($mode);\n\t}\n\n\tfunction setShowStatsTrue() {\n\t\tif (!game.active) showStats = true;\n\t}\n\n\tonMount(() => {\n\t\tif (!game.active) setTimeout(setShowStatsTrue, delay);\n\t});\n\t// $: toaster.pop(word);\n</script>\n\n<svelte:body on:click={board.hideCtx} on:contextmenu={board.hideCtx} />\n\n<main class:guesses={game.guesses !== 0} style=\"--rows: {ROWS}; --cols: {COLS}\">\n\t<Header\n\t\tbind:showRefresh\n\t\ttutorial={$settings.tutorial === 2}\n\t\ton:closeTutPopUp|once={() => ($settings.tutorial = 1)}\n\t\tshowStats={stats.played > 0 || (modeData.modes[$mode].historical && !game.active)}\n\t\ton:stats={() => (showStats = true)}\n\t\ton:tutorial={() => (showTutorial = true)}\n\t\ton:settings={() => (showSettings = true)}\n\t\ton:reload={reload}\n\t/>\n\t<Board\n\t\tbind:this={board}\n\t\tbind:value={game.board.words}\n\t\ttutorial={$settings.tutorial === 1}\n\t\ton:closeTutPopUp|once={() => ($settings.tutorial = 0)}\n\t\tboard={game.board}\n\t\tguesses={game.guesses}\n\t\ticon={modeData.modes[$mode].icon}\n\t/>\n\t<Keyboard\n\t\ton:keystroke={() => {\n\t\t\tif ($settings.tutorial) $settings.tutorial = 0;\n\t\t\tboard.hideCtx();\n\t\t}}\n\t\tbind:value={game.board.words[game.guesses === ROWS ? 0 : game.guesses]}\n\t\ton:submitWord={submitWord}\n\t\ton:esc={() => {\n\t\t\tshowTutorial = false;\n\t\t\tshowStats = false;\n\t\t\tshowSettings = false;\n\t\t}}\n\t\tdisabled={!game.active || $settings.tutorial === 3}\n\t/>\n</main>\n\n<Modal\n\tbind:visible={showTutorial}\n\ton:close|once={() => $settings.tutorial === 3 && --$settings.tutorial}\n\tfullscreen={$settings.tutorial === 0}\n>\n\t<Tutorial visible={showTutorial} />\n</Modal>\n\n<Modal bind:visible={showStats}>\n\t{#if modeData.modes[$mode].historical}\n\t\t<h2 class=\"historical\">Statistics not available for historical games</h2>\n\t{:else}\n\t\t<Statistics data={stats} />\n\t\t<Distribution distribution={stats.guesses} {game} />\n\t{/if}\n\t<Seperator visible={!game.active}>\n\t\t<Timer\n\t\t\tslot=\"1\"\n\t\t\tbind:this={timer}\n\t\t\ton:timeup={() => (showRefresh = true)}\n\t\t\ton:reload={reload}\n\t\t/>\n\t\t<Share slot=\"2\" state={game} />\n\t</Seperator>\n\t<ShareGame wordNumber={game.wordNumber} />\n\t{#if !game.active}\n\t\t<Definition {word} alternates={2} />\n\t{:else}\n\t\t<!-- Fade with delay is to prevent a bright red button from appearing as soon as refresh is pressed -->\n\t\t<div in:fade={{ delay: 300 }} class=\"concede\" on:click={concede}>give up</div>\n\t{/if}\n</Modal>\n\n<Modal fullscreen={true} bind:visible={showSettings}>\n\t<Settings state={game} />\n\t{#if game.active}\n\t\t<div class=\"concede\" on:click={concede}>give up</div>\n\t{/if}\n\t<Tips bind:this={tips} index={tip} />\n\n\t<div slot=\"footer\">\n\t\t<a href=\"https://www.nytimes.com/games/wordle/\" target=\"_blank\">Original Wordle</a>\n\t\t<a href=\"https://mikhad.github.io/wordle/\" target=\"_blank\">Wordle+</a>\n\t\t<div>\n\t\t\t<div>v{version}</div>\n\t\t\t<div\n\t\t\t\ttitle=\"double click to reset your stats\"\n\t\t\t\tclass=\"word\"\n\t\t\t\ton:dblclick={() => {\n\t\t\t\t\tlocalStorage.clear();\n\t\t\t\t\ttoaster.pop(\"localStorage cleared\");\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{modeData.modes[$mode].name} word #{game.wordNumber}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</Modal>\n\n<style lang=\"scss\">\n\tmain {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\theight: 100%;\n\t\tmax-width: var(--game-width);\n\t\tmargin: auto;\n\t\tposition: relative;\n\t}\n\t.historical {\n\t\ttext-align: center;\n\t\tmargin-top: 10px;\n\t\tpadding: 0 20px;\n\t\ttext-transform: uppercase;\n\t}\n\t.concede {\n\t\tmargin-top: 15px;\n\t\ttext-transform: uppercase;\n\t\tcolor: #fff;\n\t\tcursor: pointer;\n\t\tfont-size: var(--fs-medium);\n\t\tfont-weight: bold;\n\t\tpadding: 15px;\n\t\tborder-radius: 4px;\n\t\ttext-align: center;\n\t\tbackground-color: var(--red);\n\t\t&:hover {\n\t\t\topacity: 0.9;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport {\n\t\tmodeData,\n\t\tseededRandomInt,\n\t\tcreateDefaultStats,\n\t\tcreateNewGame,\n\t\tcreateDefaultSettings,\n\t\tcreateLetterStates,\n\t\tROWS,\n\t\tgetWordNumber,\n\t\twords,\n\t} from \"./utils\";\n\timport Game from \"./components/Game.svelte\";\n\timport { letterStates, settings, mode } from \"./stores\";\n\timport { GameMode } from \"./enums\";\n\timport { Toaster } from \"./components/widgets\";\n\timport { setContext } from \"svelte\";\n\n\texport let version: string;\n\tsetContext(\"version\", version);\n\tlocalStorage.setItem(\"version\", version);\n\n\tlet stats: Stats;\n\tlet word: string;\n\tlet state: GameState;\n\n\tsettings.set(\n\t\t(JSON.parse(localStorage.getItem(\"settings\")) as Settings) || createDefaultSettings()\n\t);\n\tsettings.subscribe((s) => localStorage.setItem(\"settings\", JSON.stringify(s)));\n\n\tconst hash = window.location.hash.slice(1).split(\"/\");\n\tconst modeVal: GameMode = !isNaN(GameMode[hash[0]])\n\t\t? GameMode[hash[0]]\n\t\t: parseInt(localStorage.getItem(\"mode\")) || modeData.default;\n\tmode.set(modeVal);\n\t// If this is a link to a specific word make sure that that is the word\n\tif (!isNaN(parseInt(hash[1])) && parseInt(hash[1]) < getWordNumber(modeVal)) {\n\t\tmodeData.modes[modeVal].seed =\n\t\t\t(parseInt(hash[1]) - 1) * modeData.modes[modeVal].unit + modeData.modes[modeVal].start;\n\t\tmodeData.modes[modeVal].historical = true;\n\t}\n\tmode.subscribe((m) => {\n\t\tlocalStorage.setItem(\"mode\", `${m}`);\n\t\twindow.location.hash = GameMode[m];\n\t\tstats = (JSON.parse(localStorage.getItem(`stats-${m}`)) as Stats) || createDefaultStats(m);\n\t\tif (modeData.modes[m].name == \"Final\") {\n\t\t\tword = words.depart[seededRandomInt(0, words.depart.length, modeData.modes[m].seed)];\n\t\t} else {\n\t\t\tword = words.words[seededRandomInt(0, words.words.length, modeData.modes[m].seed)];\n\t\t}\n\t\tlet temp: GameState;\n\t\tif (modeData.modes[m].historical === true) {\n\t\t\ttemp = JSON.parse(localStorage.getItem(`state-${m}-h`));\n\t\t\tif (!temp || temp.wordNumber !== getWordNumber(m)) {\n\t\t\t\tstate = createNewGame(m);\n\t\t\t} else {\n\t\t\t\tstate = temp;\n\t\t\t}\n\t\t} else {\n\t\t\ttemp = JSON.parse(localStorage.getItem(`state-${m}`));\n\t\t\tif (!temp || modeData.modes[m].seed - temp.time >= modeData.modes[m].unit) {\n\t\t\t\tstate = createNewGame(m);\n\t\t\t} else {\n\t\t\t\t// This is for backwards compatibility, can be removed in a day\n\t\t\t\tif (!temp.wordNumber) {\n\t\t\t\t\ttemp.wordNumber = getWordNumber(m);\n\t\t\t\t}\n\t\t\t\tstate = temp;\n\t\t\t}\n\t\t}\n\t\t// Set the letter states when data for a new game mode is loaded so the keyboard is correct\n\t\tconst letters = createLetterStates();\n\t\tfor (let row = 0; row < ROWS; ++row) {\n\t\t\tfor (let col = 0; col < state.board.words[row].length; ++col) {\n\t\t\t\tif (\n\t\t\t\t\tletters[state.board.words[row][col]] === \"🔳\" ||\n\t\t\t\t\tstate.board.state[row][col] === \"🟩\"\n\t\t\t\t) {\n\t\t\t\t\tletters[state.board.words[row][col]] = state.board.state[row][col];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tletterStates.set(letters);\n\t});\n\n\t$: saveState(state);\n\tfunction saveState(state: GameState) {\n\t\tif (modeData.modes[$mode].historical) {\n\t\t\tlocalStorage.setItem(`state-${$mode}-h`, JSON.stringify(state));\n\t\t} else {\n\t\t\tlocalStorage.setItem(`state-${$mode}`, JSON.stringify(state));\n\t\t}\n\t}\n\tlet toaster: Toaster;\n\n\tdocument.title = \"WorData | An infinite data word guessing game\";\n</script>\n\n<Toaster bind:this={toaster} />\n{#if toaster}\n\t<Game {stats} {word} {toaster} bind:game={state} />\n{/if}\n","//! IF ANYTHING IN THIS FILE IS CHANGED MAKE SURE setVersion.js HAS ALSO BEEN UPDATED\nimport App from \"./App.svelte\";\nexport default new App({\n    target: document.body,\n    props: {\n        version: \"1.3.3\",\n    }\n});\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","once","ran","args","call","this","null_to_empty","value","set_store_value","ret","set","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","abort","append","target","node","appendChild","get_root_for_style","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","sheet","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","name","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","self","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_style","key","important","removeProperty","setProperty","select_option","select","mounting","option","__value","selected","selectedIndex","toggle_class","toggle","classList","custom_event","type","detail","bubbles","cancelable","e","createEvent","initCustomEvent","construct_svelte_component","props","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","ownerNode","clear","set_current_component","get_current_component","Error","onMount","on_mount","onDestroy","createEventDispatcher","defaultPrevented","setContext","context","getContext","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","has","fragment","before_update","after_update","wait","then","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","tick","css","handle_promise","token","index","resolved","child_ctx","current","needs_flush","blocks","m","mount","error","catch","hasCatch","pending","destroy_block","lookup","bind","bound","create_component","mount_component","customElement","new_on_destroy","map","destroy_component","filtered","targets","flush_render_callbacks","make_dirty","fill","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","$destroy","$on","splice","$set","$$props","obj","$$set","keys","global","module","define","Alea","seed","me","mash","n","String","h","Mash","s0","s1","s2","copy","impl","opts","xg","state","prng","int32","double","quick","exports","amd","alea","XorGen","strseed","y","z","w","result","xor128","v","xorwow","X","j","xorshift7","limit","xor4096","floor","tychei","pool","math","nodecrypto","width","rngname","startdenom","pow","significance","overflow","mask","seedrandom","shortseed","mixkey","flatten","entropy","tostring","out","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","browser","navigator","plugins","screen","autoseed","arc4","ARC4","g","S","pass","is_math_call","keylen","s","count","depth","prop","typ","smear","stringseed","fromCharCode","apply","random","require","ex","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","sr","require$$6","GameMode","ms","words","valid","depart","ROWS","COLS","wordList","contains","word","includes","Tile","constructor","notSet","not","char","WordData","letterCounts","col","confirmCount","countConfirmed","val","setCount","incrementCount","inGlobalNotList","lettersNotAt","pos","countOccurences","arr","reduce","newSeed","mode","daily","UTC","getTimezoneOffset","MINUTE","DAY","hourly","HOUR","infinite","final","SECOND","modeData","default","modes","unit","historical","streak","useTimeZone","icon","getWordNumber","round","seededRandomInt","min","rng","DELAY_INCREMENT","PRAISE","createNewGame","guesses","time","wordNumber","validHard","board","createDefaultSettings","hard","dark","colorblind","tutorial","timeRemaining","failed","repeat","cubicOut","fade","linear","getComputedStyle","opacity","scale","target_opacity","transform","sd","od","_t","u","subscriber_queue","writable","stop","subscribers","new_value","run_queue","subscriber","invalidate","letterStates","q","settings","svg","arguments","onClick","path","path_transition","div","create_if_block_2","create_if_block_1","create_if_block","header","div0","h1","div1","showStats","showRefresh","toaster","$$invalidate","$mode","div2","div2_class_value","position","setTimeout","charAt","tile_changes","each_value","each_blocks","num","tiles","bounce","$$value","clientX","clientY","strong","t2_value","meanings","partOfSpeech","definitions","h2","em","ol","t2","t1_value","li","t1","t_value","h4","getWordData","cache","async","fetch","ok","json","alternates","t6_value","t11_value","br0","br1","br2","t6","t11","t4_value","t9_value","t4","t9","pAns","pSols","parseInt","body","getPropertyValue","innerWidth","row_props","row_changes","rows","showCtx","cx","cy","match","wd","row","occured","exp","RegExp","test","chars","occurences","getRowData","shake","$$self","value$1","letter","key_changes","each_value_2","each_value_1","div3","each_blocks_2","each_blocks_1","disabled","preventChange","appendValue","backspaceValue","ctrlKey","altKey","toLowerCase","visible","fullscreen","dispach","selected_option","querySelector","switch_value","types","switch","Switch","dropdown","DropDown","span","setting1_props","setting2_props","func","h3","setting0_changes","setting1_changes","setting2_changes","documentElement","$settings","remove","localStorage","setItem","JSON","stringify","stats","clipboard","writeText","strong0","div10","div4","div5","div6","div7","div8","div9","div11","t0_value","MS","padStart","t0","countDown","reset","clearInterval","setInterval","div_outro","running","start_time","end_time","create_out_transition","toast","t3_value","t5_value","svg0","path0","svg1","path1","t5","tips","location","href","section","stat","stat_changes","played","fail","entries","isNaN","toFixed","maxStreak","Number","show_if","get_key","old_blocks","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","updates","will_move","did_move","first","new_block","old_block","new_key","old_key","game","distribution","distribution_changes","div_intro","cleanup","started","create_in_transition","seperator_changes","sharegame_changes","if_block","t7_value","a0","a1","t7","main","hideCtx","header_changes","board_1_changes","keyboard_changes","version","timer","showTutorial","showSettings","tip","lose","setShowStatsTrue","lastGame","hm","checkHardMode","contractNum","toUpperCase","guess","charArr","getState","$letterStates","parse","getItem","modeVal","temp","createDefaultStats","letters","title","saveState"],"mappings":"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"}